"use strict";function insertBefore(node, referenceNode, parentNode) {
  if (node.insertInto) {
    return node.insertInto(parentNode, referenceNode);
  }
  return parentNode.insertBefore(
    node,
    referenceNode && referenceNode.startNode || referenceNode
  );
}

function insertAfter(node, referenceNode, parentNode) {
  return insertBefore(
    node,
    referenceNode && referenceNode.nextSibling,
    parentNode
  );
}

function nextSibling(node) {
  var next = node.nextSibling;
  var fragment = next && next.fragment;
  if (fragment) {
    return next === fragment.startNode ? fragment : null;
  }
  return next;
}

function firstChild(node) {
  var next = node.firstChild;
  return next && next.fragment || next;
}

function removeChild(node) {
  if (node.remove) node.remove();else
  node.parentNode.removeChild(node);
}

exports.bg_ = insertBefore;
exports.bh_ = insertAfter;
exports.cp_ = nextSibling;
exports.aB_ = firstChild;
exports.bi_ = removeChild;