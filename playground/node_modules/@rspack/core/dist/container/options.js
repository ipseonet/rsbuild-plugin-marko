"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseOptions = void 0;
const process = (options, normalizeSimple, normalizeOptions, fn) => {
    const array = (items) => {
        for (const item of items) {
            if (typeof item === "string") {
                fn(item, normalizeSimple(item, item));
            }
            else if (item && typeof item === "object") {
                object(item);
            }
            else {
                throw new Error("Unexpected options format");
            }
        }
    };
    const object = (obj) => {
        for (const [key, value] of Object.entries(obj)) {
            if (typeof value === "string" || Array.isArray(value)) {
                fn(key, normalizeSimple(value, key));
            }
            else {
                fn(key, normalizeOptions(value, key));
            }
        }
    };
    if (!options) {
        return;
    }
    if (Array.isArray(options)) {
        array(options);
    }
    else if (typeof options === "object") {
        object(options);
    }
    else {
        throw new Error("Unexpected options format");
    }
};
const parseOptions = (options, normalizeSimple, normalizeOptions) => {
    const items = [];
    process(options, normalizeSimple, normalizeOptions, (key, value) => {
        items.push([key, value]);
    });
    return items;
};
exports.parseOptions = parseOptions;
