/// <reference types="node" />
import type { JsAssetInfo, RawFuncUseCtx } from "@rspack/binding";
import type * as webpackDevServer from "webpack-dev-server";
import { z } from "../../compiled/zod";
import { Chunk } from "../Chunk";
import type { Compilation, PathData } from "../Compilation";
import { Module } from "../Module";
import type * as t from "./types";
export type * from "./types";
declare const path: z.ZodString;
export type Path = z.infer<typeof path>;
declare const pathinfo: z.ZodUnion<[z.ZodBoolean, z.ZodLiteral<"verbose">]>;
export type Pathinfo = z.infer<typeof pathinfo>;
declare const assetModuleFilename: z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>;
export type AssetModuleFilename = z.infer<typeof assetModuleFilename>;
declare const webassemblyModuleFilename: z.ZodString;
export type WebassemblyModuleFilename = z.infer<typeof webassemblyModuleFilename>;
declare const chunkFilename: z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>;
export type ChunkFilename = z.infer<typeof chunkFilename>;
declare const crossOriginLoading: z.ZodUnion<[z.ZodLiteral<false>, z.ZodEnum<["anonymous", "use-credentials"]>]>;
export type CrossOriginLoading = z.infer<typeof crossOriginLoading>;
declare const cssFilename: z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>;
export type CssFilename = z.infer<typeof cssFilename>;
declare const cssChunkFilename: z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>;
export type CssChunkFilename = z.infer<typeof cssChunkFilename>;
declare const hotUpdateChunkFilename: z.ZodString;
export type HotUpdateChunkFilename = z.infer<typeof hotUpdateChunkFilename>;
declare const hotUpdateMainFilename: z.ZodString;
export type HotUpdateMainFilename = z.infer<typeof hotUpdateMainFilename>;
declare const hotUpdateGlobal: z.ZodString;
export type HotUpdateGlobal = z.infer<typeof hotUpdateGlobal>;
declare const uniqueName: z.ZodString;
export type UniqueName = z.infer<typeof uniqueName>;
declare const chunkLoadingGlobal: z.ZodString;
export type ChunkLoadingGlobal = z.infer<typeof chunkLoadingGlobal>;
declare const enabledLibraryTypes: z.ZodArray<z.ZodUnion<[z.ZodEnum<["var", "module", "assign", "assign-properties", "this", "window", "self", "global", "commonjs", "commonjs2", "commonjs-module", "commonjs-static", "amd", "amd-require", "umd", "umd2", "jsonp", "system"]>, z.ZodString]>, "many">;
export type EnabledLibraryTypes = z.infer<typeof enabledLibraryTypes>;
declare const clean: z.ZodBoolean;
export type Clean = z.infer<typeof clean>;
declare const outputModule: z.ZodBoolean;
export type OutputModule = z.infer<typeof outputModule>;
declare const strictModuleExceptionHandling: z.ZodBoolean;
export type StrictModuleExceptionHandling = z.infer<typeof strictModuleExceptionHandling>;
declare const strictModuleErrorHandling: z.ZodBoolean;
export type StrictModuleErrorHandling = z.infer<typeof strictModuleErrorHandling>;
declare const globalObject: z.ZodString;
export type GlobalObject = z.infer<typeof globalObject>;
declare const enabledWasmLoadingTypes: z.ZodArray<z.ZodUnion<[z.ZodEnum<["fetch-streaming", "fetch", "async-node"]>, z.ZodString]>, "many">;
export type EnabledWasmLoadingTypes = z.infer<typeof enabledWasmLoadingTypes>;
declare const importFunctionName: z.ZodString;
export type ImportFunctionName = z.infer<typeof importFunctionName>;
declare const importMetaName: z.ZodString;
export type ImportMetaName = z.infer<typeof importMetaName>;
declare const iife: z.ZodBoolean;
export type Iife = z.infer<typeof iife>;
declare const enabledChunkLoadingTypes: z.ZodArray<z.ZodUnion<[z.ZodEnum<["jsonp", "import-scripts", "require", "async-node", "import"]>, z.ZodString]>, "many">;
export type EnabledChunkLoadingTypes = z.infer<typeof enabledChunkLoadingTypes>;
declare const chunkFormat: z.ZodUnion<[z.ZodLiteral<false>, z.ZodString]>;
export type ChunkFormat = z.infer<typeof chunkFormat>;
declare const workerPublicPath: z.ZodString;
export type WorkerPublicPath = z.infer<typeof workerPublicPath>;
declare const trustedTypes: z.ZodObject<{
    policyName: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    policyName?: string | undefined;
}, {
    policyName?: string | undefined;
}>;
export type TrustedTypes = z.infer<typeof trustedTypes>;
declare const hashDigest: z.ZodString;
export type HashDigest = z.infer<typeof hashDigest>;
declare const hashDigestLength: z.ZodNumber;
export type HashDigestLength = z.infer<typeof hashDigestLength>;
declare const hashFunction: z.ZodEnum<["md4", "xxhash64"]>;
export type HashFunction = z.infer<typeof hashFunction>;
declare const hashSalt: z.ZodString;
export type HashSalt = z.infer<typeof hashSalt>;
declare const sourceMapFilename: z.ZodString;
export type SourceMapFilename = z.infer<typeof sourceMapFilename>;
declare const devtoolNamespace: z.ZodString;
export type DevtoolNamespace = z.infer<typeof devtoolNamespace>;
declare const devtoolModuleFilenameTemplate: z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodAny], null>, z.ZodAny>]>;
export type DevtoolModuleFilenameTemplate = z.infer<typeof devtoolModuleFilenameTemplate>;
declare const devtoolFallbackModuleFilenameTemplate: z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodAny], null>, z.ZodAny>]>;
export type DevtoolFallbackModuleFilenameTemplate = z.infer<typeof devtoolFallbackModuleFilenameTemplate>;
declare const environment: z.ZodObject<{
    arrowFunction: z.ZodOptional<z.ZodBoolean>;
    asyncFunction: z.ZodOptional<z.ZodBoolean>;
    bigIntLiteral: z.ZodOptional<z.ZodBoolean>;
    const: z.ZodOptional<z.ZodBoolean>;
    destructuring: z.ZodOptional<z.ZodBoolean>;
    document: z.ZodOptional<z.ZodBoolean>;
    dynamicImport: z.ZodOptional<z.ZodBoolean>;
    dynamicImportInWorker: z.ZodOptional<z.ZodBoolean>;
    forOf: z.ZodOptional<z.ZodBoolean>;
    globalThis: z.ZodOptional<z.ZodBoolean>;
    module: z.ZodOptional<z.ZodBoolean>;
    nodePrefixForCoreModules: z.ZodOptional<z.ZodBoolean>;
    optionalChaining: z.ZodOptional<z.ZodBoolean>;
    templateLiteral: z.ZodOptional<z.ZodBoolean>;
}, "strict", z.ZodTypeAny, {
    module?: boolean | undefined;
    arrowFunction?: boolean | undefined;
    asyncFunction?: boolean | undefined;
    bigIntLiteral?: boolean | undefined;
    const?: boolean | undefined;
    destructuring?: boolean | undefined;
    document?: boolean | undefined;
    dynamicImport?: boolean | undefined;
    dynamicImportInWorker?: boolean | undefined;
    forOf?: boolean | undefined;
    globalThis?: boolean | undefined;
    nodePrefixForCoreModules?: boolean | undefined;
    optionalChaining?: boolean | undefined;
    templateLiteral?: boolean | undefined;
}, {
    module?: boolean | undefined;
    arrowFunction?: boolean | undefined;
    asyncFunction?: boolean | undefined;
    bigIntLiteral?: boolean | undefined;
    const?: boolean | undefined;
    destructuring?: boolean | undefined;
    document?: boolean | undefined;
    dynamicImport?: boolean | undefined;
    dynamicImportInWorker?: boolean | undefined;
    forOf?: boolean | undefined;
    globalThis?: boolean | undefined;
    nodePrefixForCoreModules?: boolean | undefined;
    optionalChaining?: boolean | undefined;
    templateLiteral?: boolean | undefined;
}>;
export type Environment = z.infer<typeof environment>;
declare const output: z.ZodObject<{
    path: z.ZodOptional<z.ZodString>;
    pathinfo: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodLiteral<"verbose">]>>;
    clean: z.ZodOptional<z.ZodBoolean>;
    publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
    filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
    chunkFilename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
    crossOriginLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodEnum<["anonymous", "use-credentials"]>]>>;
    cssFilename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
    cssHeadDataCompression: z.ZodOptional<z.ZodBoolean>;
    cssChunkFilename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
    hotUpdateMainFilename: z.ZodOptional<z.ZodString>;
    hotUpdateChunkFilename: z.ZodOptional<z.ZodString>;
    hotUpdateGlobal: z.ZodOptional<z.ZodString>;
    assetModuleFilename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
    uniqueName: z.ZodOptional<z.ZodString>;
    chunkLoadingGlobal: z.ZodOptional<z.ZodString>;
    enabledLibraryTypes: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<["var", "module", "assign", "assign-properties", "this", "window", "self", "global", "commonjs", "commonjs2", "commonjs-module", "commonjs-static", "amd", "amd-require", "umd", "umd2", "jsonp", "system"]>, z.ZodString]>, "many">>;
    library: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, z.ZodObject<{
        amd: z.ZodOptional<z.ZodString>;
        commonjs: z.ZodOptional<z.ZodString>;
        root: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    }, "strict", z.ZodTypeAny, {
        commonjs?: string | undefined;
        amd?: string | undefined;
        root?: string | string[] | undefined;
    }, {
        commonjs?: string | undefined;
        amd?: string | undefined;
        root?: string | string[] | undefined;
    }>]>, z.ZodObject<{
        amdContainer: z.ZodOptional<z.ZodString>;
        auxiliaryComment: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
            amd: z.ZodOptional<z.ZodString>;
            commonjs: z.ZodOptional<z.ZodString>;
            commonjs2: z.ZodOptional<z.ZodString>;
            root: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            commonjs?: string | undefined;
            amd?: string | undefined;
            commonjs2?: string | undefined;
            root?: string | undefined;
        }, {
            commonjs?: string | undefined;
            amd?: string | undefined;
            commonjs2?: string | undefined;
            root?: string | undefined;
        }>]>>;
        export: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        name: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, z.ZodObject<{
            amd: z.ZodOptional<z.ZodString>;
            commonjs: z.ZodOptional<z.ZodString>;
            root: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        }, "strict", z.ZodTypeAny, {
            commonjs?: string | undefined;
            amd?: string | undefined;
            root?: string | string[] | undefined;
        }, {
            commonjs?: string | undefined;
            amd?: string | undefined;
            root?: string | string[] | undefined;
        }>]>>;
        type: z.ZodUnion<[z.ZodEnum<["var", "module", "assign", "assign-properties", "this", "window", "self", "global", "commonjs", "commonjs2", "commonjs-module", "commonjs-static", "amd", "amd-require", "umd", "umd2", "jsonp", "system"]>, z.ZodString]>;
        umdNamedDefine: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        type: string;
        name?: string | string[] | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            root?: string | string[] | undefined;
        } | undefined;
        amdContainer?: string | undefined;
        auxiliaryComment?: string | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            commonjs2?: string | undefined;
            root?: string | undefined;
        } | undefined;
        export?: string | string[] | undefined;
        umdNamedDefine?: boolean | undefined;
    }, {
        type: string;
        name?: string | string[] | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            root?: string | string[] | undefined;
        } | undefined;
        amdContainer?: string | undefined;
        auxiliaryComment?: string | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            commonjs2?: string | undefined;
            root?: string | undefined;
        } | undefined;
        export?: string | string[] | undefined;
        umdNamedDefine?: boolean | undefined;
    }>]>>>;
    libraryExport: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    libraryTarget: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["var", "module", "assign", "assign-properties", "this", "window", "self", "global", "commonjs", "commonjs2", "commonjs-module", "commonjs-static", "amd", "amd-require", "umd", "umd2", "jsonp", "system"]>, z.ZodString]>>;
    umdNamedDefine: z.ZodOptional<z.ZodBoolean>;
    auxiliaryComment: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
        amd: z.ZodOptional<z.ZodString>;
        commonjs: z.ZodOptional<z.ZodString>;
        commonjs2: z.ZodOptional<z.ZodString>;
        root: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        commonjs?: string | undefined;
        amd?: string | undefined;
        commonjs2?: string | undefined;
        root?: string | undefined;
    }, {
        commonjs?: string | undefined;
        amd?: string | undefined;
        commonjs2?: string | undefined;
        root?: string | undefined;
    }>]>>;
    module: z.ZodOptional<z.ZodBoolean>;
    strictModuleExceptionHandling: z.ZodOptional<z.ZodBoolean>;
    strictModuleErrorHandling: z.ZodOptional<z.ZodBoolean>;
    globalObject: z.ZodOptional<z.ZodString>;
    importFunctionName: z.ZodOptional<z.ZodString>;
    importMetaName: z.ZodOptional<z.ZodString>;
    iife: z.ZodOptional<z.ZodBoolean>;
    wasmLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["fetch-streaming", "fetch", "async-node"]>, z.ZodString]>]>>;
    enabledWasmLoadingTypes: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<["fetch-streaming", "fetch", "async-node"]>, z.ZodString]>, "many">>;
    webassemblyModuleFilename: z.ZodOptional<z.ZodString>;
    chunkFormat: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodString]>>;
    chunkLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["jsonp", "import-scripts", "require", "async-node", "import"]>, z.ZodString]>]>>;
    enabledChunkLoadingTypes: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<["jsonp", "import-scripts", "require", "async-node", "import"]>, z.ZodString]>, "many">>;
    trustedTypes: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<true>, z.ZodString]>, z.ZodObject<{
        policyName: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        policyName?: string | undefined;
    }, {
        policyName?: string | undefined;
    }>]>>;
    sourceMapFilename: z.ZodOptional<z.ZodString>;
    hashDigest: z.ZodOptional<z.ZodString>;
    hashDigestLength: z.ZodOptional<z.ZodNumber>;
    hashFunction: z.ZodOptional<z.ZodEnum<["md4", "xxhash64"]>>;
    hashSalt: z.ZodOptional<z.ZodString>;
    asyncChunks: z.ZodOptional<z.ZodBoolean>;
    workerChunkLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["jsonp", "import-scripts", "require", "async-node", "import"]>, z.ZodString]>]>>;
    workerWasmLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["fetch-streaming", "fetch", "async-node"]>, z.ZodString]>]>>;
    workerPublicPath: z.ZodOptional<z.ZodString>;
    scriptType: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["text/javascript", "module"]>, z.ZodLiteral<false>]>>;
    devtoolNamespace: z.ZodOptional<z.ZodString>;
    devtoolModuleFilenameTemplate: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodAny], null>, z.ZodAny>]>>;
    devtoolFallbackModuleFilenameTemplate: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodAny], null>, z.ZodAny>]>>;
    chunkLoadTimeout: z.ZodOptional<z.ZodNumber>;
    charset: z.ZodOptional<z.ZodBoolean>;
    environment: z.ZodOptional<z.ZodObject<{
        arrowFunction: z.ZodOptional<z.ZodBoolean>;
        asyncFunction: z.ZodOptional<z.ZodBoolean>;
        bigIntLiteral: z.ZodOptional<z.ZodBoolean>;
        const: z.ZodOptional<z.ZodBoolean>;
        destructuring: z.ZodOptional<z.ZodBoolean>;
        document: z.ZodOptional<z.ZodBoolean>;
        dynamicImport: z.ZodOptional<z.ZodBoolean>;
        dynamicImportInWorker: z.ZodOptional<z.ZodBoolean>;
        forOf: z.ZodOptional<z.ZodBoolean>;
        globalThis: z.ZodOptional<z.ZodBoolean>;
        module: z.ZodOptional<z.ZodBoolean>;
        nodePrefixForCoreModules: z.ZodOptional<z.ZodBoolean>;
        optionalChaining: z.ZodOptional<z.ZodBoolean>;
        templateLiteral: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        module?: boolean | undefined;
        arrowFunction?: boolean | undefined;
        asyncFunction?: boolean | undefined;
        bigIntLiteral?: boolean | undefined;
        const?: boolean | undefined;
        destructuring?: boolean | undefined;
        document?: boolean | undefined;
        dynamicImport?: boolean | undefined;
        dynamicImportInWorker?: boolean | undefined;
        forOf?: boolean | undefined;
        globalThis?: boolean | undefined;
        nodePrefixForCoreModules?: boolean | undefined;
        optionalChaining?: boolean | undefined;
        templateLiteral?: boolean | undefined;
    }, {
        module?: boolean | undefined;
        arrowFunction?: boolean | undefined;
        asyncFunction?: boolean | undefined;
        bigIntLiteral?: boolean | undefined;
        const?: boolean | undefined;
        destructuring?: boolean | undefined;
        document?: boolean | undefined;
        dynamicImport?: boolean | undefined;
        dynamicImportInWorker?: boolean | undefined;
        forOf?: boolean | undefined;
        globalThis?: boolean | undefined;
        nodePrefixForCoreModules?: boolean | undefined;
        optionalChaining?: boolean | undefined;
        templateLiteral?: boolean | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    module?: boolean | undefined;
    filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    environment?: {
        module?: boolean | undefined;
        arrowFunction?: boolean | undefined;
        asyncFunction?: boolean | undefined;
        bigIntLiteral?: boolean | undefined;
        const?: boolean | undefined;
        destructuring?: boolean | undefined;
        document?: boolean | undefined;
        dynamicImport?: boolean | undefined;
        dynamicImportInWorker?: boolean | undefined;
        forOf?: boolean | undefined;
        globalThis?: boolean | undefined;
        nodePrefixForCoreModules?: boolean | undefined;
        optionalChaining?: boolean | undefined;
        templateLiteral?: boolean | undefined;
    } | undefined;
    chunkFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    path?: string | undefined;
    auxiliaryComment?: string | {
        commonjs?: string | undefined;
        amd?: string | undefined;
        commonjs2?: string | undefined;
        root?: string | undefined;
    } | undefined;
    umdNamedDefine?: boolean | undefined;
    chunkLoading?: string | false | undefined;
    asyncChunks?: boolean | undefined;
    wasmLoading?: string | false | undefined;
    library?: string | string[] | {
        commonjs?: string | undefined;
        amd?: string | undefined;
        root?: string | string[] | undefined;
    } | {
        type: string;
        name?: string | string[] | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            root?: string | string[] | undefined;
        } | undefined;
        amdContainer?: string | undefined;
        auxiliaryComment?: string | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            commonjs2?: string | undefined;
            root?: string | undefined;
        } | undefined;
        export?: string | string[] | undefined;
        umdNamedDefine?: boolean | undefined;
    } | undefined;
    pathinfo?: boolean | "verbose" | undefined;
    clean?: boolean | undefined;
    crossOriginLoading?: false | "anonymous" | "use-credentials" | undefined;
    cssFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    cssHeadDataCompression?: boolean | undefined;
    cssChunkFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    hotUpdateMainFilename?: string | undefined;
    hotUpdateChunkFilename?: string | undefined;
    hotUpdateGlobal?: string | undefined;
    assetModuleFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    uniqueName?: string | undefined;
    chunkLoadingGlobal?: string | undefined;
    enabledLibraryTypes?: string[] | undefined;
    libraryExport?: string | string[] | undefined;
    libraryTarget?: string | undefined;
    strictModuleExceptionHandling?: boolean | undefined;
    strictModuleErrorHandling?: boolean | undefined;
    globalObject?: string | undefined;
    importFunctionName?: string | undefined;
    importMetaName?: string | undefined;
    iife?: boolean | undefined;
    enabledWasmLoadingTypes?: string[] | undefined;
    webassemblyModuleFilename?: string | undefined;
    chunkFormat?: string | false | undefined;
    enabledChunkLoadingTypes?: string[] | undefined;
    trustedTypes?: string | true | {
        policyName?: string | undefined;
    } | undefined;
    sourceMapFilename?: string | undefined;
    hashDigest?: string | undefined;
    hashDigestLength?: number | undefined;
    hashFunction?: "xxhash64" | "md4" | undefined;
    hashSalt?: string | undefined;
    workerChunkLoading?: string | false | undefined;
    workerWasmLoading?: string | false | undefined;
    workerPublicPath?: string | undefined;
    scriptType?: false | "module" | "text/javascript" | undefined;
    devtoolNamespace?: string | undefined;
    devtoolModuleFilenameTemplate?: string | ((args_0: any) => any) | undefined;
    devtoolFallbackModuleFilenameTemplate?: string | ((args_0: any) => any) | undefined;
    chunkLoadTimeout?: number | undefined;
    charset?: boolean | undefined;
}, {
    module?: boolean | undefined;
    filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    environment?: {
        module?: boolean | undefined;
        arrowFunction?: boolean | undefined;
        asyncFunction?: boolean | undefined;
        bigIntLiteral?: boolean | undefined;
        const?: boolean | undefined;
        destructuring?: boolean | undefined;
        document?: boolean | undefined;
        dynamicImport?: boolean | undefined;
        dynamicImportInWorker?: boolean | undefined;
        forOf?: boolean | undefined;
        globalThis?: boolean | undefined;
        nodePrefixForCoreModules?: boolean | undefined;
        optionalChaining?: boolean | undefined;
        templateLiteral?: boolean | undefined;
    } | undefined;
    chunkFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    path?: string | undefined;
    auxiliaryComment?: string | {
        commonjs?: string | undefined;
        amd?: string | undefined;
        commonjs2?: string | undefined;
        root?: string | undefined;
    } | undefined;
    umdNamedDefine?: boolean | undefined;
    chunkLoading?: string | false | undefined;
    asyncChunks?: boolean | undefined;
    wasmLoading?: string | false | undefined;
    library?: string | string[] | {
        commonjs?: string | undefined;
        amd?: string | undefined;
        root?: string | string[] | undefined;
    } | {
        type: string;
        name?: string | string[] | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            root?: string | string[] | undefined;
        } | undefined;
        amdContainer?: string | undefined;
        auxiliaryComment?: string | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            commonjs2?: string | undefined;
            root?: string | undefined;
        } | undefined;
        export?: string | string[] | undefined;
        umdNamedDefine?: boolean | undefined;
    } | undefined;
    pathinfo?: boolean | "verbose" | undefined;
    clean?: boolean | undefined;
    crossOriginLoading?: false | "anonymous" | "use-credentials" | undefined;
    cssFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    cssHeadDataCompression?: boolean | undefined;
    cssChunkFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    hotUpdateMainFilename?: string | undefined;
    hotUpdateChunkFilename?: string | undefined;
    hotUpdateGlobal?: string | undefined;
    assetModuleFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    uniqueName?: string | undefined;
    chunkLoadingGlobal?: string | undefined;
    enabledLibraryTypes?: string[] | undefined;
    libraryExport?: string | string[] | undefined;
    libraryTarget?: string | undefined;
    strictModuleExceptionHandling?: boolean | undefined;
    strictModuleErrorHandling?: boolean | undefined;
    globalObject?: string | undefined;
    importFunctionName?: string | undefined;
    importMetaName?: string | undefined;
    iife?: boolean | undefined;
    enabledWasmLoadingTypes?: string[] | undefined;
    webassemblyModuleFilename?: string | undefined;
    chunkFormat?: string | false | undefined;
    enabledChunkLoadingTypes?: string[] | undefined;
    trustedTypes?: string | true | {
        policyName?: string | undefined;
    } | undefined;
    sourceMapFilename?: string | undefined;
    hashDigest?: string | undefined;
    hashDigestLength?: number | undefined;
    hashFunction?: "xxhash64" | "md4" | undefined;
    hashSalt?: string | undefined;
    workerChunkLoading?: string | false | undefined;
    workerWasmLoading?: string | false | undefined;
    workerPublicPath?: string | undefined;
    scriptType?: false | "module" | "text/javascript" | undefined;
    devtoolNamespace?: string | undefined;
    devtoolModuleFilenameTemplate?: string | ((args_0: any) => any) | undefined;
    devtoolFallbackModuleFilenameTemplate?: string | ((args_0: any) => any) | undefined;
    chunkLoadTimeout?: number | undefined;
    charset?: boolean | undefined;
}>;
export type Output = z.infer<typeof output>;
declare const baseRuleSetCondition: z.ZodUnion<[z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodString]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>;
export type RuleSetCondition = z.infer<typeof baseRuleSetCondition> | RuleSetConditions | RuleSetLogicalConditions;
export type RuleSetConditions = RuleSetCondition[];
export type RuleSetLogicalConditions = {
    and?: RuleSetConditions;
    or?: RuleSetConditions;
    not?: RuleSetCondition;
};
declare const ruleSetLoader: z.ZodString;
export type RuleSetLoader = z.infer<typeof ruleSetLoader>;
declare const ruleSetLoaderOptions: z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>]>;
export type RuleSetLoaderOptions = z.infer<typeof ruleSetLoaderOptions>;
declare const ruleSetLoaderWithOptions: z.ZodObject<{
    ident: z.ZodOptional<z.ZodString>;
    loader: z.ZodString;
    options: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>]>>;
}, "strict", z.ZodTypeAny, {
    loader: string;
    options?: string | Record<string, any> | undefined;
    ident?: string | undefined;
}, {
    loader: string;
    options?: string | Record<string, any> | undefined;
    ident?: string | undefined;
}>;
export type RuleSetLoaderWithOptions = z.infer<typeof ruleSetLoaderWithOptions>;
declare const ruleSetUseItem: z.ZodUnion<[z.ZodString, z.ZodObject<{
    ident: z.ZodOptional<z.ZodString>;
    loader: z.ZodString;
    options: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>]>>;
}, "strict", z.ZodTypeAny, {
    loader: string;
    options?: string | Record<string, any> | undefined;
    ident?: string | undefined;
}, {
    loader: string;
    options?: string | Record<string, any> | undefined;
    ident?: string | undefined;
}>]>;
export type RuleSetUseItem = z.infer<typeof ruleSetUseItem>;
declare const ruleSetUse: z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodObject<{
    ident: z.ZodOptional<z.ZodString>;
    loader: z.ZodString;
    options: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>]>>;
}, "strict", z.ZodTypeAny, {
    loader: string;
    options?: string | Record<string, any> | undefined;
    ident?: string | undefined;
}, {
    loader: string;
    options?: string | Record<string, any> | undefined;
    ident?: string | undefined;
}>]>, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodObject<{
    ident: z.ZodOptional<z.ZodString>;
    loader: z.ZodString;
    options: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>]>>;
}, "strict", z.ZodTypeAny, {
    loader: string;
    options?: string | Record<string, any> | undefined;
    ident?: string | undefined;
}, {
    loader: string;
    options?: string | Record<string, any> | undefined;
    ident?: string | undefined;
}>]>, "many">]>, z.ZodFunction<z.ZodTuple<[z.ZodType<RawFuncUseCtx, z.ZodTypeDef, RawFuncUseCtx>], z.ZodUnknown>, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodObject<{
    ident: z.ZodOptional<z.ZodString>;
    loader: z.ZodString;
    options: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>]>>;
}, "strict", z.ZodTypeAny, {
    loader: string;
    options?: string | Record<string, any> | undefined;
    ident?: string | undefined;
}, {
    loader: string;
    options?: string | Record<string, any> | undefined;
    ident?: string | undefined;
}>]>, "many">>]>;
export type RuleSetUse = z.infer<typeof ruleSetUse>;
declare const baseRuleSetRule: z.ZodObject<{
    test: z.ZodOptional<z.ZodType<RuleSetCondition, z.ZodTypeDef, RuleSetCondition>>;
    exclude: z.ZodOptional<z.ZodType<RuleSetCondition, z.ZodTypeDef, RuleSetCondition>>;
    include: z.ZodOptional<z.ZodType<RuleSetCondition, z.ZodTypeDef, RuleSetCondition>>;
    issuer: z.ZodOptional<z.ZodType<RuleSetCondition, z.ZodTypeDef, RuleSetCondition>>;
    issuerLayer: z.ZodOptional<z.ZodType<RuleSetCondition, z.ZodTypeDef, RuleSetCondition>>;
    dependency: z.ZodOptional<z.ZodType<RuleSetCondition, z.ZodTypeDef, RuleSetCondition>>;
    resource: z.ZodOptional<z.ZodType<RuleSetCondition, z.ZodTypeDef, RuleSetCondition>>;
    resourceFragment: z.ZodOptional<z.ZodType<RuleSetCondition, z.ZodTypeDef, RuleSetCondition>>;
    resourceQuery: z.ZodOptional<z.ZodType<RuleSetCondition, z.ZodTypeDef, RuleSetCondition>>;
    scheme: z.ZodOptional<z.ZodType<RuleSetCondition, z.ZodTypeDef, RuleSetCondition>>;
    mimetype: z.ZodOptional<z.ZodType<RuleSetCondition, z.ZodTypeDef, RuleSetCondition>>;
    descriptionData: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodType<RuleSetCondition, z.ZodTypeDef, RuleSetCondition>>>;
    with: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodType<RuleSetCondition, z.ZodTypeDef, RuleSetCondition>>>;
    type: z.ZodOptional<z.ZodString>;
    layer: z.ZodOptional<z.ZodString>;
    loader: z.ZodOptional<z.ZodString>;
    options: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>]>>;
    use: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodObject<{
        ident: z.ZodOptional<z.ZodString>;
        loader: z.ZodString;
        options: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>]>>;
    }, "strict", z.ZodTypeAny, {
        loader: string;
        options?: string | Record<string, any> | undefined;
        ident?: string | undefined;
    }, {
        loader: string;
        options?: string | Record<string, any> | undefined;
        ident?: string | undefined;
    }>]>, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodObject<{
        ident: z.ZodOptional<z.ZodString>;
        loader: z.ZodString;
        options: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>]>>;
    }, "strict", z.ZodTypeAny, {
        loader: string;
        options?: string | Record<string, any> | undefined;
        ident?: string | undefined;
    }, {
        loader: string;
        options?: string | Record<string, any> | undefined;
        ident?: string | undefined;
    }>]>, "many">]>, z.ZodFunction<z.ZodTuple<[z.ZodType<RawFuncUseCtx, z.ZodTypeDef, RawFuncUseCtx>], z.ZodUnknown>, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodObject<{
        ident: z.ZodOptional<z.ZodString>;
        loader: z.ZodString;
        options: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>]>>;
    }, "strict", z.ZodTypeAny, {
        loader: string;
        options?: string | Record<string, any> | undefined;
        ident?: string | undefined;
    }, {
        loader: string;
        options?: string | Record<string, any> | undefined;
        ident?: string | undefined;
    }>]>, "many">>]>>;
    parser: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    generator: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    resolve: z.ZodOptional<z.ZodType<t.ResolveOptions, z.ZodTypeDef, t.ResolveOptions>>;
    sideEffects: z.ZodOptional<z.ZodBoolean>;
    enforce: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"pre">, z.ZodLiteral<"post">]>>;
}, "strict", z.ZodTypeAny, {
    type?: string | undefined;
    resource?: RuleSetCondition | undefined;
    layer?: string | undefined;
    options?: string | Record<string, any> | undefined;
    loader?: string | undefined;
    test?: RuleSetCondition | undefined;
    exclude?: RuleSetCondition | undefined;
    include?: RuleSetCondition | undefined;
    issuer?: RuleSetCondition | undefined;
    issuerLayer?: RuleSetCondition | undefined;
    dependency?: RuleSetCondition | undefined;
    resourceFragment?: RuleSetCondition | undefined;
    resourceQuery?: RuleSetCondition | undefined;
    scheme?: RuleSetCondition | undefined;
    mimetype?: RuleSetCondition | undefined;
    descriptionData?: Record<string, RuleSetCondition> | undefined;
    with?: Record<string, RuleSetCondition> | undefined;
    use?: string | {
        loader: string;
        options?: string | Record<string, any> | undefined;
        ident?: string | undefined;
    } | (string | {
        loader: string;
        options?: string | Record<string, any> | undefined;
        ident?: string | undefined;
    })[] | ((args_0: RawFuncUseCtx, ...args_1: unknown[]) => (string | {
        loader: string;
        options?: string | Record<string, any> | undefined;
        ident?: string | undefined;
    })[]) | undefined;
    parser?: Record<string, any> | undefined;
    generator?: Record<string, any> | undefined;
    resolve?: t.ResolveOptions | undefined;
    sideEffects?: boolean | undefined;
    enforce?: "pre" | "post" | undefined;
}, {
    type?: string | undefined;
    resource?: RuleSetCondition | undefined;
    layer?: string | undefined;
    options?: string | Record<string, any> | undefined;
    loader?: string | undefined;
    test?: RuleSetCondition | undefined;
    exclude?: RuleSetCondition | undefined;
    include?: RuleSetCondition | undefined;
    issuer?: RuleSetCondition | undefined;
    issuerLayer?: RuleSetCondition | undefined;
    dependency?: RuleSetCondition | undefined;
    resourceFragment?: RuleSetCondition | undefined;
    resourceQuery?: RuleSetCondition | undefined;
    scheme?: RuleSetCondition | undefined;
    mimetype?: RuleSetCondition | undefined;
    descriptionData?: Record<string, RuleSetCondition> | undefined;
    with?: Record<string, RuleSetCondition> | undefined;
    use?: string | {
        loader: string;
        options?: string | Record<string, any> | undefined;
        ident?: string | undefined;
    } | (string | {
        loader: string;
        options?: string | Record<string, any> | undefined;
        ident?: string | undefined;
    })[] | ((args_0: RawFuncUseCtx, ...args_1: unknown[]) => (string | {
        loader: string;
        options?: string | Record<string, any> | undefined;
        ident?: string | undefined;
    })[]) | undefined;
    parser?: Record<string, any> | undefined;
    generator?: Record<string, any> | undefined;
    resolve?: t.ResolveOptions | undefined;
    sideEffects?: boolean | undefined;
    enforce?: "pre" | "post" | undefined;
}>;
export type RuleSetRule = z.infer<typeof baseRuleSetRule> & {
    oneOf?: RuleSetRule[];
    rules?: RuleSetRule[];
};
declare const ruleSetRules: z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<"...">, z.ZodType<RuleSetRule, z.ZodTypeDef, RuleSetRule>]>, z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<0>, z.ZodLiteral<"">, z.ZodNull, z.ZodUndefined]>]>, "many">;
export type RuleSetRules = z.infer<typeof ruleSetRules>;
declare const assetParserDataUrlOptions: z.ZodObject<{
    maxSize: z.ZodOptional<z.ZodNumber>;
}, "strict", z.ZodTypeAny, {
    maxSize?: number | undefined;
}, {
    maxSize?: number | undefined;
}>;
export type AssetParserDataUrlOptions = z.infer<typeof assetParserDataUrlOptions>;
declare const assetParserDataUrl: z.ZodObject<{
    maxSize: z.ZodOptional<z.ZodNumber>;
}, "strict", z.ZodTypeAny, {
    maxSize?: number | undefined;
}, {
    maxSize?: number | undefined;
}>;
export type AssetParserDataUrl = z.infer<typeof assetParserDataUrl>;
declare const assetParserOptions: z.ZodObject<{
    dataUrlCondition: z.ZodOptional<z.ZodObject<{
        maxSize: z.ZodOptional<z.ZodNumber>;
    }, "strict", z.ZodTypeAny, {
        maxSize?: number | undefined;
    }, {
        maxSize?: number | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    dataUrlCondition?: {
        maxSize?: number | undefined;
    } | undefined;
}, {
    dataUrlCondition?: {
        maxSize?: number | undefined;
    } | undefined;
}>;
export type AssetParserOptions = z.infer<typeof assetParserOptions>;
declare const cssParserNamedExports: z.ZodBoolean;
export type CssParserNamedExports = z.infer<typeof cssParserNamedExports>;
declare const cssParserOptions: z.ZodObject<{
    namedExports: z.ZodOptional<z.ZodBoolean>;
}, "strict", z.ZodTypeAny, {
    namedExports?: boolean | undefined;
}, {
    namedExports?: boolean | undefined;
}>;
export type CssParserOptions = z.infer<typeof cssParserOptions>;
declare const cssAutoParserOptions: z.ZodObject<{
    namedExports: z.ZodOptional<z.ZodBoolean>;
}, "strict", z.ZodTypeAny, {
    namedExports?: boolean | undefined;
}, {
    namedExports?: boolean | undefined;
}>;
export type CssAutoParserOptions = z.infer<typeof cssAutoParserOptions>;
declare const cssModuleParserOptions: z.ZodObject<{
    namedExports: z.ZodOptional<z.ZodBoolean>;
}, "strict", z.ZodTypeAny, {
    namedExports?: boolean | undefined;
}, {
    namedExports?: boolean | undefined;
}>;
export type CssModuleParserOptions = z.infer<typeof cssModuleParserOptions>;
declare const javascriptParserOptions: z.ZodObject<{
    dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
    dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
    dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
    dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
    importMeta: z.ZodOptional<z.ZodBoolean>;
    url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
    exprContextCritical: z.ZodOptional<z.ZodBoolean>;
    wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
    exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
    importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
    reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
    strictExportPresence: z.ZodOptional<z.ZodBoolean>;
    worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
    overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
    requireAsExpression: z.ZodOptional<z.ZodBoolean>;
    requireDynamic: z.ZodOptional<z.ZodBoolean>;
    requireResolve: z.ZodOptional<z.ZodBoolean>;
    importDynamic: z.ZodOptional<z.ZodBoolean>;
}, "strict", z.ZodTypeAny, {
    url?: boolean | "relative" | undefined;
    dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
    dynamicImportPreload?: number | boolean | undefined;
    dynamicImportPrefetch?: number | boolean | undefined;
    dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
    importMeta?: boolean | undefined;
    exprContextCritical?: boolean | undefined;
    wrappedContextCritical?: boolean | undefined;
    exportsPresence?: false | "auto" | "error" | "warn" | undefined;
    importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
    reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
    strictExportPresence?: boolean | undefined;
    worker?: boolean | string[] | undefined;
    overrideStrict?: "strict" | "non-strict" | undefined;
    requireAsExpression?: boolean | undefined;
    requireDynamic?: boolean | undefined;
    requireResolve?: boolean | undefined;
    importDynamic?: boolean | undefined;
}, {
    url?: boolean | "relative" | undefined;
    dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
    dynamicImportPreload?: number | boolean | undefined;
    dynamicImportPrefetch?: number | boolean | undefined;
    dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
    importMeta?: boolean | undefined;
    exprContextCritical?: boolean | undefined;
    wrappedContextCritical?: boolean | undefined;
    exportsPresence?: false | "auto" | "error" | "warn" | undefined;
    importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
    reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
    strictExportPresence?: boolean | undefined;
    worker?: boolean | string[] | undefined;
    overrideStrict?: "strict" | "non-strict" | undefined;
    requireAsExpression?: boolean | undefined;
    requireDynamic?: boolean | undefined;
    requireResolve?: boolean | undefined;
    importDynamic?: boolean | undefined;
}>;
export type JavascriptParserOptions = z.infer<typeof javascriptParserOptions>;
declare const parserOptionsByModuleTypeKnown: z.ZodObject<{
    asset: z.ZodOptional<z.ZodObject<{
        dataUrlCondition: z.ZodOptional<z.ZodObject<{
            maxSize: z.ZodOptional<z.ZodNumber>;
        }, "strict", z.ZodTypeAny, {
            maxSize?: number | undefined;
        }, {
            maxSize?: number | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        dataUrlCondition?: {
            maxSize?: number | undefined;
        } | undefined;
    }, {
        dataUrlCondition?: {
            maxSize?: number | undefined;
        } | undefined;
    }>>;
    css: z.ZodOptional<z.ZodObject<{
        namedExports: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        namedExports?: boolean | undefined;
    }, {
        namedExports?: boolean | undefined;
    }>>;
    "css/auto": z.ZodOptional<z.ZodObject<{
        namedExports: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        namedExports?: boolean | undefined;
    }, {
        namedExports?: boolean | undefined;
    }>>;
    "css/module": z.ZodOptional<z.ZodObject<{
        namedExports: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        namedExports?: boolean | undefined;
    }, {
        namedExports?: boolean | undefined;
    }>>;
    javascript: z.ZodOptional<z.ZodObject<{
        dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
        dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
        importMeta: z.ZodOptional<z.ZodBoolean>;
        url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
        exprContextCritical: z.ZodOptional<z.ZodBoolean>;
        wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
        exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        strictExportPresence: z.ZodOptional<z.ZodBoolean>;
        worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
        overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
        requireAsExpression: z.ZodOptional<z.ZodBoolean>;
        requireDynamic: z.ZodOptional<z.ZodBoolean>;
        requireResolve: z.ZodOptional<z.ZodBoolean>;
        importDynamic: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }>>;
    "javascript/auto": z.ZodOptional<z.ZodObject<{
        dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
        dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
        importMeta: z.ZodOptional<z.ZodBoolean>;
        url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
        exprContextCritical: z.ZodOptional<z.ZodBoolean>;
        wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
        exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        strictExportPresence: z.ZodOptional<z.ZodBoolean>;
        worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
        overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
        requireAsExpression: z.ZodOptional<z.ZodBoolean>;
        requireDynamic: z.ZodOptional<z.ZodBoolean>;
        requireResolve: z.ZodOptional<z.ZodBoolean>;
        importDynamic: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }>>;
    "javascript/dynamic": z.ZodOptional<z.ZodObject<{
        dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
        dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
        importMeta: z.ZodOptional<z.ZodBoolean>;
        url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
        exprContextCritical: z.ZodOptional<z.ZodBoolean>;
        wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
        exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        strictExportPresence: z.ZodOptional<z.ZodBoolean>;
        worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
        overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
        requireAsExpression: z.ZodOptional<z.ZodBoolean>;
        requireDynamic: z.ZodOptional<z.ZodBoolean>;
        requireResolve: z.ZodOptional<z.ZodBoolean>;
        importDynamic: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }>>;
    "javascript/esm": z.ZodOptional<z.ZodObject<{
        dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
        dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
        importMeta: z.ZodOptional<z.ZodBoolean>;
        url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
        exprContextCritical: z.ZodOptional<z.ZodBoolean>;
        wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
        exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        strictExportPresence: z.ZodOptional<z.ZodBoolean>;
        worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
        overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
        requireAsExpression: z.ZodOptional<z.ZodBoolean>;
        requireDynamic: z.ZodOptional<z.ZodBoolean>;
        requireResolve: z.ZodOptional<z.ZodBoolean>;
        importDynamic: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    javascript?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
    css?: {
        namedExports?: boolean | undefined;
    } | undefined;
    "css/auto"?: {
        namedExports?: boolean | undefined;
    } | undefined;
    "css/module"?: {
        namedExports?: boolean | undefined;
    } | undefined;
    asset?: {
        dataUrlCondition?: {
            maxSize?: number | undefined;
        } | undefined;
    } | undefined;
    "javascript/auto"?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
    "javascript/dynamic"?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
    "javascript/esm"?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
}, {
    javascript?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
    css?: {
        namedExports?: boolean | undefined;
    } | undefined;
    "css/auto"?: {
        namedExports?: boolean | undefined;
    } | undefined;
    "css/module"?: {
        namedExports?: boolean | undefined;
    } | undefined;
    asset?: {
        dataUrlCondition?: {
            maxSize?: number | undefined;
        } | undefined;
    } | undefined;
    "javascript/auto"?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
    "javascript/dynamic"?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
    "javascript/esm"?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
}>;
export type ParserOptionsByModuleTypeKnown = z.infer<typeof parserOptionsByModuleTypeKnown>;
declare const parserOptionsByModuleTypeUnknown: z.ZodRecord<z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>>;
export type ParserOptionsByModuleTypeUnknown = z.infer<typeof parserOptionsByModuleTypeUnknown>;
declare const parserOptionsByModuleType: z.ZodUnion<[z.ZodObject<{
    asset: z.ZodOptional<z.ZodObject<{
        dataUrlCondition: z.ZodOptional<z.ZodObject<{
            maxSize: z.ZodOptional<z.ZodNumber>;
        }, "strict", z.ZodTypeAny, {
            maxSize?: number | undefined;
        }, {
            maxSize?: number | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        dataUrlCondition?: {
            maxSize?: number | undefined;
        } | undefined;
    }, {
        dataUrlCondition?: {
            maxSize?: number | undefined;
        } | undefined;
    }>>;
    css: z.ZodOptional<z.ZodObject<{
        namedExports: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        namedExports?: boolean | undefined;
    }, {
        namedExports?: boolean | undefined;
    }>>;
    "css/auto": z.ZodOptional<z.ZodObject<{
        namedExports: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        namedExports?: boolean | undefined;
    }, {
        namedExports?: boolean | undefined;
    }>>;
    "css/module": z.ZodOptional<z.ZodObject<{
        namedExports: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        namedExports?: boolean | undefined;
    }, {
        namedExports?: boolean | undefined;
    }>>;
    javascript: z.ZodOptional<z.ZodObject<{
        dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
        dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
        importMeta: z.ZodOptional<z.ZodBoolean>;
        url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
        exprContextCritical: z.ZodOptional<z.ZodBoolean>;
        wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
        exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        strictExportPresence: z.ZodOptional<z.ZodBoolean>;
        worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
        overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
        requireAsExpression: z.ZodOptional<z.ZodBoolean>;
        requireDynamic: z.ZodOptional<z.ZodBoolean>;
        requireResolve: z.ZodOptional<z.ZodBoolean>;
        importDynamic: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }>>;
    "javascript/auto": z.ZodOptional<z.ZodObject<{
        dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
        dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
        importMeta: z.ZodOptional<z.ZodBoolean>;
        url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
        exprContextCritical: z.ZodOptional<z.ZodBoolean>;
        wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
        exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        strictExportPresence: z.ZodOptional<z.ZodBoolean>;
        worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
        overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
        requireAsExpression: z.ZodOptional<z.ZodBoolean>;
        requireDynamic: z.ZodOptional<z.ZodBoolean>;
        requireResolve: z.ZodOptional<z.ZodBoolean>;
        importDynamic: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }>>;
    "javascript/dynamic": z.ZodOptional<z.ZodObject<{
        dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
        dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
        importMeta: z.ZodOptional<z.ZodBoolean>;
        url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
        exprContextCritical: z.ZodOptional<z.ZodBoolean>;
        wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
        exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        strictExportPresence: z.ZodOptional<z.ZodBoolean>;
        worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
        overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
        requireAsExpression: z.ZodOptional<z.ZodBoolean>;
        requireDynamic: z.ZodOptional<z.ZodBoolean>;
        requireResolve: z.ZodOptional<z.ZodBoolean>;
        importDynamic: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }>>;
    "javascript/esm": z.ZodOptional<z.ZodObject<{
        dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
        dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
        dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
        importMeta: z.ZodOptional<z.ZodBoolean>;
        url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
        exprContextCritical: z.ZodOptional<z.ZodBoolean>;
        wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
        exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
        strictExportPresence: z.ZodOptional<z.ZodBoolean>;
        worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
        overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
        requireAsExpression: z.ZodOptional<z.ZodBoolean>;
        requireDynamic: z.ZodOptional<z.ZodBoolean>;
        requireResolve: z.ZodOptional<z.ZodBoolean>;
        importDynamic: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }, {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    javascript?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
    css?: {
        namedExports?: boolean | undefined;
    } | undefined;
    "css/auto"?: {
        namedExports?: boolean | undefined;
    } | undefined;
    "css/module"?: {
        namedExports?: boolean | undefined;
    } | undefined;
    asset?: {
        dataUrlCondition?: {
            maxSize?: number | undefined;
        } | undefined;
    } | undefined;
    "javascript/auto"?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
    "javascript/dynamic"?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
    "javascript/esm"?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
}, {
    javascript?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
    css?: {
        namedExports?: boolean | undefined;
    } | undefined;
    "css/auto"?: {
        namedExports?: boolean | undefined;
    } | undefined;
    "css/module"?: {
        namedExports?: boolean | undefined;
    } | undefined;
    asset?: {
        dataUrlCondition?: {
            maxSize?: number | undefined;
        } | undefined;
    } | undefined;
    "javascript/auto"?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
    "javascript/dynamic"?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
    "javascript/esm"?: {
        url?: boolean | "relative" | undefined;
        dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
        dynamicImportPreload?: number | boolean | undefined;
        dynamicImportPrefetch?: number | boolean | undefined;
        dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
        importMeta?: boolean | undefined;
        exprContextCritical?: boolean | undefined;
        wrappedContextCritical?: boolean | undefined;
        exportsPresence?: false | "auto" | "error" | "warn" | undefined;
        importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
        strictExportPresence?: boolean | undefined;
        worker?: boolean | string[] | undefined;
        overrideStrict?: "strict" | "non-strict" | undefined;
        requireAsExpression?: boolean | undefined;
        requireDynamic?: boolean | undefined;
        requireResolve?: boolean | undefined;
        importDynamic?: boolean | undefined;
    } | undefined;
}>, z.ZodRecord<z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>>]>;
export type ParserOptionsByModuleType = z.infer<typeof parserOptionsByModuleType>;
declare const assetGeneratorDataUrlOptions: z.ZodObject<{
    encoding: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<"base64">]>>;
    mimetype: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    mimetype?: string | undefined;
    encoding?: false | "base64" | undefined;
}, {
    mimetype?: string | undefined;
    encoding?: false | "base64" | undefined;
}>;
export type AssetGeneratorDataUrlOptions = z.infer<typeof assetGeneratorDataUrlOptions>;
declare const assetGeneratorDataUrlFunction: z.ZodFunction<z.ZodTuple<[z.ZodObject<{
    content: z.ZodString;
    filename: z.ZodString;
}, "strict", z.ZodTypeAny, {
    filename: string;
    content: string;
}, {
    filename: string;
    content: string;
}>], z.ZodUnknown>, z.ZodString>;
export type AssetGeneratorDataUrlFunction = z.infer<typeof assetGeneratorDataUrlFunction>;
declare const assetGeneratorDataUrl: z.ZodUnion<[z.ZodObject<{
    encoding: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<"base64">]>>;
    mimetype: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    mimetype?: string | undefined;
    encoding?: false | "base64" | undefined;
}, {
    mimetype?: string | undefined;
    encoding?: false | "base64" | undefined;
}>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
    content: z.ZodString;
    filename: z.ZodString;
}, "strict", z.ZodTypeAny, {
    filename: string;
    content: string;
}, {
    filename: string;
    content: string;
}>], z.ZodUnknown>, z.ZodString>]>;
export type AssetGeneratorDataUrl = z.infer<typeof assetGeneratorDataUrl>;
declare const assetInlineGeneratorOptions: z.ZodObject<{
    dataUrl: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
        encoding: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<"base64">]>>;
        mimetype: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        mimetype?: string | undefined;
        encoding?: false | "base64" | undefined;
    }, {
        mimetype?: string | undefined;
        encoding?: false | "base64" | undefined;
    }>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
        content: z.ZodString;
        filename: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        filename: string;
        content: string;
    }, {
        filename: string;
        content: string;
    }>], z.ZodUnknown>, z.ZodString>]>>;
}, "strict", z.ZodTypeAny, {
    dataUrl?: {
        mimetype?: string | undefined;
        encoding?: false | "base64" | undefined;
    } | ((args_0: {
        filename: string;
        content: string;
    }, ...args_1: unknown[]) => string) | undefined;
}, {
    dataUrl?: {
        mimetype?: string | undefined;
        encoding?: false | "base64" | undefined;
    } | ((args_0: {
        filename: string;
        content: string;
    }, ...args_1: unknown[]) => string) | undefined;
}>;
export type AssetInlineGeneratorOptions = z.infer<typeof assetInlineGeneratorOptions>;
declare const assetResourceGeneratorOptions: z.ZodObject<{
    emit: z.ZodOptional<z.ZodBoolean>;
    filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
    publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
}, "strict", z.ZodTypeAny, {
    filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    emit?: boolean | undefined;
}, {
    filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    emit?: boolean | undefined;
}>;
export type AssetResourceGeneratorOptions = z.infer<typeof assetResourceGeneratorOptions>;
declare const assetGeneratorOptions: z.ZodObject<z.objectUtil.extendShape<{
    dataUrl: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
        encoding: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<"base64">]>>;
        mimetype: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        mimetype?: string | undefined;
        encoding?: false | "base64" | undefined;
    }, {
        mimetype?: string | undefined;
        encoding?: false | "base64" | undefined;
    }>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
        content: z.ZodString;
        filename: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        filename: string;
        content: string;
    }, {
        filename: string;
        content: string;
    }>], z.ZodUnknown>, z.ZodString>]>>;
}, {
    emit: z.ZodOptional<z.ZodBoolean>;
    filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
    publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
}>, "strict", z.ZodTypeAny, {
    filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    emit?: boolean | undefined;
    dataUrl?: {
        mimetype?: string | undefined;
        encoding?: false | "base64" | undefined;
    } | ((args_0: {
        filename: string;
        content: string;
    }, ...args_1: unknown[]) => string) | undefined;
}, {
    filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
    emit?: boolean | undefined;
    dataUrl?: {
        mimetype?: string | undefined;
        encoding?: false | "base64" | undefined;
    } | ((args_0: {
        filename: string;
        content: string;
    }, ...args_1: unknown[]) => string) | undefined;
}>;
export type AssetGeneratorOptions = z.infer<typeof assetGeneratorOptions>;
declare const cssGeneratorExportsConvention: z.ZodEnum<["as-is", "camel-case", "camel-case-only", "dashes", "dashes-only"]>;
export type CssGeneratorExportsConvention = z.infer<typeof cssGeneratorExportsConvention>;
declare const cssGeneratorExportsOnly: z.ZodBoolean;
export type CssGeneratorExportsOnly = z.infer<typeof cssGeneratorExportsOnly>;
declare const cssGeneratorLocalIdentName: z.ZodString;
export type CssGeneratorLocalIdentName = z.infer<typeof cssGeneratorLocalIdentName>;
declare const cssGeneratorEsModule: z.ZodBoolean;
export type CssGeneratorEsModule = z.infer<typeof cssGeneratorEsModule>;
declare const cssGeneratorOptions: z.ZodObject<{
    exportsOnly: z.ZodOptional<z.ZodBoolean>;
    esModule: z.ZodOptional<z.ZodBoolean>;
}, "strict", z.ZodTypeAny, {
    exportsOnly?: boolean | undefined;
    esModule?: boolean | undefined;
}, {
    exportsOnly?: boolean | undefined;
    esModule?: boolean | undefined;
}>;
export type CssGeneratorOptions = z.infer<typeof cssGeneratorOptions>;
declare const cssAutoGeneratorOptions: z.ZodObject<{
    exportsConvention: z.ZodOptional<z.ZodEnum<["as-is", "camel-case", "camel-case-only", "dashes", "dashes-only"]>>;
    exportsOnly: z.ZodOptional<z.ZodBoolean>;
    localIdentName: z.ZodOptional<z.ZodString>;
    esModule: z.ZodOptional<z.ZodBoolean>;
}, "strict", z.ZodTypeAny, {
    exportsOnly?: boolean | undefined;
    esModule?: boolean | undefined;
    exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
    localIdentName?: string | undefined;
}, {
    exportsOnly?: boolean | undefined;
    esModule?: boolean | undefined;
    exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
    localIdentName?: string | undefined;
}>;
export type CssAutoGeneratorOptions = z.infer<typeof cssAutoGeneratorOptions>;
declare const cssModuleGeneratorOptions: z.ZodObject<{
    exportsConvention: z.ZodOptional<z.ZodEnum<["as-is", "camel-case", "camel-case-only", "dashes", "dashes-only"]>>;
    exportsOnly: z.ZodOptional<z.ZodBoolean>;
    localIdentName: z.ZodOptional<z.ZodString>;
    esModule: z.ZodOptional<z.ZodBoolean>;
}, "strict", z.ZodTypeAny, {
    exportsOnly?: boolean | undefined;
    esModule?: boolean | undefined;
    exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
    localIdentName?: string | undefined;
}, {
    exportsOnly?: boolean | undefined;
    esModule?: boolean | undefined;
    exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
    localIdentName?: string | undefined;
}>;
export type CssModuleGeneratorOptions = z.infer<typeof cssModuleGeneratorOptions>;
declare const generatorOptionsByModuleTypeKnown: z.ZodObject<{
    asset: z.ZodOptional<z.ZodObject<z.objectUtil.extendShape<{
        dataUrl: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            encoding: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<"base64">]>>;
            mimetype: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        }, {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        }>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
            content: z.ZodString;
            filename: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            filename: string;
            content: string;
        }, {
            filename: string;
            content: string;
        }>], z.ZodUnknown>, z.ZodString>]>>;
    }, {
        emit: z.ZodOptional<z.ZodBoolean>;
        filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
        publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
    }>, "strict", z.ZodTypeAny, {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    }, {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    }>>;
    "asset/inline": z.ZodOptional<z.ZodObject<{
        dataUrl: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            encoding: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<"base64">]>>;
            mimetype: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        }, {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        }>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
            content: z.ZodString;
            filename: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            filename: string;
            content: string;
        }, {
            filename: string;
            content: string;
        }>], z.ZodUnknown>, z.ZodString>]>>;
    }, "strict", z.ZodTypeAny, {
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    }, {
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    }>>;
    "asset/resource": z.ZodOptional<z.ZodObject<{
        emit: z.ZodOptional<z.ZodBoolean>;
        filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
        publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
    }, "strict", z.ZodTypeAny, {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
    }, {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
    }>>;
    css: z.ZodOptional<z.ZodObject<{
        exportsOnly: z.ZodOptional<z.ZodBoolean>;
        esModule: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
    }, {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
    }>>;
    "css/auto": z.ZodOptional<z.ZodObject<{
        exportsConvention: z.ZodOptional<z.ZodEnum<["as-is", "camel-case", "camel-case-only", "dashes", "dashes-only"]>>;
        exportsOnly: z.ZodOptional<z.ZodBoolean>;
        localIdentName: z.ZodOptional<z.ZodString>;
        esModule: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    }, {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    }>>;
    "css/module": z.ZodOptional<z.ZodObject<{
        exportsConvention: z.ZodOptional<z.ZodEnum<["as-is", "camel-case", "camel-case-only", "dashes", "dashes-only"]>>;
        exportsOnly: z.ZodOptional<z.ZodBoolean>;
        localIdentName: z.ZodOptional<z.ZodString>;
        esModule: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    }, {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    css?: {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
    } | undefined;
    "css/auto"?: {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    } | undefined;
    "css/module"?: {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    } | undefined;
    asset?: {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    } | undefined;
    "asset/inline"?: {
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    } | undefined;
    "asset/resource"?: {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
    } | undefined;
}, {
    css?: {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
    } | undefined;
    "css/auto"?: {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    } | undefined;
    "css/module"?: {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    } | undefined;
    asset?: {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    } | undefined;
    "asset/inline"?: {
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    } | undefined;
    "asset/resource"?: {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
    } | undefined;
}>;
export type GeneratorOptionsByModuleTypeKnown = z.infer<typeof generatorOptionsByModuleTypeKnown>;
declare const generatorOptionsByModuleTypeUnknown: z.ZodRecord<z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>>;
export type GeneratorOptionsByModuleTypeUnknown = z.infer<typeof generatorOptionsByModuleTypeUnknown>;
declare const generatorOptionsByModuleType: z.ZodUnion<[z.ZodObject<{
    asset: z.ZodOptional<z.ZodObject<z.objectUtil.extendShape<{
        dataUrl: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            encoding: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<"base64">]>>;
            mimetype: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        }, {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        }>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
            content: z.ZodString;
            filename: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            filename: string;
            content: string;
        }, {
            filename: string;
            content: string;
        }>], z.ZodUnknown>, z.ZodString>]>>;
    }, {
        emit: z.ZodOptional<z.ZodBoolean>;
        filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
        publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
    }>, "strict", z.ZodTypeAny, {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    }, {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    }>>;
    "asset/inline": z.ZodOptional<z.ZodObject<{
        dataUrl: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            encoding: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<"base64">]>>;
            mimetype: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        }, {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        }>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
            content: z.ZodString;
            filename: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            filename: string;
            content: string;
        }, {
            filename: string;
            content: string;
        }>], z.ZodUnknown>, z.ZodString>]>>;
    }, "strict", z.ZodTypeAny, {
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    }, {
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    }>>;
    "asset/resource": z.ZodOptional<z.ZodObject<{
        emit: z.ZodOptional<z.ZodBoolean>;
        filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
        publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
    }, "strict", z.ZodTypeAny, {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
    }, {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
    }>>;
    css: z.ZodOptional<z.ZodObject<{
        exportsOnly: z.ZodOptional<z.ZodBoolean>;
        esModule: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
    }, {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
    }>>;
    "css/auto": z.ZodOptional<z.ZodObject<{
        exportsConvention: z.ZodOptional<z.ZodEnum<["as-is", "camel-case", "camel-case-only", "dashes", "dashes-only"]>>;
        exportsOnly: z.ZodOptional<z.ZodBoolean>;
        localIdentName: z.ZodOptional<z.ZodString>;
        esModule: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    }, {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    }>>;
    "css/module": z.ZodOptional<z.ZodObject<{
        exportsConvention: z.ZodOptional<z.ZodEnum<["as-is", "camel-case", "camel-case-only", "dashes", "dashes-only"]>>;
        exportsOnly: z.ZodOptional<z.ZodBoolean>;
        localIdentName: z.ZodOptional<z.ZodString>;
        esModule: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    }, {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    css?: {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
    } | undefined;
    "css/auto"?: {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    } | undefined;
    "css/module"?: {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    } | undefined;
    asset?: {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    } | undefined;
    "asset/inline"?: {
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    } | undefined;
    "asset/resource"?: {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
    } | undefined;
}, {
    css?: {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
    } | undefined;
    "css/auto"?: {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    } | undefined;
    "css/module"?: {
        exportsOnly?: boolean | undefined;
        esModule?: boolean | undefined;
        exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
        localIdentName?: string | undefined;
    } | undefined;
    asset?: {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    } | undefined;
    "asset/inline"?: {
        dataUrl?: {
            mimetype?: string | undefined;
            encoding?: false | "base64" | undefined;
        } | ((args_0: {
            filename: string;
            content: string;
        }, ...args_1: unknown[]) => string) | undefined;
    } | undefined;
    "asset/resource"?: {
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        emit?: boolean | undefined;
    } | undefined;
}>, z.ZodRecord<z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>>]>;
export type GeneratorOptionsByModuleType = z.infer<typeof generatorOptionsByModuleType>;
declare const noParseOption: z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>, z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>, "many">]>;
export type NoParseOption = z.infer<typeof noParseOption>;
declare const moduleOptions: z.ZodObject<{
    defaultRules: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<"...">, z.ZodType<RuleSetRule, z.ZodTypeDef, RuleSetRule>]>, z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<0>, z.ZodLiteral<"">, z.ZodNull, z.ZodUndefined]>]>, "many">>;
    rules: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<"...">, z.ZodType<RuleSetRule, z.ZodTypeDef, RuleSetRule>]>, z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<0>, z.ZodLiteral<"">, z.ZodNull, z.ZodUndefined]>]>, "many">>;
    parser: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
        asset: z.ZodOptional<z.ZodObject<{
            dataUrlCondition: z.ZodOptional<z.ZodObject<{
                maxSize: z.ZodOptional<z.ZodNumber>;
            }, "strict", z.ZodTypeAny, {
                maxSize?: number | undefined;
            }, {
                maxSize?: number | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            dataUrlCondition?: {
                maxSize?: number | undefined;
            } | undefined;
        }, {
            dataUrlCondition?: {
                maxSize?: number | undefined;
            } | undefined;
        }>>;
        css: z.ZodOptional<z.ZodObject<{
            namedExports: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            namedExports?: boolean | undefined;
        }, {
            namedExports?: boolean | undefined;
        }>>;
        "css/auto": z.ZodOptional<z.ZodObject<{
            namedExports: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            namedExports?: boolean | undefined;
        }, {
            namedExports?: boolean | undefined;
        }>>;
        "css/module": z.ZodOptional<z.ZodObject<{
            namedExports: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            namedExports?: boolean | undefined;
        }, {
            namedExports?: boolean | undefined;
        }>>;
        javascript: z.ZodOptional<z.ZodObject<{
            dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
            dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
            dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
            dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
            importMeta: z.ZodOptional<z.ZodBoolean>;
            url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
            exprContextCritical: z.ZodOptional<z.ZodBoolean>;
            wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
            exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
            importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
            reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
            strictExportPresence: z.ZodOptional<z.ZodBoolean>;
            worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
            overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
            requireAsExpression: z.ZodOptional<z.ZodBoolean>;
            requireDynamic: z.ZodOptional<z.ZodBoolean>;
            requireResolve: z.ZodOptional<z.ZodBoolean>;
            importDynamic: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        }, {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        }>>;
        "javascript/auto": z.ZodOptional<z.ZodObject<{
            dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
            dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
            dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
            dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
            importMeta: z.ZodOptional<z.ZodBoolean>;
            url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
            exprContextCritical: z.ZodOptional<z.ZodBoolean>;
            wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
            exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
            importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
            reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
            strictExportPresence: z.ZodOptional<z.ZodBoolean>;
            worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
            overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
            requireAsExpression: z.ZodOptional<z.ZodBoolean>;
            requireDynamic: z.ZodOptional<z.ZodBoolean>;
            requireResolve: z.ZodOptional<z.ZodBoolean>;
            importDynamic: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        }, {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        }>>;
        "javascript/dynamic": z.ZodOptional<z.ZodObject<{
            dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
            dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
            dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
            dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
            importMeta: z.ZodOptional<z.ZodBoolean>;
            url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
            exprContextCritical: z.ZodOptional<z.ZodBoolean>;
            wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
            exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
            importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
            reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
            strictExportPresence: z.ZodOptional<z.ZodBoolean>;
            worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
            overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
            requireAsExpression: z.ZodOptional<z.ZodBoolean>;
            requireDynamic: z.ZodOptional<z.ZodBoolean>;
            requireResolve: z.ZodOptional<z.ZodBoolean>;
            importDynamic: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        }, {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        }>>;
        "javascript/esm": z.ZodOptional<z.ZodObject<{
            dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
            dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
            dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
            dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
            importMeta: z.ZodOptional<z.ZodBoolean>;
            url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
            exprContextCritical: z.ZodOptional<z.ZodBoolean>;
            wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
            exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
            importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
            reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
            strictExportPresence: z.ZodOptional<z.ZodBoolean>;
            worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
            overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
            requireAsExpression: z.ZodOptional<z.ZodBoolean>;
            requireDynamic: z.ZodOptional<z.ZodBoolean>;
            requireResolve: z.ZodOptional<z.ZodBoolean>;
            importDynamic: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        }, {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        javascript?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
        css?: {
            namedExports?: boolean | undefined;
        } | undefined;
        "css/auto"?: {
            namedExports?: boolean | undefined;
        } | undefined;
        "css/module"?: {
            namedExports?: boolean | undefined;
        } | undefined;
        asset?: {
            dataUrlCondition?: {
                maxSize?: number | undefined;
            } | undefined;
        } | undefined;
        "javascript/auto"?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
        "javascript/dynamic"?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
        "javascript/esm"?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
    }, {
        javascript?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
        css?: {
            namedExports?: boolean | undefined;
        } | undefined;
        "css/auto"?: {
            namedExports?: boolean | undefined;
        } | undefined;
        "css/module"?: {
            namedExports?: boolean | undefined;
        } | undefined;
        asset?: {
            dataUrlCondition?: {
                maxSize?: number | undefined;
            } | undefined;
        } | undefined;
        "javascript/auto"?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
        "javascript/dynamic"?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
        "javascript/esm"?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
    }>, z.ZodRecord<z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>>]>>;
    generator: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
        asset: z.ZodOptional<z.ZodObject<z.objectUtil.extendShape<{
            dataUrl: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                encoding: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<"base64">]>>;
                mimetype: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            }, {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            }>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
                content: z.ZodString;
                filename: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                filename: string;
                content: string;
            }, {
                filename: string;
                content: string;
            }>], z.ZodUnknown>, z.ZodString>]>>;
        }, {
            emit: z.ZodOptional<z.ZodBoolean>;
            filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
            publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
        }>, "strict", z.ZodTypeAny, {
            filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            emit?: boolean | undefined;
            dataUrl?: {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            } | ((args_0: {
                filename: string;
                content: string;
            }, ...args_1: unknown[]) => string) | undefined;
        }, {
            filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            emit?: boolean | undefined;
            dataUrl?: {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            } | ((args_0: {
                filename: string;
                content: string;
            }, ...args_1: unknown[]) => string) | undefined;
        }>>;
        "asset/inline": z.ZodOptional<z.ZodObject<{
            dataUrl: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                encoding: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<"base64">]>>;
                mimetype: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            }, {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            }>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
                content: z.ZodString;
                filename: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                filename: string;
                content: string;
            }, {
                filename: string;
                content: string;
            }>], z.ZodUnknown>, z.ZodString>]>>;
        }, "strict", z.ZodTypeAny, {
            dataUrl?: {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            } | ((args_0: {
                filename: string;
                content: string;
            }, ...args_1: unknown[]) => string) | undefined;
        }, {
            dataUrl?: {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            } | ((args_0: {
                filename: string;
                content: string;
            }, ...args_1: unknown[]) => string) | undefined;
        }>>;
        "asset/resource": z.ZodOptional<z.ZodObject<{
            emit: z.ZodOptional<z.ZodBoolean>;
            filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
            publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
        }, "strict", z.ZodTypeAny, {
            filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            emit?: boolean | undefined;
        }, {
            filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            emit?: boolean | undefined;
        }>>;
        css: z.ZodOptional<z.ZodObject<{
            exportsOnly: z.ZodOptional<z.ZodBoolean>;
            esModule: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
        }, {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
        }>>;
        "css/auto": z.ZodOptional<z.ZodObject<{
            exportsConvention: z.ZodOptional<z.ZodEnum<["as-is", "camel-case", "camel-case-only", "dashes", "dashes-only"]>>;
            exportsOnly: z.ZodOptional<z.ZodBoolean>;
            localIdentName: z.ZodOptional<z.ZodString>;
            esModule: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
            exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
            localIdentName?: string | undefined;
        }, {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
            exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
            localIdentName?: string | undefined;
        }>>;
        "css/module": z.ZodOptional<z.ZodObject<{
            exportsConvention: z.ZodOptional<z.ZodEnum<["as-is", "camel-case", "camel-case-only", "dashes", "dashes-only"]>>;
            exportsOnly: z.ZodOptional<z.ZodBoolean>;
            localIdentName: z.ZodOptional<z.ZodString>;
            esModule: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
            exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
            localIdentName?: string | undefined;
        }, {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
            exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
            localIdentName?: string | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        css?: {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
        } | undefined;
        "css/auto"?: {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
            exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
            localIdentName?: string | undefined;
        } | undefined;
        "css/module"?: {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
            exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
            localIdentName?: string | undefined;
        } | undefined;
        asset?: {
            filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            emit?: boolean | undefined;
            dataUrl?: {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            } | ((args_0: {
                filename: string;
                content: string;
            }, ...args_1: unknown[]) => string) | undefined;
        } | undefined;
        "asset/inline"?: {
            dataUrl?: {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            } | ((args_0: {
                filename: string;
                content: string;
            }, ...args_1: unknown[]) => string) | undefined;
        } | undefined;
        "asset/resource"?: {
            filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            emit?: boolean | undefined;
        } | undefined;
    }, {
        css?: {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
        } | undefined;
        "css/auto"?: {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
            exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
            localIdentName?: string | undefined;
        } | undefined;
        "css/module"?: {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
            exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
            localIdentName?: string | undefined;
        } | undefined;
        asset?: {
            filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            emit?: boolean | undefined;
            dataUrl?: {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            } | ((args_0: {
                filename: string;
                content: string;
            }, ...args_1: unknown[]) => string) | undefined;
        } | undefined;
        "asset/inline"?: {
            dataUrl?: {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            } | ((args_0: {
                filename: string;
                content: string;
            }, ...args_1: unknown[]) => string) | undefined;
        } | undefined;
        "asset/resource"?: {
            filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            emit?: boolean | undefined;
        } | undefined;
    }>, z.ZodRecord<z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>>]>>;
    noParse: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>, z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>, "many">]>>;
}, "strict", z.ZodTypeAny, {
    parser?: {
        javascript?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
        css?: {
            namedExports?: boolean | undefined;
        } | undefined;
        "css/auto"?: {
            namedExports?: boolean | undefined;
        } | undefined;
        "css/module"?: {
            namedExports?: boolean | undefined;
        } | undefined;
        asset?: {
            dataUrlCondition?: {
                maxSize?: number | undefined;
            } | undefined;
        } | undefined;
        "javascript/auto"?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
        "javascript/dynamic"?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
        "javascript/esm"?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
    } | Record<string, Record<string, any>> | undefined;
    generator?: Record<string, Record<string, any>> | {
        css?: {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
        } | undefined;
        "css/auto"?: {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
            exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
            localIdentName?: string | undefined;
        } | undefined;
        "css/module"?: {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
            exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
            localIdentName?: string | undefined;
        } | undefined;
        asset?: {
            filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            emit?: boolean | undefined;
            dataUrl?: {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            } | ((args_0: {
                filename: string;
                content: string;
            }, ...args_1: unknown[]) => string) | undefined;
        } | undefined;
        "asset/inline"?: {
            dataUrl?: {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            } | ((args_0: {
                filename: string;
                content: string;
            }, ...args_1: unknown[]) => string) | undefined;
        } | undefined;
        "asset/resource"?: {
            filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            emit?: boolean | undefined;
        } | undefined;
    } | undefined;
    rules?: (false | "" | 0 | "..." | RuleSetRule | null | undefined)[] | undefined;
    defaultRules?: (false | "" | 0 | "..." | RuleSetRule | null | undefined)[] | undefined;
    noParse?: string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
}, {
    parser?: {
        javascript?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
        css?: {
            namedExports?: boolean | undefined;
        } | undefined;
        "css/auto"?: {
            namedExports?: boolean | undefined;
        } | undefined;
        "css/module"?: {
            namedExports?: boolean | undefined;
        } | undefined;
        asset?: {
            dataUrlCondition?: {
                maxSize?: number | undefined;
            } | undefined;
        } | undefined;
        "javascript/auto"?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
        "javascript/dynamic"?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
        "javascript/esm"?: {
            url?: boolean | "relative" | undefined;
            dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
            dynamicImportPreload?: number | boolean | undefined;
            dynamicImportPrefetch?: number | boolean | undefined;
            dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
            importMeta?: boolean | undefined;
            exprContextCritical?: boolean | undefined;
            wrappedContextCritical?: boolean | undefined;
            exportsPresence?: false | "auto" | "error" | "warn" | undefined;
            importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
            strictExportPresence?: boolean | undefined;
            worker?: boolean | string[] | undefined;
            overrideStrict?: "strict" | "non-strict" | undefined;
            requireAsExpression?: boolean | undefined;
            requireDynamic?: boolean | undefined;
            requireResolve?: boolean | undefined;
            importDynamic?: boolean | undefined;
        } | undefined;
    } | Record<string, Record<string, any>> | undefined;
    generator?: Record<string, Record<string, any>> | {
        css?: {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
        } | undefined;
        "css/auto"?: {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
            exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
            localIdentName?: string | undefined;
        } | undefined;
        "css/module"?: {
            exportsOnly?: boolean | undefined;
            esModule?: boolean | undefined;
            exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
            localIdentName?: string | undefined;
        } | undefined;
        asset?: {
            filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            emit?: boolean | undefined;
            dataUrl?: {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            } | ((args_0: {
                filename: string;
                content: string;
            }, ...args_1: unknown[]) => string) | undefined;
        } | undefined;
        "asset/inline"?: {
            dataUrl?: {
                mimetype?: string | undefined;
                encoding?: false | "base64" | undefined;
            } | ((args_0: {
                filename: string;
                content: string;
            }, ...args_1: unknown[]) => string) | undefined;
        } | undefined;
        "asset/resource"?: {
            filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
            emit?: boolean | undefined;
        } | undefined;
    } | undefined;
    rules?: (false | "" | 0 | "..." | RuleSetRule | null | undefined)[] | undefined;
    defaultRules?: (false | "" | 0 | "..." | RuleSetRule | null | undefined)[] | undefined;
    noParse?: string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
}>;
export type ModuleOptions = z.infer<typeof moduleOptions>;
declare const target: z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["web", "webworker", "es3", "es5", "es2015", "es2016", "es2017", "es2018", "es2019", "es2020", "es2021", "es2022"]>, z.ZodLiteral<"node">, z.ZodLiteral<"async-node">, z.ZodType<`node${number}`, z.ZodTypeDef, `node${number}`>, z.ZodType<`async-node${number}`, z.ZodTypeDef, `async-node${number}`>, z.ZodType<`node${number}.${number}`, z.ZodTypeDef, `node${number}.${number}`>, z.ZodType<`async-node${number}.${number}`, z.ZodTypeDef, `async-node${number}.${number}`>, z.ZodLiteral<"electron-main">, z.ZodType<`electron${number}-main`, z.ZodTypeDef, `electron${number}-main`>, z.ZodType<`electron${number}.${number}-main`, z.ZodTypeDef, `electron${number}.${number}-main`>, z.ZodLiteral<"electron-renderer">, z.ZodType<`electron${number}-renderer`, z.ZodTypeDef, `electron${number}-renderer`>, z.ZodType<`electron${number}.${number}-renderer`, z.ZodTypeDef, `electron${number}.${number}-renderer`>, z.ZodLiteral<"electron-preload">, z.ZodType<`electron${number}-preload`, z.ZodTypeDef, `electron${number}-preload`>, z.ZodType<`electron${number}.${number}-preload`, z.ZodTypeDef, `electron${number}.${number}-preload`>, z.ZodLiteral<"nwjs">, z.ZodType<`nwjs${number}`, z.ZodTypeDef, `nwjs${number}`>, z.ZodType<`nwjs${number}.${number}`, z.ZodTypeDef, `nwjs${number}.${number}`>, z.ZodLiteral<"node-webkit">, z.ZodType<`node-webkit${number}`, z.ZodTypeDef, `node-webkit${number}`>, z.ZodType<`node-webkit${number}.${number}`, z.ZodTypeDef, `node-webkit${number}.${number}`>, z.ZodLiteral<"browserslist">, z.ZodType<`browserslist:${string}`, z.ZodTypeDef, `browserslist:${string}`>]>, z.ZodArray<z.ZodUnion<[z.ZodEnum<["web", "webworker", "es3", "es5", "es2015", "es2016", "es2017", "es2018", "es2019", "es2020", "es2021", "es2022"]>, z.ZodLiteral<"node">, z.ZodLiteral<"async-node">, z.ZodType<`node${number}`, z.ZodTypeDef, `node${number}`>, z.ZodType<`async-node${number}`, z.ZodTypeDef, `async-node${number}`>, z.ZodType<`node${number}.${number}`, z.ZodTypeDef, `node${number}.${number}`>, z.ZodType<`async-node${number}.${number}`, z.ZodTypeDef, `async-node${number}.${number}`>, z.ZodLiteral<"electron-main">, z.ZodType<`electron${number}-main`, z.ZodTypeDef, `electron${number}-main`>, z.ZodType<`electron${number}.${number}-main`, z.ZodTypeDef, `electron${number}.${number}-main`>, z.ZodLiteral<"electron-renderer">, z.ZodType<`electron${number}-renderer`, z.ZodTypeDef, `electron${number}-renderer`>, z.ZodType<`electron${number}.${number}-renderer`, z.ZodTypeDef, `electron${number}.${number}-renderer`>, z.ZodLiteral<"electron-preload">, z.ZodType<`electron${number}-preload`, z.ZodTypeDef, `electron${number}-preload`>, z.ZodType<`electron${number}.${number}-preload`, z.ZodTypeDef, `electron${number}.${number}-preload`>, z.ZodLiteral<"nwjs">, z.ZodType<`nwjs${number}`, z.ZodTypeDef, `nwjs${number}`>, z.ZodType<`nwjs${number}.${number}`, z.ZodTypeDef, `nwjs${number}.${number}`>, z.ZodLiteral<"node-webkit">, z.ZodType<`node-webkit${number}`, z.ZodTypeDef, `node-webkit${number}`>, z.ZodType<`node-webkit${number}.${number}`, z.ZodTypeDef, `node-webkit${number}.${number}`>, z.ZodLiteral<"browserslist">, z.ZodType<`browserslist:${string}`, z.ZodTypeDef, `browserslist:${string}`>]>, "many">]>;
export type Target = z.infer<typeof target>;
export declare const externalsType: z.ZodEnum<["var", "module", "assign", "this", "window", "self", "global", "commonjs", "commonjs2", "commonjs-module", "commonjs-static", "amd", "amd-require", "umd", "umd2", "jsonp", "system", "promise", "import", "module-import", "script", "node-commonjs"]>;
declare const externalsPresets: z.ZodObject<{
    node: z.ZodOptional<z.ZodBoolean>;
    web: z.ZodOptional<z.ZodBoolean>;
    webAsync: z.ZodOptional<z.ZodBoolean>;
    electron: z.ZodOptional<z.ZodBoolean>;
    electronMain: z.ZodOptional<z.ZodBoolean>;
    electronPreload: z.ZodOptional<z.ZodBoolean>;
    electronRenderer: z.ZodOptional<z.ZodBoolean>;
    nwjs: z.ZodOptional<z.ZodBoolean>;
}, "strict", z.ZodTypeAny, {
    node?: boolean | undefined;
    web?: boolean | undefined;
    nwjs?: boolean | undefined;
    webAsync?: boolean | undefined;
    electron?: boolean | undefined;
    electronMain?: boolean | undefined;
    electronPreload?: boolean | undefined;
    electronRenderer?: boolean | undefined;
}, {
    node?: boolean | undefined;
    web?: boolean | undefined;
    nwjs?: boolean | undefined;
    webAsync?: boolean | undefined;
    electron?: boolean | undefined;
    electronMain?: boolean | undefined;
    electronPreload?: boolean | undefined;
    electronRenderer?: boolean | undefined;
}>;
export type ExternalsPresets = z.infer<typeof externalsPresets>;
declare const filterItemTypes: z.ZodUnion<[z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodString]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>;
export type FilterItemTypes = z.infer<typeof filterItemTypes>;
declare const filterTypes: z.ZodUnion<[z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodString]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>, "many">, z.ZodUnion<[z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodString]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>]>;
export type FilterTypes = z.infer<typeof filterTypes>;
declare const infrastructureLogging: z.ZodObject<{
    appendOnly: z.ZodOptional<z.ZodBoolean>;
    colors: z.ZodOptional<z.ZodBoolean>;
    console: z.ZodOptional<z.ZodType<Console, z.ZodTypeDef, Console>>;
    debug: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodUnion<[z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodString]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>, "many">, z.ZodUnion<[z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodString]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>]>]>>;
    level: z.ZodOptional<z.ZodEnum<["none", "error", "warn", "info", "log", "verbose"]>>;
    stream: z.ZodOptional<z.ZodType<NodeJS.WritableStream, z.ZodTypeDef, NodeJS.WritableStream>>;
}, "strict", z.ZodTypeAny, {
    debug?: string | boolean | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
    colors?: boolean | undefined;
    appendOnly?: boolean | undefined;
    console?: Console | undefined;
    level?: "log" | "info" | "verbose" | "none" | "error" | "warn" | undefined;
    stream?: NodeJS.WritableStream | undefined;
}, {
    debug?: string | boolean | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
    colors?: boolean | undefined;
    appendOnly?: boolean | undefined;
    console?: Console | undefined;
    level?: "log" | "info" | "verbose" | "none" | "error" | "warn" | undefined;
    stream?: NodeJS.WritableStream | undefined;
}>;
export type InfrastructureLogging = z.infer<typeof infrastructureLogging>;
declare const devTool: z.ZodUnion<[z.ZodLiteral<false>, z.ZodEnum<["eval", "cheap-source-map", "cheap-module-source-map", "source-map", "inline-cheap-source-map", "inline-cheap-module-source-map", "inline-source-map", "inline-nosources-cheap-source-map", "inline-nosources-cheap-module-source-map", "inline-nosources-source-map", "nosources-cheap-source-map", "nosources-cheap-module-source-map", "nosources-source-map", "hidden-nosources-cheap-source-map", "hidden-nosources-cheap-module-source-map", "hidden-nosources-source-map", "hidden-cheap-source-map", "hidden-cheap-module-source-map", "hidden-source-map", "eval-cheap-source-map", "eval-cheap-module-source-map", "eval-source-map", "eval-nosources-cheap-source-map", "eval-nosources-cheap-module-source-map", "eval-nosources-source-map"]>]>;
export type DevTool = z.infer<typeof devTool>;
declare const nodeOptions: z.ZodObject<{
    __dirname: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodEnum<["warn-mock", "mock", "eval-only", "node-module"]>]>>;
    __filename: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodEnum<["warn-mock", "mock", "eval-only", "node-module"]>]>>;
    global: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodLiteral<"warn">]>>;
}, "strict", z.ZodTypeAny, {
    global?: boolean | "warn" | undefined;
    __dirname?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
    __filename?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
}, {
    global?: boolean | "warn" | undefined;
    __dirname?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
    __filename?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
}>;
export type NodeOptions = z.infer<typeof nodeOptions>;
declare const node: z.ZodUnion<[z.ZodLiteral<false>, z.ZodObject<{
    __dirname: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodEnum<["warn-mock", "mock", "eval-only", "node-module"]>]>>;
    __filename: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodEnum<["warn-mock", "mock", "eval-only", "node-module"]>]>>;
    global: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodLiteral<"warn">]>>;
}, "strict", z.ZodTypeAny, {
    global?: boolean | "warn" | undefined;
    __dirname?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
    __filename?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
}, {
    global?: boolean | "warn" | undefined;
    __dirname?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
    __filename?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
}>]>;
export type Node = z.infer<typeof node>;
declare const loader: z.ZodRecord<z.ZodString, z.ZodAny>;
export type Loader = z.infer<typeof loader>;
declare const snapshotOptions: z.ZodObject<{}, "strict", z.ZodTypeAny, {}, {}>;
export type SnapshotOptions = z.infer<typeof snapshotOptions>;
declare const cacheOptions: z.ZodBoolean;
export type CacheOptions = z.infer<typeof cacheOptions>;
declare const statsOptions: z.ZodObject<{
    all: z.ZodOptional<z.ZodBoolean>;
    preset: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodEnum<["normal", "none", "verbose", "errors-only", "errors-warnings", "minimal", "detailed", "summary"]>]>>;
    assets: z.ZodOptional<z.ZodBoolean>;
    chunks: z.ZodOptional<z.ZodBoolean>;
    modules: z.ZodOptional<z.ZodBoolean>;
    entrypoints: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodLiteral<"auto">]>>;
    chunkGroups: z.ZodOptional<z.ZodBoolean>;
    warnings: z.ZodOptional<z.ZodBoolean>;
    warningsCount: z.ZodOptional<z.ZodBoolean>;
    errors: z.ZodOptional<z.ZodBoolean>;
    errorsCount: z.ZodOptional<z.ZodBoolean>;
    colors: z.ZodOptional<z.ZodBoolean>;
    hash: z.ZodOptional<z.ZodBoolean>;
    version: z.ZodOptional<z.ZodBoolean>;
    reasons: z.ZodOptional<z.ZodBoolean>;
    publicPath: z.ZodOptional<z.ZodBoolean>;
    outputPath: z.ZodOptional<z.ZodBoolean>;
    chunkModules: z.ZodOptional<z.ZodBoolean>;
    chunkRelations: z.ZodOptional<z.ZodBoolean>;
    ids: z.ZodOptional<z.ZodBoolean>;
    timings: z.ZodOptional<z.ZodBoolean>;
    builtAt: z.ZodOptional<z.ZodBoolean>;
    moduleAssets: z.ZodOptional<z.ZodBoolean>;
    nestedModules: z.ZodOptional<z.ZodBoolean>;
    source: z.ZodOptional<z.ZodBoolean>;
    logging: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["none", "error", "warn", "info", "log", "verbose"]>, z.ZodBoolean]>>;
    loggingDebug: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodUnion<[z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodString]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>, "many">, z.ZodUnion<[z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodString]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>]>]>>;
    loggingTrace: z.ZodOptional<z.ZodBoolean>;
    runtimeModules: z.ZodOptional<z.ZodBoolean>;
    children: z.ZodOptional<z.ZodBoolean>;
    usedExports: z.ZodOptional<z.ZodBoolean>;
    providedExports: z.ZodOptional<z.ZodBoolean>;
    optimizationBailout: z.ZodOptional<z.ZodBoolean>;
    groupModulesByType: z.ZodOptional<z.ZodBoolean>;
    groupModulesByCacheStatus: z.ZodOptional<z.ZodBoolean>;
    groupModulesByLayer: z.ZodOptional<z.ZodBoolean>;
    groupModulesByAttributes: z.ZodOptional<z.ZodBoolean>;
    groupModulesByPath: z.ZodOptional<z.ZodBoolean>;
    groupModulesByExtension: z.ZodOptional<z.ZodBoolean>;
    modulesSpace: z.ZodOptional<z.ZodNumber>;
    chunkModulesSpace: z.ZodOptional<z.ZodNumber>;
    nestedModulesSpace: z.ZodOptional<z.ZodNumber>;
    relatedAssets: z.ZodOptional<z.ZodBoolean>;
    groupAssetsByEmitStatus: z.ZodOptional<z.ZodBoolean>;
    groupAssetsByInfo: z.ZodOptional<z.ZodBoolean>;
    groupAssetsByPath: z.ZodOptional<z.ZodBoolean>;
    groupAssetsByExtension: z.ZodOptional<z.ZodBoolean>;
    groupAssetsByChunk: z.ZodOptional<z.ZodBoolean>;
    assetsSpace: z.ZodOptional<z.ZodNumber>;
    orphanModules: z.ZodOptional<z.ZodBoolean>;
    excludeModules: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString, z.ZodAny, z.ZodAny], null>, z.ZodBoolean>]>, "many">, z.ZodString]>, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString, z.ZodAny, z.ZodAny], null>, z.ZodBoolean>]>, z.ZodBoolean]>>;
    excludeAssets: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString, z.ZodAny], null>, z.ZodBoolean>]>, "many">, z.ZodString]>, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString, z.ZodAny], null>, z.ZodBoolean>]>>;
    modulesSort: z.ZodOptional<z.ZodString>;
    chunkModulesSort: z.ZodOptional<z.ZodString>;
    nestedModulesSort: z.ZodOptional<z.ZodString>;
    chunksSort: z.ZodOptional<z.ZodString>;
    assetsSort: z.ZodOptional<z.ZodString>;
    performance: z.ZodOptional<z.ZodBoolean>;
    env: z.ZodOptional<z.ZodBoolean>;
    chunkGroupAuxiliary: z.ZodOptional<z.ZodBoolean>;
    chunkGroupChildren: z.ZodOptional<z.ZodBoolean>;
    chunkGroupMaxAssets: z.ZodOptional<z.ZodNumber>;
    dependentModules: z.ZodOptional<z.ZodBoolean>;
    chunkOrigins: z.ZodOptional<z.ZodBoolean>;
    runtime: z.ZodOptional<z.ZodBoolean>;
    depth: z.ZodOptional<z.ZodBoolean>;
    reasonsSpace: z.ZodOptional<z.ZodNumber>;
    groupReasonsByOrigin: z.ZodOptional<z.ZodBoolean>;
    errorDetails: z.ZodOptional<z.ZodBoolean>;
    errorStack: z.ZodOptional<z.ZodBoolean>;
    moduleTrace: z.ZodOptional<z.ZodBoolean>;
    cachedModules: z.ZodOptional<z.ZodBoolean>;
    cachedAssets: z.ZodOptional<z.ZodBoolean>;
    cached: z.ZodOptional<z.ZodBoolean>;
    errorsSpace: z.ZodOptional<z.ZodNumber>;
    warningsSpace: z.ZodOptional<z.ZodNumber>;
}, "strict", z.ZodTypeAny, {
    source?: boolean | undefined;
    publicPath?: boolean | undefined;
    all?: boolean | undefined;
    preset?: boolean | "verbose" | "normal" | "none" | "errors-only" | "errors-warnings" | "minimal" | "detailed" | "summary" | undefined;
    assets?: boolean | undefined;
    chunks?: boolean | undefined;
    modules?: boolean | undefined;
    entrypoints?: boolean | "auto" | undefined;
    chunkGroups?: boolean | undefined;
    warnings?: boolean | undefined;
    warningsCount?: boolean | undefined;
    errors?: boolean | undefined;
    errorsCount?: boolean | undefined;
    colors?: boolean | undefined;
    hash?: boolean | undefined;
    version?: boolean | undefined;
    reasons?: boolean | undefined;
    outputPath?: boolean | undefined;
    chunkModules?: boolean | undefined;
    chunkRelations?: boolean | undefined;
    ids?: boolean | undefined;
    timings?: boolean | undefined;
    builtAt?: boolean | undefined;
    moduleAssets?: boolean | undefined;
    nestedModules?: boolean | undefined;
    logging?: boolean | "log" | "info" | "verbose" | "none" | "error" | "warn" | undefined;
    loggingDebug?: string | boolean | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
    loggingTrace?: boolean | undefined;
    runtimeModules?: boolean | undefined;
    children?: boolean | undefined;
    usedExports?: boolean | undefined;
    providedExports?: boolean | undefined;
    optimizationBailout?: boolean | undefined;
    groupModulesByType?: boolean | undefined;
    groupModulesByCacheStatus?: boolean | undefined;
    groupModulesByLayer?: boolean | undefined;
    groupModulesByAttributes?: boolean | undefined;
    groupModulesByPath?: boolean | undefined;
    groupModulesByExtension?: boolean | undefined;
    modulesSpace?: number | undefined;
    chunkModulesSpace?: number | undefined;
    nestedModulesSpace?: number | undefined;
    relatedAssets?: boolean | undefined;
    groupAssetsByEmitStatus?: boolean | undefined;
    groupAssetsByInfo?: boolean | undefined;
    groupAssetsByPath?: boolean | undefined;
    groupAssetsByExtension?: boolean | undefined;
    groupAssetsByChunk?: boolean | undefined;
    assetsSpace?: number | undefined;
    orphanModules?: boolean | undefined;
    excludeModules?: string | boolean | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean))[] | undefined;
    excludeAssets?: string | RegExp | ((args_0: string, args_1: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any) => boolean))[] | undefined;
    modulesSort?: string | undefined;
    chunkModulesSort?: string | undefined;
    nestedModulesSort?: string | undefined;
    chunksSort?: string | undefined;
    assetsSort?: string | undefined;
    performance?: boolean | undefined;
    env?: boolean | undefined;
    chunkGroupAuxiliary?: boolean | undefined;
    chunkGroupChildren?: boolean | undefined;
    chunkGroupMaxAssets?: number | undefined;
    dependentModules?: boolean | undefined;
    chunkOrigins?: boolean | undefined;
    runtime?: boolean | undefined;
    depth?: boolean | undefined;
    reasonsSpace?: number | undefined;
    groupReasonsByOrigin?: boolean | undefined;
    errorDetails?: boolean | undefined;
    errorStack?: boolean | undefined;
    moduleTrace?: boolean | undefined;
    cachedModules?: boolean | undefined;
    cachedAssets?: boolean | undefined;
    cached?: boolean | undefined;
    errorsSpace?: number | undefined;
    warningsSpace?: number | undefined;
}, {
    source?: boolean | undefined;
    publicPath?: boolean | undefined;
    all?: boolean | undefined;
    preset?: boolean | "verbose" | "normal" | "none" | "errors-only" | "errors-warnings" | "minimal" | "detailed" | "summary" | undefined;
    assets?: boolean | undefined;
    chunks?: boolean | undefined;
    modules?: boolean | undefined;
    entrypoints?: boolean | "auto" | undefined;
    chunkGroups?: boolean | undefined;
    warnings?: boolean | undefined;
    warningsCount?: boolean | undefined;
    errors?: boolean | undefined;
    errorsCount?: boolean | undefined;
    colors?: boolean | undefined;
    hash?: boolean | undefined;
    version?: boolean | undefined;
    reasons?: boolean | undefined;
    outputPath?: boolean | undefined;
    chunkModules?: boolean | undefined;
    chunkRelations?: boolean | undefined;
    ids?: boolean | undefined;
    timings?: boolean | undefined;
    builtAt?: boolean | undefined;
    moduleAssets?: boolean | undefined;
    nestedModules?: boolean | undefined;
    logging?: boolean | "log" | "info" | "verbose" | "none" | "error" | "warn" | undefined;
    loggingDebug?: string | boolean | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
    loggingTrace?: boolean | undefined;
    runtimeModules?: boolean | undefined;
    children?: boolean | undefined;
    usedExports?: boolean | undefined;
    providedExports?: boolean | undefined;
    optimizationBailout?: boolean | undefined;
    groupModulesByType?: boolean | undefined;
    groupModulesByCacheStatus?: boolean | undefined;
    groupModulesByLayer?: boolean | undefined;
    groupModulesByAttributes?: boolean | undefined;
    groupModulesByPath?: boolean | undefined;
    groupModulesByExtension?: boolean | undefined;
    modulesSpace?: number | undefined;
    chunkModulesSpace?: number | undefined;
    nestedModulesSpace?: number | undefined;
    relatedAssets?: boolean | undefined;
    groupAssetsByEmitStatus?: boolean | undefined;
    groupAssetsByInfo?: boolean | undefined;
    groupAssetsByPath?: boolean | undefined;
    groupAssetsByExtension?: boolean | undefined;
    groupAssetsByChunk?: boolean | undefined;
    assetsSpace?: number | undefined;
    orphanModules?: boolean | undefined;
    excludeModules?: string | boolean | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean))[] | undefined;
    excludeAssets?: string | RegExp | ((args_0: string, args_1: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any) => boolean))[] | undefined;
    modulesSort?: string | undefined;
    chunkModulesSort?: string | undefined;
    nestedModulesSort?: string | undefined;
    chunksSort?: string | undefined;
    assetsSort?: string | undefined;
    performance?: boolean | undefined;
    env?: boolean | undefined;
    chunkGroupAuxiliary?: boolean | undefined;
    chunkGroupChildren?: boolean | undefined;
    chunkGroupMaxAssets?: number | undefined;
    dependentModules?: boolean | undefined;
    chunkOrigins?: boolean | undefined;
    runtime?: boolean | undefined;
    depth?: boolean | undefined;
    reasonsSpace?: number | undefined;
    groupReasonsByOrigin?: boolean | undefined;
    errorDetails?: boolean | undefined;
    errorStack?: boolean | undefined;
    moduleTrace?: boolean | undefined;
    cachedModules?: boolean | undefined;
    cachedAssets?: boolean | undefined;
    cached?: boolean | undefined;
    errorsSpace?: number | undefined;
    warningsSpace?: number | undefined;
}>;
export type StatsOptions = z.infer<typeof statsOptions>;
declare const statsValue: z.ZodUnion<[z.ZodUnion<[z.ZodBoolean, z.ZodEnum<["normal", "none", "verbose", "errors-only", "errors-warnings", "minimal", "detailed", "summary"]>]>, z.ZodObject<{
    all: z.ZodOptional<z.ZodBoolean>;
    preset: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodEnum<["normal", "none", "verbose", "errors-only", "errors-warnings", "minimal", "detailed", "summary"]>]>>;
    assets: z.ZodOptional<z.ZodBoolean>;
    chunks: z.ZodOptional<z.ZodBoolean>;
    modules: z.ZodOptional<z.ZodBoolean>;
    entrypoints: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodLiteral<"auto">]>>;
    chunkGroups: z.ZodOptional<z.ZodBoolean>;
    warnings: z.ZodOptional<z.ZodBoolean>;
    warningsCount: z.ZodOptional<z.ZodBoolean>;
    errors: z.ZodOptional<z.ZodBoolean>;
    errorsCount: z.ZodOptional<z.ZodBoolean>;
    colors: z.ZodOptional<z.ZodBoolean>;
    hash: z.ZodOptional<z.ZodBoolean>;
    version: z.ZodOptional<z.ZodBoolean>;
    reasons: z.ZodOptional<z.ZodBoolean>;
    publicPath: z.ZodOptional<z.ZodBoolean>;
    outputPath: z.ZodOptional<z.ZodBoolean>;
    chunkModules: z.ZodOptional<z.ZodBoolean>;
    chunkRelations: z.ZodOptional<z.ZodBoolean>;
    ids: z.ZodOptional<z.ZodBoolean>;
    timings: z.ZodOptional<z.ZodBoolean>;
    builtAt: z.ZodOptional<z.ZodBoolean>;
    moduleAssets: z.ZodOptional<z.ZodBoolean>;
    nestedModules: z.ZodOptional<z.ZodBoolean>;
    source: z.ZodOptional<z.ZodBoolean>;
    logging: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["none", "error", "warn", "info", "log", "verbose"]>, z.ZodBoolean]>>;
    loggingDebug: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodUnion<[z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodString]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>, "many">, z.ZodUnion<[z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodString]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>]>]>>;
    loggingTrace: z.ZodOptional<z.ZodBoolean>;
    runtimeModules: z.ZodOptional<z.ZodBoolean>;
    children: z.ZodOptional<z.ZodBoolean>;
    usedExports: z.ZodOptional<z.ZodBoolean>;
    providedExports: z.ZodOptional<z.ZodBoolean>;
    optimizationBailout: z.ZodOptional<z.ZodBoolean>;
    groupModulesByType: z.ZodOptional<z.ZodBoolean>;
    groupModulesByCacheStatus: z.ZodOptional<z.ZodBoolean>;
    groupModulesByLayer: z.ZodOptional<z.ZodBoolean>;
    groupModulesByAttributes: z.ZodOptional<z.ZodBoolean>;
    groupModulesByPath: z.ZodOptional<z.ZodBoolean>;
    groupModulesByExtension: z.ZodOptional<z.ZodBoolean>;
    modulesSpace: z.ZodOptional<z.ZodNumber>;
    chunkModulesSpace: z.ZodOptional<z.ZodNumber>;
    nestedModulesSpace: z.ZodOptional<z.ZodNumber>;
    relatedAssets: z.ZodOptional<z.ZodBoolean>;
    groupAssetsByEmitStatus: z.ZodOptional<z.ZodBoolean>;
    groupAssetsByInfo: z.ZodOptional<z.ZodBoolean>;
    groupAssetsByPath: z.ZodOptional<z.ZodBoolean>;
    groupAssetsByExtension: z.ZodOptional<z.ZodBoolean>;
    groupAssetsByChunk: z.ZodOptional<z.ZodBoolean>;
    assetsSpace: z.ZodOptional<z.ZodNumber>;
    orphanModules: z.ZodOptional<z.ZodBoolean>;
    excludeModules: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString, z.ZodAny, z.ZodAny], null>, z.ZodBoolean>]>, "many">, z.ZodString]>, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString, z.ZodAny, z.ZodAny], null>, z.ZodBoolean>]>, z.ZodBoolean]>>;
    excludeAssets: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString, z.ZodAny], null>, z.ZodBoolean>]>, "many">, z.ZodString]>, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString, z.ZodAny], null>, z.ZodBoolean>]>>;
    modulesSort: z.ZodOptional<z.ZodString>;
    chunkModulesSort: z.ZodOptional<z.ZodString>;
    nestedModulesSort: z.ZodOptional<z.ZodString>;
    chunksSort: z.ZodOptional<z.ZodString>;
    assetsSort: z.ZodOptional<z.ZodString>;
    performance: z.ZodOptional<z.ZodBoolean>;
    env: z.ZodOptional<z.ZodBoolean>;
    chunkGroupAuxiliary: z.ZodOptional<z.ZodBoolean>;
    chunkGroupChildren: z.ZodOptional<z.ZodBoolean>;
    chunkGroupMaxAssets: z.ZodOptional<z.ZodNumber>;
    dependentModules: z.ZodOptional<z.ZodBoolean>;
    chunkOrigins: z.ZodOptional<z.ZodBoolean>;
    runtime: z.ZodOptional<z.ZodBoolean>;
    depth: z.ZodOptional<z.ZodBoolean>;
    reasonsSpace: z.ZodOptional<z.ZodNumber>;
    groupReasonsByOrigin: z.ZodOptional<z.ZodBoolean>;
    errorDetails: z.ZodOptional<z.ZodBoolean>;
    errorStack: z.ZodOptional<z.ZodBoolean>;
    moduleTrace: z.ZodOptional<z.ZodBoolean>;
    cachedModules: z.ZodOptional<z.ZodBoolean>;
    cachedAssets: z.ZodOptional<z.ZodBoolean>;
    cached: z.ZodOptional<z.ZodBoolean>;
    errorsSpace: z.ZodOptional<z.ZodNumber>;
    warningsSpace: z.ZodOptional<z.ZodNumber>;
}, "strict", z.ZodTypeAny, {
    source?: boolean | undefined;
    publicPath?: boolean | undefined;
    all?: boolean | undefined;
    preset?: boolean | "verbose" | "normal" | "none" | "errors-only" | "errors-warnings" | "minimal" | "detailed" | "summary" | undefined;
    assets?: boolean | undefined;
    chunks?: boolean | undefined;
    modules?: boolean | undefined;
    entrypoints?: boolean | "auto" | undefined;
    chunkGroups?: boolean | undefined;
    warnings?: boolean | undefined;
    warningsCount?: boolean | undefined;
    errors?: boolean | undefined;
    errorsCount?: boolean | undefined;
    colors?: boolean | undefined;
    hash?: boolean | undefined;
    version?: boolean | undefined;
    reasons?: boolean | undefined;
    outputPath?: boolean | undefined;
    chunkModules?: boolean | undefined;
    chunkRelations?: boolean | undefined;
    ids?: boolean | undefined;
    timings?: boolean | undefined;
    builtAt?: boolean | undefined;
    moduleAssets?: boolean | undefined;
    nestedModules?: boolean | undefined;
    logging?: boolean | "log" | "info" | "verbose" | "none" | "error" | "warn" | undefined;
    loggingDebug?: string | boolean | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
    loggingTrace?: boolean | undefined;
    runtimeModules?: boolean | undefined;
    children?: boolean | undefined;
    usedExports?: boolean | undefined;
    providedExports?: boolean | undefined;
    optimizationBailout?: boolean | undefined;
    groupModulesByType?: boolean | undefined;
    groupModulesByCacheStatus?: boolean | undefined;
    groupModulesByLayer?: boolean | undefined;
    groupModulesByAttributes?: boolean | undefined;
    groupModulesByPath?: boolean | undefined;
    groupModulesByExtension?: boolean | undefined;
    modulesSpace?: number | undefined;
    chunkModulesSpace?: number | undefined;
    nestedModulesSpace?: number | undefined;
    relatedAssets?: boolean | undefined;
    groupAssetsByEmitStatus?: boolean | undefined;
    groupAssetsByInfo?: boolean | undefined;
    groupAssetsByPath?: boolean | undefined;
    groupAssetsByExtension?: boolean | undefined;
    groupAssetsByChunk?: boolean | undefined;
    assetsSpace?: number | undefined;
    orphanModules?: boolean | undefined;
    excludeModules?: string | boolean | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean))[] | undefined;
    excludeAssets?: string | RegExp | ((args_0: string, args_1: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any) => boolean))[] | undefined;
    modulesSort?: string | undefined;
    chunkModulesSort?: string | undefined;
    nestedModulesSort?: string | undefined;
    chunksSort?: string | undefined;
    assetsSort?: string | undefined;
    performance?: boolean | undefined;
    env?: boolean | undefined;
    chunkGroupAuxiliary?: boolean | undefined;
    chunkGroupChildren?: boolean | undefined;
    chunkGroupMaxAssets?: number | undefined;
    dependentModules?: boolean | undefined;
    chunkOrigins?: boolean | undefined;
    runtime?: boolean | undefined;
    depth?: boolean | undefined;
    reasonsSpace?: number | undefined;
    groupReasonsByOrigin?: boolean | undefined;
    errorDetails?: boolean | undefined;
    errorStack?: boolean | undefined;
    moduleTrace?: boolean | undefined;
    cachedModules?: boolean | undefined;
    cachedAssets?: boolean | undefined;
    cached?: boolean | undefined;
    errorsSpace?: number | undefined;
    warningsSpace?: number | undefined;
}, {
    source?: boolean | undefined;
    publicPath?: boolean | undefined;
    all?: boolean | undefined;
    preset?: boolean | "verbose" | "normal" | "none" | "errors-only" | "errors-warnings" | "minimal" | "detailed" | "summary" | undefined;
    assets?: boolean | undefined;
    chunks?: boolean | undefined;
    modules?: boolean | undefined;
    entrypoints?: boolean | "auto" | undefined;
    chunkGroups?: boolean | undefined;
    warnings?: boolean | undefined;
    warningsCount?: boolean | undefined;
    errors?: boolean | undefined;
    errorsCount?: boolean | undefined;
    colors?: boolean | undefined;
    hash?: boolean | undefined;
    version?: boolean | undefined;
    reasons?: boolean | undefined;
    outputPath?: boolean | undefined;
    chunkModules?: boolean | undefined;
    chunkRelations?: boolean | undefined;
    ids?: boolean | undefined;
    timings?: boolean | undefined;
    builtAt?: boolean | undefined;
    moduleAssets?: boolean | undefined;
    nestedModules?: boolean | undefined;
    logging?: boolean | "log" | "info" | "verbose" | "none" | "error" | "warn" | undefined;
    loggingDebug?: string | boolean | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
    loggingTrace?: boolean | undefined;
    runtimeModules?: boolean | undefined;
    children?: boolean | undefined;
    usedExports?: boolean | undefined;
    providedExports?: boolean | undefined;
    optimizationBailout?: boolean | undefined;
    groupModulesByType?: boolean | undefined;
    groupModulesByCacheStatus?: boolean | undefined;
    groupModulesByLayer?: boolean | undefined;
    groupModulesByAttributes?: boolean | undefined;
    groupModulesByPath?: boolean | undefined;
    groupModulesByExtension?: boolean | undefined;
    modulesSpace?: number | undefined;
    chunkModulesSpace?: number | undefined;
    nestedModulesSpace?: number | undefined;
    relatedAssets?: boolean | undefined;
    groupAssetsByEmitStatus?: boolean | undefined;
    groupAssetsByInfo?: boolean | undefined;
    groupAssetsByPath?: boolean | undefined;
    groupAssetsByExtension?: boolean | undefined;
    groupAssetsByChunk?: boolean | undefined;
    assetsSpace?: number | undefined;
    orphanModules?: boolean | undefined;
    excludeModules?: string | boolean | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean))[] | undefined;
    excludeAssets?: string | RegExp | ((args_0: string, args_1: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any) => boolean))[] | undefined;
    modulesSort?: string | undefined;
    chunkModulesSort?: string | undefined;
    nestedModulesSort?: string | undefined;
    chunksSort?: string | undefined;
    assetsSort?: string | undefined;
    performance?: boolean | undefined;
    env?: boolean | undefined;
    chunkGroupAuxiliary?: boolean | undefined;
    chunkGroupChildren?: boolean | undefined;
    chunkGroupMaxAssets?: number | undefined;
    dependentModules?: boolean | undefined;
    chunkOrigins?: boolean | undefined;
    runtime?: boolean | undefined;
    depth?: boolean | undefined;
    reasonsSpace?: number | undefined;
    groupReasonsByOrigin?: boolean | undefined;
    errorDetails?: boolean | undefined;
    errorStack?: boolean | undefined;
    moduleTrace?: boolean | undefined;
    cachedModules?: boolean | undefined;
    cachedAssets?: boolean | undefined;
    cached?: boolean | undefined;
    errorsSpace?: number | undefined;
    warningsSpace?: number | undefined;
}>]>;
export type StatsValue = z.infer<typeof statsValue>;
declare const rspackFutureOptions: z.ZodObject<{
    bundlerInfo: z.ZodOptional<z.ZodObject<{
        version: z.ZodOptional<z.ZodString>;
        bundler: z.ZodOptional<z.ZodString>;
        force: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodArray<z.ZodEnum<["version", "uniqueId"]>, "many">]>>;
    }, "strict", z.ZodTypeAny, {
        force?: boolean | ("version" | "uniqueId")[] | undefined;
        version?: string | undefined;
        bundler?: string | undefined;
    }, {
        force?: boolean | ("version" | "uniqueId")[] | undefined;
        version?: string | undefined;
        bundler?: string | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    bundlerInfo?: {
        force?: boolean | ("version" | "uniqueId")[] | undefined;
        version?: string | undefined;
        bundler?: string | undefined;
    } | undefined;
}, {
    bundlerInfo?: {
        force?: boolean | ("version" | "uniqueId")[] | undefined;
        version?: string | undefined;
        bundler?: string | undefined;
    } | undefined;
}>;
export type RspackFutureOptions = z.infer<typeof rspackFutureOptions>;
declare const lazyCompilationOptions: z.ZodObject<{
    backend: z.ZodOptional<z.ZodObject<{
        client: z.ZodOptional<z.ZodString>;
        listen: z.ZodUnion<[z.ZodOptional<z.ZodNumber>, z.ZodObject<{
            port: z.ZodOptional<z.ZodNumber>;
            host: z.ZodOptional<z.ZodString>;
            backlog: z.ZodOptional<z.ZodNumber>;
            path: z.ZodOptional<z.ZodString>;
            exclusive: z.ZodOptional<z.ZodBoolean>;
            readableAll: z.ZodOptional<z.ZodBoolean>;
            writableAll: z.ZodOptional<z.ZodBoolean>;
            ipv6Only: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            path?: string | undefined;
            port?: number | undefined;
            host?: string | undefined;
            backlog?: number | undefined;
            exclusive?: boolean | undefined;
            readableAll?: boolean | undefined;
            writableAll?: boolean | undefined;
            ipv6Only?: boolean | undefined;
        }, {
            path?: string | undefined;
            port?: number | undefined;
            host?: string | undefined;
            backlog?: number | undefined;
            exclusive?: boolean | undefined;
            readableAll?: boolean | undefined;
            writableAll?: boolean | undefined;
            ipv6Only?: boolean | undefined;
        }>]>;
        protocol: z.ZodOptional<z.ZodEnum<["http", "https"]>>;
    }, "strip", z.ZodTypeAny, {
        client?: string | undefined;
        listen?: number | {
            path?: string | undefined;
            port?: number | undefined;
            host?: string | undefined;
            backlog?: number | undefined;
            exclusive?: boolean | undefined;
            readableAll?: boolean | undefined;
            writableAll?: boolean | undefined;
            ipv6Only?: boolean | undefined;
        } | undefined;
        protocol?: "http" | "https" | undefined;
    }, {
        client?: string | undefined;
        listen?: number | {
            path?: string | undefined;
            port?: number | undefined;
            host?: string | undefined;
            backlog?: number | undefined;
            exclusive?: boolean | undefined;
            readableAll?: boolean | undefined;
            writableAll?: boolean | undefined;
            ipv6Only?: boolean | undefined;
        } | undefined;
        protocol?: "http" | "https" | undefined;
    }>>;
    imports: z.ZodOptional<z.ZodBoolean>;
    entries: z.ZodOptional<z.ZodBoolean>;
    test: z.ZodOptional<z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodFunction<z.ZodTuple<[z.ZodType<Module, z.ZodTypeDef, Module>], z.ZodUnknown>, z.ZodBoolean>]>>;
}, "strip", z.ZodTypeAny, {
    entries?: boolean | undefined;
    test?: RegExp | ((args_0: Module, ...args_1: unknown[]) => boolean) | undefined;
    backend?: {
        client?: string | undefined;
        listen?: number | {
            path?: string | undefined;
            port?: number | undefined;
            host?: string | undefined;
            backlog?: number | undefined;
            exclusive?: boolean | undefined;
            readableAll?: boolean | undefined;
            writableAll?: boolean | undefined;
            ipv6Only?: boolean | undefined;
        } | undefined;
        protocol?: "http" | "https" | undefined;
    } | undefined;
    imports?: boolean | undefined;
}, {
    entries?: boolean | undefined;
    test?: RegExp | ((args_0: Module, ...args_1: unknown[]) => boolean) | undefined;
    backend?: {
        client?: string | undefined;
        listen?: number | {
            path?: string | undefined;
            port?: number | undefined;
            host?: string | undefined;
            backlog?: number | undefined;
            exclusive?: boolean | undefined;
            readableAll?: boolean | undefined;
            writableAll?: boolean | undefined;
            ipv6Only?: boolean | undefined;
        } | undefined;
        protocol?: "http" | "https" | undefined;
    } | undefined;
    imports?: boolean | undefined;
}>;
export type LazyCompilationOptions = z.infer<typeof lazyCompilationOptions>;
declare const incremental: z.ZodObject<{
    make: z.ZodOptional<z.ZodBoolean>;
    emitAssets: z.ZodOptional<z.ZodBoolean>;
    inferAsyncModules: z.ZodOptional<z.ZodBoolean>;
    providedExports: z.ZodOptional<z.ZodBoolean>;
    moduleHashes: z.ZodOptional<z.ZodBoolean>;
    moduleCodegen: z.ZodOptional<z.ZodBoolean>;
    moduleRuntimeRequirements: z.ZodOptional<z.ZodBoolean>;
}, "strict", z.ZodTypeAny, {
    make?: boolean | undefined;
    providedExports?: boolean | undefined;
    emitAssets?: boolean | undefined;
    inferAsyncModules?: boolean | undefined;
    moduleHashes?: boolean | undefined;
    moduleCodegen?: boolean | undefined;
    moduleRuntimeRequirements?: boolean | undefined;
}, {
    make?: boolean | undefined;
    providedExports?: boolean | undefined;
    emitAssets?: boolean | undefined;
    inferAsyncModules?: boolean | undefined;
    moduleHashes?: boolean | undefined;
    moduleCodegen?: boolean | undefined;
    moduleRuntimeRequirements?: boolean | undefined;
}>;
export type Incremental = z.infer<typeof incremental>;
declare const experiments: z.ZodObject<{
    lazyCompilation: z.ZodUnion<[z.ZodOptional<z.ZodBoolean>, z.ZodObject<{
        backend: z.ZodOptional<z.ZodObject<{
            client: z.ZodOptional<z.ZodString>;
            listen: z.ZodUnion<[z.ZodOptional<z.ZodNumber>, z.ZodObject<{
                port: z.ZodOptional<z.ZodNumber>;
                host: z.ZodOptional<z.ZodString>;
                backlog: z.ZodOptional<z.ZodNumber>;
                path: z.ZodOptional<z.ZodString>;
                exclusive: z.ZodOptional<z.ZodBoolean>;
                readableAll: z.ZodOptional<z.ZodBoolean>;
                writableAll: z.ZodOptional<z.ZodBoolean>;
                ipv6Only: z.ZodOptional<z.ZodBoolean>;
            }, "strip", z.ZodTypeAny, {
                path?: string | undefined;
                port?: number | undefined;
                host?: string | undefined;
                backlog?: number | undefined;
                exclusive?: boolean | undefined;
                readableAll?: boolean | undefined;
                writableAll?: boolean | undefined;
                ipv6Only?: boolean | undefined;
            }, {
                path?: string | undefined;
                port?: number | undefined;
                host?: string | undefined;
                backlog?: number | undefined;
                exclusive?: boolean | undefined;
                readableAll?: boolean | undefined;
                writableAll?: boolean | undefined;
                ipv6Only?: boolean | undefined;
            }>]>;
            protocol: z.ZodOptional<z.ZodEnum<["http", "https"]>>;
        }, "strip", z.ZodTypeAny, {
            client?: string | undefined;
            listen?: number | {
                path?: string | undefined;
                port?: number | undefined;
                host?: string | undefined;
                backlog?: number | undefined;
                exclusive?: boolean | undefined;
                readableAll?: boolean | undefined;
                writableAll?: boolean | undefined;
                ipv6Only?: boolean | undefined;
            } | undefined;
            protocol?: "http" | "https" | undefined;
        }, {
            client?: string | undefined;
            listen?: number | {
                path?: string | undefined;
                port?: number | undefined;
                host?: string | undefined;
                backlog?: number | undefined;
                exclusive?: boolean | undefined;
                readableAll?: boolean | undefined;
                writableAll?: boolean | undefined;
                ipv6Only?: boolean | undefined;
            } | undefined;
            protocol?: "http" | "https" | undefined;
        }>>;
        imports: z.ZodOptional<z.ZodBoolean>;
        entries: z.ZodOptional<z.ZodBoolean>;
        test: z.ZodOptional<z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodFunction<z.ZodTuple<[z.ZodType<Module, z.ZodTypeDef, Module>], z.ZodUnknown>, z.ZodBoolean>]>>;
    }, "strip", z.ZodTypeAny, {
        entries?: boolean | undefined;
        test?: RegExp | ((args_0: Module, ...args_1: unknown[]) => boolean) | undefined;
        backend?: {
            client?: string | undefined;
            listen?: number | {
                path?: string | undefined;
                port?: number | undefined;
                host?: string | undefined;
                backlog?: number | undefined;
                exclusive?: boolean | undefined;
                readableAll?: boolean | undefined;
                writableAll?: boolean | undefined;
                ipv6Only?: boolean | undefined;
            } | undefined;
            protocol?: "http" | "https" | undefined;
        } | undefined;
        imports?: boolean | undefined;
    }, {
        entries?: boolean | undefined;
        test?: RegExp | ((args_0: Module, ...args_1: unknown[]) => boolean) | undefined;
        backend?: {
            client?: string | undefined;
            listen?: number | {
                path?: string | undefined;
                port?: number | undefined;
                host?: string | undefined;
                backlog?: number | undefined;
                exclusive?: boolean | undefined;
                readableAll?: boolean | undefined;
                writableAll?: boolean | undefined;
                ipv6Only?: boolean | undefined;
            } | undefined;
            protocol?: "http" | "https" | undefined;
        } | undefined;
        imports?: boolean | undefined;
    }>]>;
    asyncWebAssembly: z.ZodOptional<z.ZodBoolean>;
    outputModule: z.ZodOptional<z.ZodBoolean>;
    topLevelAwait: z.ZodOptional<z.ZodBoolean>;
    css: z.ZodOptional<z.ZodBoolean>;
    layers: z.ZodOptional<z.ZodBoolean>;
    incremental: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodObject<{
        make: z.ZodOptional<z.ZodBoolean>;
        emitAssets: z.ZodOptional<z.ZodBoolean>;
        inferAsyncModules: z.ZodOptional<z.ZodBoolean>;
        providedExports: z.ZodOptional<z.ZodBoolean>;
        moduleHashes: z.ZodOptional<z.ZodBoolean>;
        moduleCodegen: z.ZodOptional<z.ZodBoolean>;
        moduleRuntimeRequirements: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        make?: boolean | undefined;
        providedExports?: boolean | undefined;
        emitAssets?: boolean | undefined;
        inferAsyncModules?: boolean | undefined;
        moduleHashes?: boolean | undefined;
        moduleCodegen?: boolean | undefined;
        moduleRuntimeRequirements?: boolean | undefined;
    }, {
        make?: boolean | undefined;
        providedExports?: boolean | undefined;
        emitAssets?: boolean | undefined;
        inferAsyncModules?: boolean | undefined;
        moduleHashes?: boolean | undefined;
        moduleCodegen?: boolean | undefined;
        moduleRuntimeRequirements?: boolean | undefined;
    }>]>>;
    futureDefaults: z.ZodOptional<z.ZodBoolean>;
    rspackFuture: z.ZodOptional<z.ZodObject<{
        bundlerInfo: z.ZodOptional<z.ZodObject<{
            version: z.ZodOptional<z.ZodString>;
            bundler: z.ZodOptional<z.ZodString>;
            force: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodArray<z.ZodEnum<["version", "uniqueId"]>, "many">]>>;
        }, "strict", z.ZodTypeAny, {
            force?: boolean | ("version" | "uniqueId")[] | undefined;
            version?: string | undefined;
            bundler?: string | undefined;
        }, {
            force?: boolean | ("version" | "uniqueId")[] | undefined;
            version?: string | undefined;
            bundler?: string | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        bundlerInfo?: {
            force?: boolean | ("version" | "uniqueId")[] | undefined;
            version?: string | undefined;
            bundler?: string | undefined;
        } | undefined;
    }, {
        bundlerInfo?: {
            force?: boolean | ("version" | "uniqueId")[] | undefined;
            version?: string | undefined;
            bundler?: string | undefined;
        } | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    css?: boolean | undefined;
    lazyCompilation?: boolean | {
        entries?: boolean | undefined;
        test?: RegExp | ((args_0: Module, ...args_1: unknown[]) => boolean) | undefined;
        backend?: {
            client?: string | undefined;
            listen?: number | {
                path?: string | undefined;
                port?: number | undefined;
                host?: string | undefined;
                backlog?: number | undefined;
                exclusive?: boolean | undefined;
                readableAll?: boolean | undefined;
                writableAll?: boolean | undefined;
                ipv6Only?: boolean | undefined;
            } | undefined;
            protocol?: "http" | "https" | undefined;
        } | undefined;
        imports?: boolean | undefined;
    } | undefined;
    asyncWebAssembly?: boolean | undefined;
    outputModule?: boolean | undefined;
    topLevelAwait?: boolean | undefined;
    layers?: boolean | undefined;
    incremental?: boolean | {
        make?: boolean | undefined;
        providedExports?: boolean | undefined;
        emitAssets?: boolean | undefined;
        inferAsyncModules?: boolean | undefined;
        moduleHashes?: boolean | undefined;
        moduleCodegen?: boolean | undefined;
        moduleRuntimeRequirements?: boolean | undefined;
    } | undefined;
    futureDefaults?: boolean | undefined;
    rspackFuture?: {
        bundlerInfo?: {
            force?: boolean | ("version" | "uniqueId")[] | undefined;
            version?: string | undefined;
            bundler?: string | undefined;
        } | undefined;
    } | undefined;
}, {
    css?: boolean | undefined;
    lazyCompilation?: boolean | {
        entries?: boolean | undefined;
        test?: RegExp | ((args_0: Module, ...args_1: unknown[]) => boolean) | undefined;
        backend?: {
            client?: string | undefined;
            listen?: number | {
                path?: string | undefined;
                port?: number | undefined;
                host?: string | undefined;
                backlog?: number | undefined;
                exclusive?: boolean | undefined;
                readableAll?: boolean | undefined;
                writableAll?: boolean | undefined;
                ipv6Only?: boolean | undefined;
            } | undefined;
            protocol?: "http" | "https" | undefined;
        } | undefined;
        imports?: boolean | undefined;
    } | undefined;
    asyncWebAssembly?: boolean | undefined;
    outputModule?: boolean | undefined;
    topLevelAwait?: boolean | undefined;
    layers?: boolean | undefined;
    incremental?: boolean | {
        make?: boolean | undefined;
        providedExports?: boolean | undefined;
        emitAssets?: boolean | undefined;
        inferAsyncModules?: boolean | undefined;
        moduleHashes?: boolean | undefined;
        moduleCodegen?: boolean | undefined;
        moduleRuntimeRequirements?: boolean | undefined;
    } | undefined;
    futureDefaults?: boolean | undefined;
    rspackFuture?: {
        bundlerInfo?: {
            force?: boolean | ("version" | "uniqueId")[] | undefined;
            version?: string | undefined;
            bundler?: string | undefined;
        } | undefined;
    } | undefined;
}>;
export type Experiments = z.infer<typeof experiments>;
declare const watch: z.ZodBoolean;
export type Watch = z.infer<typeof watch>;
declare const watchOptions: z.ZodObject<{
    aggregateTimeout: z.ZodOptional<z.ZodNumber>;
    followSymlinks: z.ZodOptional<z.ZodBoolean>;
    ignored: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodString]>>;
    poll: z.ZodOptional<z.ZodUnion<[z.ZodNumber, z.ZodBoolean]>>;
    stdin: z.ZodOptional<z.ZodBoolean>;
}, "strict", z.ZodTypeAny, {
    aggregateTimeout?: number | undefined;
    followSymlinks?: boolean | undefined;
    ignored?: string | RegExp | string[] | undefined;
    poll?: number | boolean | undefined;
    stdin?: boolean | undefined;
}, {
    aggregateTimeout?: number | undefined;
    followSymlinks?: boolean | undefined;
    ignored?: string | RegExp | string[] | undefined;
    poll?: number | boolean | undefined;
    stdin?: boolean | undefined;
}>;
export type WatchOptions = z.infer<typeof watchOptions>;
export interface DevServer extends webpackDevServer.Configuration {
}
declare const ignoreWarnings: z.ZodArray<z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodFunction<z.ZodTuple<[z.ZodType<Error, z.ZodTypeDef, Error>, z.ZodType<Compilation, z.ZodTypeDef, Compilation>], z.ZodUnknown>, z.ZodBoolean>]>, "many">;
export type IgnoreWarnings = z.infer<typeof ignoreWarnings>;
declare const profile: z.ZodBoolean;
export type Profile = z.infer<typeof profile>;
declare const bail: z.ZodBoolean;
export type Bail = z.infer<typeof bail>;
declare const performance: z.ZodUnion<[z.ZodObject<{
    assetFilter: z.ZodOptional<z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>>;
    hints: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warning"]>, z.ZodLiteral<false>]>>;
    maxAssetSize: z.ZodOptional<z.ZodNumber>;
    maxEntrypointSize: z.ZodOptional<z.ZodNumber>;
}, "strict", z.ZodTypeAny, {
    assetFilter?: ((args_0: string, ...args_1: unknown[]) => boolean) | undefined;
    hints?: false | "error" | "warning" | undefined;
    maxAssetSize?: number | undefined;
    maxEntrypointSize?: number | undefined;
}, {
    assetFilter?: ((args_0: string, ...args_1: unknown[]) => boolean) | undefined;
    hints?: false | "error" | "warning" | undefined;
    maxAssetSize?: number | undefined;
    maxEntrypointSize?: number | undefined;
}>, z.ZodLiteral<false>]>;
export type Performance = z.infer<typeof performance>;
export declare const rspackOptions: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    dependencies: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    entry: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, z.ZodObject<{
        import: z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>;
        runtime: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodString]>>;
        publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
        baseUri: z.ZodOptional<z.ZodString>;
        chunkLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["jsonp", "import-scripts", "require", "async-node", "import"]>, z.ZodString]>]>>;
        asyncChunks: z.ZodOptional<z.ZodBoolean>;
        wasmLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["fetch-streaming", "fetch", "async-node"]>, z.ZodString]>]>>;
        filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
        library: z.ZodOptional<z.ZodObject<{
            amdContainer: z.ZodOptional<z.ZodString>;
            auxiliaryComment: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
                amd: z.ZodOptional<z.ZodString>;
                commonjs: z.ZodOptional<z.ZodString>;
                commonjs2: z.ZodOptional<z.ZodString>;
                root: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            }, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            }>]>>;
            export: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            name: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, z.ZodObject<{
                amd: z.ZodOptional<z.ZodString>;
                commonjs: z.ZodOptional<z.ZodString>;
                root: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            }, "strict", z.ZodTypeAny, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            }, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            }>]>>;
            type: z.ZodUnion<[z.ZodEnum<["var", "module", "assign", "assign-properties", "this", "window", "self", "global", "commonjs", "commonjs2", "commonjs-module", "commonjs-static", "amd", "amd-require", "umd", "umd2", "jsonp", "system"]>, z.ZodString]>;
            umdNamedDefine: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        }, {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        }>>;
        dependOn: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        layer: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNull]>>;
    }, "strict", z.ZodTypeAny, {
        import: string | string[];
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        layer?: string | null | undefined;
        runtime?: string | false | undefined;
        baseUri?: string | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        dependOn?: string | string[] | undefined;
    }, {
        import: string | string[];
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        layer?: string | null | undefined;
        runtime?: string | false | undefined;
        baseUri?: string | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        dependOn?: string | string[] | undefined;
    }>]>>, z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>]>, z.ZodFunction<z.ZodTuple<[], z.ZodUnknown>, z.ZodUnion<[z.ZodUnion<[z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, z.ZodObject<{
        import: z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>;
        runtime: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodString]>>;
        publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
        baseUri: z.ZodOptional<z.ZodString>;
        chunkLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["jsonp", "import-scripts", "require", "async-node", "import"]>, z.ZodString]>]>>;
        asyncChunks: z.ZodOptional<z.ZodBoolean>;
        wasmLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["fetch-streaming", "fetch", "async-node"]>, z.ZodString]>]>>;
        filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
        library: z.ZodOptional<z.ZodObject<{
            amdContainer: z.ZodOptional<z.ZodString>;
            auxiliaryComment: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
                amd: z.ZodOptional<z.ZodString>;
                commonjs: z.ZodOptional<z.ZodString>;
                commonjs2: z.ZodOptional<z.ZodString>;
                root: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            }, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            }>]>>;
            export: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            name: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, z.ZodObject<{
                amd: z.ZodOptional<z.ZodString>;
                commonjs: z.ZodOptional<z.ZodString>;
                root: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            }, "strict", z.ZodTypeAny, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            }, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            }>]>>;
            type: z.ZodUnion<[z.ZodEnum<["var", "module", "assign", "assign-properties", "this", "window", "self", "global", "commonjs", "commonjs2", "commonjs-module", "commonjs-static", "amd", "amd-require", "umd", "umd2", "jsonp", "system"]>, z.ZodString]>;
            umdNamedDefine: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        }, {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        }>>;
        dependOn: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        layer: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNull]>>;
    }, "strict", z.ZodTypeAny, {
        import: string | string[];
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        layer?: string | null | undefined;
        runtime?: string | false | undefined;
        baseUri?: string | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        dependOn?: string | string[] | undefined;
    }, {
        import: string | string[];
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        layer?: string | null | undefined;
        runtime?: string | false | undefined;
        baseUri?: string | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        dependOn?: string | string[] | undefined;
    }>]>>, z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>]>, z.ZodPromise<z.ZodUnion<[z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, z.ZodObject<{
        import: z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>;
        runtime: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodString]>>;
        publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
        baseUri: z.ZodOptional<z.ZodString>;
        chunkLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["jsonp", "import-scripts", "require", "async-node", "import"]>, z.ZodString]>]>>;
        asyncChunks: z.ZodOptional<z.ZodBoolean>;
        wasmLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["fetch-streaming", "fetch", "async-node"]>, z.ZodString]>]>>;
        filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
        library: z.ZodOptional<z.ZodObject<{
            amdContainer: z.ZodOptional<z.ZodString>;
            auxiliaryComment: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
                amd: z.ZodOptional<z.ZodString>;
                commonjs: z.ZodOptional<z.ZodString>;
                commonjs2: z.ZodOptional<z.ZodString>;
                root: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            }, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            }>]>>;
            export: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            name: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, z.ZodObject<{
                amd: z.ZodOptional<z.ZodString>;
                commonjs: z.ZodOptional<z.ZodString>;
                root: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            }, "strict", z.ZodTypeAny, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            }, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            }>]>>;
            type: z.ZodUnion<[z.ZodEnum<["var", "module", "assign", "assign-properties", "this", "window", "self", "global", "commonjs", "commonjs2", "commonjs-module", "commonjs-static", "amd", "amd-require", "umd", "umd2", "jsonp", "system"]>, z.ZodString]>;
            umdNamedDefine: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        }, {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        }>>;
        dependOn: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        layer: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNull]>>;
    }, "strict", z.ZodTypeAny, {
        import: string | string[];
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        layer?: string | null | undefined;
        runtime?: string | false | undefined;
        baseUri?: string | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        dependOn?: string | string[] | undefined;
    }, {
        import: string | string[];
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        layer?: string | null | undefined;
        runtime?: string | false | undefined;
        baseUri?: string | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        dependOn?: string | string[] | undefined;
    }>]>>, z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>]>>]>>]>>;
    output: z.ZodOptional<z.ZodObject<{
        path: z.ZodOptional<z.ZodString>;
        pathinfo: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodLiteral<"verbose">]>>;
        clean: z.ZodOptional<z.ZodBoolean>;
        publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
        filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
        chunkFilename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
        crossOriginLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodEnum<["anonymous", "use-credentials"]>]>>;
        cssFilename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
        cssHeadDataCompression: z.ZodOptional<z.ZodBoolean>;
        cssChunkFilename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
        hotUpdateMainFilename: z.ZodOptional<z.ZodString>;
        hotUpdateChunkFilename: z.ZodOptional<z.ZodString>;
        hotUpdateGlobal: z.ZodOptional<z.ZodString>;
        assetModuleFilename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
        uniqueName: z.ZodOptional<z.ZodString>;
        chunkLoadingGlobal: z.ZodOptional<z.ZodString>;
        enabledLibraryTypes: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<["var", "module", "assign", "assign-properties", "this", "window", "self", "global", "commonjs", "commonjs2", "commonjs-module", "commonjs-static", "amd", "amd-require", "umd", "umd2", "jsonp", "system"]>, z.ZodString]>, "many">>;
        library: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, z.ZodObject<{
            amd: z.ZodOptional<z.ZodString>;
            commonjs: z.ZodOptional<z.ZodString>;
            root: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        }, "strict", z.ZodTypeAny, {
            commonjs?: string | undefined;
            amd?: string | undefined;
            root?: string | string[] | undefined;
        }, {
            commonjs?: string | undefined;
            amd?: string | undefined;
            root?: string | string[] | undefined;
        }>]>, z.ZodObject<{
            amdContainer: z.ZodOptional<z.ZodString>;
            auxiliaryComment: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
                amd: z.ZodOptional<z.ZodString>;
                commonjs: z.ZodOptional<z.ZodString>;
                commonjs2: z.ZodOptional<z.ZodString>;
                root: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            }, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            }>]>>;
            export: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            name: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, z.ZodObject<{
                amd: z.ZodOptional<z.ZodString>;
                commonjs: z.ZodOptional<z.ZodString>;
                root: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
            }, "strict", z.ZodTypeAny, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            }, {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            }>]>>;
            type: z.ZodUnion<[z.ZodEnum<["var", "module", "assign", "assign-properties", "this", "window", "self", "global", "commonjs", "commonjs2", "commonjs-module", "commonjs-static", "amd", "amd-require", "umd", "umd2", "jsonp", "system"]>, z.ZodString]>;
            umdNamedDefine: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        }, {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        }>]>>>;
        libraryExport: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
        libraryTarget: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["var", "module", "assign", "assign-properties", "this", "window", "self", "global", "commonjs", "commonjs2", "commonjs-module", "commonjs-static", "amd", "amd-require", "umd", "umd2", "jsonp", "system"]>, z.ZodString]>>;
        umdNamedDefine: z.ZodOptional<z.ZodBoolean>;
        auxiliaryComment: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
            amd: z.ZodOptional<z.ZodString>;
            commonjs: z.ZodOptional<z.ZodString>;
            commonjs2: z.ZodOptional<z.ZodString>;
            root: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            commonjs?: string | undefined;
            amd?: string | undefined;
            commonjs2?: string | undefined;
            root?: string | undefined;
        }, {
            commonjs?: string | undefined;
            amd?: string | undefined;
            commonjs2?: string | undefined;
            root?: string | undefined;
        }>]>>;
        module: z.ZodOptional<z.ZodBoolean>;
        strictModuleExceptionHandling: z.ZodOptional<z.ZodBoolean>;
        strictModuleErrorHandling: z.ZodOptional<z.ZodBoolean>;
        globalObject: z.ZodOptional<z.ZodString>;
        importFunctionName: z.ZodOptional<z.ZodString>;
        importMetaName: z.ZodOptional<z.ZodString>;
        iife: z.ZodOptional<z.ZodBoolean>;
        wasmLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["fetch-streaming", "fetch", "async-node"]>, z.ZodString]>]>>;
        enabledWasmLoadingTypes: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<["fetch-streaming", "fetch", "async-node"]>, z.ZodString]>, "many">>;
        webassemblyModuleFilename: z.ZodOptional<z.ZodString>;
        chunkFormat: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodString]>>;
        chunkLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["jsonp", "import-scripts", "require", "async-node", "import"]>, z.ZodString]>]>>;
        enabledChunkLoadingTypes: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<["jsonp", "import-scripts", "require", "async-node", "import"]>, z.ZodString]>, "many">>;
        trustedTypes: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<true>, z.ZodString]>, z.ZodObject<{
            policyName: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            policyName?: string | undefined;
        }, {
            policyName?: string | undefined;
        }>]>>;
        sourceMapFilename: z.ZodOptional<z.ZodString>;
        hashDigest: z.ZodOptional<z.ZodString>;
        hashDigestLength: z.ZodOptional<z.ZodNumber>;
        hashFunction: z.ZodOptional<z.ZodEnum<["md4", "xxhash64"]>>;
        hashSalt: z.ZodOptional<z.ZodString>;
        asyncChunks: z.ZodOptional<z.ZodBoolean>;
        workerChunkLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["jsonp", "import-scripts", "require", "async-node", "import"]>, z.ZodString]>]>>;
        workerWasmLoading: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["fetch-streaming", "fetch", "async-node"]>, z.ZodString]>]>>;
        workerPublicPath: z.ZodOptional<z.ZodString>;
        scriptType: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["text/javascript", "module"]>, z.ZodLiteral<false>]>>;
        devtoolNamespace: z.ZodOptional<z.ZodString>;
        devtoolModuleFilenameTemplate: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodAny], null>, z.ZodAny>]>>;
        devtoolFallbackModuleFilenameTemplate: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodAny], null>, z.ZodAny>]>>;
        chunkLoadTimeout: z.ZodOptional<z.ZodNumber>;
        charset: z.ZodOptional<z.ZodBoolean>;
        environment: z.ZodOptional<z.ZodObject<{
            arrowFunction: z.ZodOptional<z.ZodBoolean>;
            asyncFunction: z.ZodOptional<z.ZodBoolean>;
            bigIntLiteral: z.ZodOptional<z.ZodBoolean>;
            const: z.ZodOptional<z.ZodBoolean>;
            destructuring: z.ZodOptional<z.ZodBoolean>;
            document: z.ZodOptional<z.ZodBoolean>;
            dynamicImport: z.ZodOptional<z.ZodBoolean>;
            dynamicImportInWorker: z.ZodOptional<z.ZodBoolean>;
            forOf: z.ZodOptional<z.ZodBoolean>;
            globalThis: z.ZodOptional<z.ZodBoolean>;
            module: z.ZodOptional<z.ZodBoolean>;
            nodePrefixForCoreModules: z.ZodOptional<z.ZodBoolean>;
            optionalChaining: z.ZodOptional<z.ZodBoolean>;
            templateLiteral: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            module?: boolean | undefined;
            arrowFunction?: boolean | undefined;
            asyncFunction?: boolean | undefined;
            bigIntLiteral?: boolean | undefined;
            const?: boolean | undefined;
            destructuring?: boolean | undefined;
            document?: boolean | undefined;
            dynamicImport?: boolean | undefined;
            dynamicImportInWorker?: boolean | undefined;
            forOf?: boolean | undefined;
            globalThis?: boolean | undefined;
            nodePrefixForCoreModules?: boolean | undefined;
            optionalChaining?: boolean | undefined;
            templateLiteral?: boolean | undefined;
        }, {
            module?: boolean | undefined;
            arrowFunction?: boolean | undefined;
            asyncFunction?: boolean | undefined;
            bigIntLiteral?: boolean | undefined;
            const?: boolean | undefined;
            destructuring?: boolean | undefined;
            document?: boolean | undefined;
            dynamicImport?: boolean | undefined;
            dynamicImportInWorker?: boolean | undefined;
            forOf?: boolean | undefined;
            globalThis?: boolean | undefined;
            nodePrefixForCoreModules?: boolean | undefined;
            optionalChaining?: boolean | undefined;
            templateLiteral?: boolean | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        module?: boolean | undefined;
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        environment?: {
            module?: boolean | undefined;
            arrowFunction?: boolean | undefined;
            asyncFunction?: boolean | undefined;
            bigIntLiteral?: boolean | undefined;
            const?: boolean | undefined;
            destructuring?: boolean | undefined;
            document?: boolean | undefined;
            dynamicImport?: boolean | undefined;
            dynamicImportInWorker?: boolean | undefined;
            forOf?: boolean | undefined;
            globalThis?: boolean | undefined;
            nodePrefixForCoreModules?: boolean | undefined;
            optionalChaining?: boolean | undefined;
            templateLiteral?: boolean | undefined;
        } | undefined;
        chunkFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        path?: string | undefined;
        auxiliaryComment?: string | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            commonjs2?: string | undefined;
            root?: string | undefined;
        } | undefined;
        umdNamedDefine?: boolean | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: string | string[] | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            root?: string | string[] | undefined;
        } | {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        pathinfo?: boolean | "verbose" | undefined;
        clean?: boolean | undefined;
        crossOriginLoading?: false | "anonymous" | "use-credentials" | undefined;
        cssFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        cssHeadDataCompression?: boolean | undefined;
        cssChunkFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        hotUpdateMainFilename?: string | undefined;
        hotUpdateChunkFilename?: string | undefined;
        hotUpdateGlobal?: string | undefined;
        assetModuleFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        uniqueName?: string | undefined;
        chunkLoadingGlobal?: string | undefined;
        enabledLibraryTypes?: string[] | undefined;
        libraryExport?: string | string[] | undefined;
        libraryTarget?: string | undefined;
        strictModuleExceptionHandling?: boolean | undefined;
        strictModuleErrorHandling?: boolean | undefined;
        globalObject?: string | undefined;
        importFunctionName?: string | undefined;
        importMetaName?: string | undefined;
        iife?: boolean | undefined;
        enabledWasmLoadingTypes?: string[] | undefined;
        webassemblyModuleFilename?: string | undefined;
        chunkFormat?: string | false | undefined;
        enabledChunkLoadingTypes?: string[] | undefined;
        trustedTypes?: string | true | {
            policyName?: string | undefined;
        } | undefined;
        sourceMapFilename?: string | undefined;
        hashDigest?: string | undefined;
        hashDigestLength?: number | undefined;
        hashFunction?: "xxhash64" | "md4" | undefined;
        hashSalt?: string | undefined;
        workerChunkLoading?: string | false | undefined;
        workerWasmLoading?: string | false | undefined;
        workerPublicPath?: string | undefined;
        scriptType?: false | "module" | "text/javascript" | undefined;
        devtoolNamespace?: string | undefined;
        devtoolModuleFilenameTemplate?: string | ((args_0: any) => any) | undefined;
        devtoolFallbackModuleFilenameTemplate?: string | ((args_0: any) => any) | undefined;
        chunkLoadTimeout?: number | undefined;
        charset?: boolean | undefined;
    }, {
        module?: boolean | undefined;
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        environment?: {
            module?: boolean | undefined;
            arrowFunction?: boolean | undefined;
            asyncFunction?: boolean | undefined;
            bigIntLiteral?: boolean | undefined;
            const?: boolean | undefined;
            destructuring?: boolean | undefined;
            document?: boolean | undefined;
            dynamicImport?: boolean | undefined;
            dynamicImportInWorker?: boolean | undefined;
            forOf?: boolean | undefined;
            globalThis?: boolean | undefined;
            nodePrefixForCoreModules?: boolean | undefined;
            optionalChaining?: boolean | undefined;
            templateLiteral?: boolean | undefined;
        } | undefined;
        chunkFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        path?: string | undefined;
        auxiliaryComment?: string | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            commonjs2?: string | undefined;
            root?: string | undefined;
        } | undefined;
        umdNamedDefine?: boolean | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: string | string[] | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            root?: string | string[] | undefined;
        } | {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        pathinfo?: boolean | "verbose" | undefined;
        clean?: boolean | undefined;
        crossOriginLoading?: false | "anonymous" | "use-credentials" | undefined;
        cssFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        cssHeadDataCompression?: boolean | undefined;
        cssChunkFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        hotUpdateMainFilename?: string | undefined;
        hotUpdateChunkFilename?: string | undefined;
        hotUpdateGlobal?: string | undefined;
        assetModuleFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        uniqueName?: string | undefined;
        chunkLoadingGlobal?: string | undefined;
        enabledLibraryTypes?: string[] | undefined;
        libraryExport?: string | string[] | undefined;
        libraryTarget?: string | undefined;
        strictModuleExceptionHandling?: boolean | undefined;
        strictModuleErrorHandling?: boolean | undefined;
        globalObject?: string | undefined;
        importFunctionName?: string | undefined;
        importMetaName?: string | undefined;
        iife?: boolean | undefined;
        enabledWasmLoadingTypes?: string[] | undefined;
        webassemblyModuleFilename?: string | undefined;
        chunkFormat?: string | false | undefined;
        enabledChunkLoadingTypes?: string[] | undefined;
        trustedTypes?: string | true | {
            policyName?: string | undefined;
        } | undefined;
        sourceMapFilename?: string | undefined;
        hashDigest?: string | undefined;
        hashDigestLength?: number | undefined;
        hashFunction?: "xxhash64" | "md4" | undefined;
        hashSalt?: string | undefined;
        workerChunkLoading?: string | false | undefined;
        workerWasmLoading?: string | false | undefined;
        workerPublicPath?: string | undefined;
        scriptType?: false | "module" | "text/javascript" | undefined;
        devtoolNamespace?: string | undefined;
        devtoolModuleFilenameTemplate?: string | ((args_0: any) => any) | undefined;
        devtoolFallbackModuleFilenameTemplate?: string | ((args_0: any) => any) | undefined;
        chunkLoadTimeout?: number | undefined;
        charset?: boolean | undefined;
    }>>;
    target: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodUnion<[z.ZodEnum<["web", "webworker", "es3", "es5", "es2015", "es2016", "es2017", "es2018", "es2019", "es2020", "es2021", "es2022"]>, z.ZodLiteral<"node">, z.ZodLiteral<"async-node">, z.ZodType<`node${number}`, z.ZodTypeDef, `node${number}`>, z.ZodType<`async-node${number}`, z.ZodTypeDef, `async-node${number}`>, z.ZodType<`node${number}.${number}`, z.ZodTypeDef, `node${number}.${number}`>, z.ZodType<`async-node${number}.${number}`, z.ZodTypeDef, `async-node${number}.${number}`>, z.ZodLiteral<"electron-main">, z.ZodType<`electron${number}-main`, z.ZodTypeDef, `electron${number}-main`>, z.ZodType<`electron${number}.${number}-main`, z.ZodTypeDef, `electron${number}.${number}-main`>, z.ZodLiteral<"electron-renderer">, z.ZodType<`electron${number}-renderer`, z.ZodTypeDef, `electron${number}-renderer`>, z.ZodType<`electron${number}.${number}-renderer`, z.ZodTypeDef, `electron${number}.${number}-renderer`>, z.ZodLiteral<"electron-preload">, z.ZodType<`electron${number}-preload`, z.ZodTypeDef, `electron${number}-preload`>, z.ZodType<`electron${number}.${number}-preload`, z.ZodTypeDef, `electron${number}.${number}-preload`>, z.ZodLiteral<"nwjs">, z.ZodType<`nwjs${number}`, z.ZodTypeDef, `nwjs${number}`>, z.ZodType<`nwjs${number}.${number}`, z.ZodTypeDef, `nwjs${number}.${number}`>, z.ZodLiteral<"node-webkit">, z.ZodType<`node-webkit${number}`, z.ZodTypeDef, `node-webkit${number}`>, z.ZodType<`node-webkit${number}.${number}`, z.ZodTypeDef, `node-webkit${number}.${number}`>, z.ZodLiteral<"browserslist">, z.ZodType<`browserslist:${string}`, z.ZodTypeDef, `browserslist:${string}`>]>, z.ZodArray<z.ZodUnion<[z.ZodEnum<["web", "webworker", "es3", "es5", "es2015", "es2016", "es2017", "es2018", "es2019", "es2020", "es2021", "es2022"]>, z.ZodLiteral<"node">, z.ZodLiteral<"async-node">, z.ZodType<`node${number}`, z.ZodTypeDef, `node${number}`>, z.ZodType<`async-node${number}`, z.ZodTypeDef, `async-node${number}`>, z.ZodType<`node${number}.${number}`, z.ZodTypeDef, `node${number}.${number}`>, z.ZodType<`async-node${number}.${number}`, z.ZodTypeDef, `async-node${number}.${number}`>, z.ZodLiteral<"electron-main">, z.ZodType<`electron${number}-main`, z.ZodTypeDef, `electron${number}-main`>, z.ZodType<`electron${number}.${number}-main`, z.ZodTypeDef, `electron${number}.${number}-main`>, z.ZodLiteral<"electron-renderer">, z.ZodType<`electron${number}-renderer`, z.ZodTypeDef, `electron${number}-renderer`>, z.ZodType<`electron${number}.${number}-renderer`, z.ZodTypeDef, `electron${number}.${number}-renderer`>, z.ZodLiteral<"electron-preload">, z.ZodType<`electron${number}-preload`, z.ZodTypeDef, `electron${number}-preload`>, z.ZodType<`electron${number}.${number}-preload`, z.ZodTypeDef, `electron${number}.${number}-preload`>, z.ZodLiteral<"nwjs">, z.ZodType<`nwjs${number}`, z.ZodTypeDef, `nwjs${number}`>, z.ZodType<`nwjs${number}.${number}`, z.ZodTypeDef, `nwjs${number}.${number}`>, z.ZodLiteral<"node-webkit">, z.ZodType<`node-webkit${number}`, z.ZodTypeDef, `node-webkit${number}`>, z.ZodType<`node-webkit${number}.${number}`, z.ZodTypeDef, `node-webkit${number}.${number}`>, z.ZodLiteral<"browserslist">, z.ZodType<`browserslist:${string}`, z.ZodTypeDef, `browserslist:${string}`>]>, "many">]>>;
    mode: z.ZodOptional<z.ZodEnum<["development", "production", "none"]>>;
    experiments: z.ZodOptional<z.ZodObject<{
        lazyCompilation: z.ZodUnion<[z.ZodOptional<z.ZodBoolean>, z.ZodObject<{
            backend: z.ZodOptional<z.ZodObject<{
                client: z.ZodOptional<z.ZodString>;
                listen: z.ZodUnion<[z.ZodOptional<z.ZodNumber>, z.ZodObject<{
                    port: z.ZodOptional<z.ZodNumber>;
                    host: z.ZodOptional<z.ZodString>;
                    backlog: z.ZodOptional<z.ZodNumber>;
                    path: z.ZodOptional<z.ZodString>;
                    exclusive: z.ZodOptional<z.ZodBoolean>;
                    readableAll: z.ZodOptional<z.ZodBoolean>;
                    writableAll: z.ZodOptional<z.ZodBoolean>;
                    ipv6Only: z.ZodOptional<z.ZodBoolean>;
                }, "strip", z.ZodTypeAny, {
                    path?: string | undefined;
                    port?: number | undefined;
                    host?: string | undefined;
                    backlog?: number | undefined;
                    exclusive?: boolean | undefined;
                    readableAll?: boolean | undefined;
                    writableAll?: boolean | undefined;
                    ipv6Only?: boolean | undefined;
                }, {
                    path?: string | undefined;
                    port?: number | undefined;
                    host?: string | undefined;
                    backlog?: number | undefined;
                    exclusive?: boolean | undefined;
                    readableAll?: boolean | undefined;
                    writableAll?: boolean | undefined;
                    ipv6Only?: boolean | undefined;
                }>]>;
                protocol: z.ZodOptional<z.ZodEnum<["http", "https"]>>;
            }, "strip", z.ZodTypeAny, {
                client?: string | undefined;
                listen?: number | {
                    path?: string | undefined;
                    port?: number | undefined;
                    host?: string | undefined;
                    backlog?: number | undefined;
                    exclusive?: boolean | undefined;
                    readableAll?: boolean | undefined;
                    writableAll?: boolean | undefined;
                    ipv6Only?: boolean | undefined;
                } | undefined;
                protocol?: "http" | "https" | undefined;
            }, {
                client?: string | undefined;
                listen?: number | {
                    path?: string | undefined;
                    port?: number | undefined;
                    host?: string | undefined;
                    backlog?: number | undefined;
                    exclusive?: boolean | undefined;
                    readableAll?: boolean | undefined;
                    writableAll?: boolean | undefined;
                    ipv6Only?: boolean | undefined;
                } | undefined;
                protocol?: "http" | "https" | undefined;
            }>>;
            imports: z.ZodOptional<z.ZodBoolean>;
            entries: z.ZodOptional<z.ZodBoolean>;
            test: z.ZodOptional<z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodFunction<z.ZodTuple<[z.ZodType<Module, z.ZodTypeDef, Module>], z.ZodUnknown>, z.ZodBoolean>]>>;
        }, "strip", z.ZodTypeAny, {
            entries?: boolean | undefined;
            test?: RegExp | ((args_0: Module, ...args_1: unknown[]) => boolean) | undefined;
            backend?: {
                client?: string | undefined;
                listen?: number | {
                    path?: string | undefined;
                    port?: number | undefined;
                    host?: string | undefined;
                    backlog?: number | undefined;
                    exclusive?: boolean | undefined;
                    readableAll?: boolean | undefined;
                    writableAll?: boolean | undefined;
                    ipv6Only?: boolean | undefined;
                } | undefined;
                protocol?: "http" | "https" | undefined;
            } | undefined;
            imports?: boolean | undefined;
        }, {
            entries?: boolean | undefined;
            test?: RegExp | ((args_0: Module, ...args_1: unknown[]) => boolean) | undefined;
            backend?: {
                client?: string | undefined;
                listen?: number | {
                    path?: string | undefined;
                    port?: number | undefined;
                    host?: string | undefined;
                    backlog?: number | undefined;
                    exclusive?: boolean | undefined;
                    readableAll?: boolean | undefined;
                    writableAll?: boolean | undefined;
                    ipv6Only?: boolean | undefined;
                } | undefined;
                protocol?: "http" | "https" | undefined;
            } | undefined;
            imports?: boolean | undefined;
        }>]>;
        asyncWebAssembly: z.ZodOptional<z.ZodBoolean>;
        outputModule: z.ZodOptional<z.ZodBoolean>;
        topLevelAwait: z.ZodOptional<z.ZodBoolean>;
        css: z.ZodOptional<z.ZodBoolean>;
        layers: z.ZodOptional<z.ZodBoolean>;
        incremental: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodObject<{
            make: z.ZodOptional<z.ZodBoolean>;
            emitAssets: z.ZodOptional<z.ZodBoolean>;
            inferAsyncModules: z.ZodOptional<z.ZodBoolean>;
            providedExports: z.ZodOptional<z.ZodBoolean>;
            moduleHashes: z.ZodOptional<z.ZodBoolean>;
            moduleCodegen: z.ZodOptional<z.ZodBoolean>;
            moduleRuntimeRequirements: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            make?: boolean | undefined;
            providedExports?: boolean | undefined;
            emitAssets?: boolean | undefined;
            inferAsyncModules?: boolean | undefined;
            moduleHashes?: boolean | undefined;
            moduleCodegen?: boolean | undefined;
            moduleRuntimeRequirements?: boolean | undefined;
        }, {
            make?: boolean | undefined;
            providedExports?: boolean | undefined;
            emitAssets?: boolean | undefined;
            inferAsyncModules?: boolean | undefined;
            moduleHashes?: boolean | undefined;
            moduleCodegen?: boolean | undefined;
            moduleRuntimeRequirements?: boolean | undefined;
        }>]>>;
        futureDefaults: z.ZodOptional<z.ZodBoolean>;
        rspackFuture: z.ZodOptional<z.ZodObject<{
            bundlerInfo: z.ZodOptional<z.ZodObject<{
                version: z.ZodOptional<z.ZodString>;
                bundler: z.ZodOptional<z.ZodString>;
                force: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodArray<z.ZodEnum<["version", "uniqueId"]>, "many">]>>;
            }, "strict", z.ZodTypeAny, {
                force?: boolean | ("version" | "uniqueId")[] | undefined;
                version?: string | undefined;
                bundler?: string | undefined;
            }, {
                force?: boolean | ("version" | "uniqueId")[] | undefined;
                version?: string | undefined;
                bundler?: string | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            bundlerInfo?: {
                force?: boolean | ("version" | "uniqueId")[] | undefined;
                version?: string | undefined;
                bundler?: string | undefined;
            } | undefined;
        }, {
            bundlerInfo?: {
                force?: boolean | ("version" | "uniqueId")[] | undefined;
                version?: string | undefined;
                bundler?: string | undefined;
            } | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        css?: boolean | undefined;
        lazyCompilation?: boolean | {
            entries?: boolean | undefined;
            test?: RegExp | ((args_0: Module, ...args_1: unknown[]) => boolean) | undefined;
            backend?: {
                client?: string | undefined;
                listen?: number | {
                    path?: string | undefined;
                    port?: number | undefined;
                    host?: string | undefined;
                    backlog?: number | undefined;
                    exclusive?: boolean | undefined;
                    readableAll?: boolean | undefined;
                    writableAll?: boolean | undefined;
                    ipv6Only?: boolean | undefined;
                } | undefined;
                protocol?: "http" | "https" | undefined;
            } | undefined;
            imports?: boolean | undefined;
        } | undefined;
        asyncWebAssembly?: boolean | undefined;
        outputModule?: boolean | undefined;
        topLevelAwait?: boolean | undefined;
        layers?: boolean | undefined;
        incremental?: boolean | {
            make?: boolean | undefined;
            providedExports?: boolean | undefined;
            emitAssets?: boolean | undefined;
            inferAsyncModules?: boolean | undefined;
            moduleHashes?: boolean | undefined;
            moduleCodegen?: boolean | undefined;
            moduleRuntimeRequirements?: boolean | undefined;
        } | undefined;
        futureDefaults?: boolean | undefined;
        rspackFuture?: {
            bundlerInfo?: {
                force?: boolean | ("version" | "uniqueId")[] | undefined;
                version?: string | undefined;
                bundler?: string | undefined;
            } | undefined;
        } | undefined;
    }, {
        css?: boolean | undefined;
        lazyCompilation?: boolean | {
            entries?: boolean | undefined;
            test?: RegExp | ((args_0: Module, ...args_1: unknown[]) => boolean) | undefined;
            backend?: {
                client?: string | undefined;
                listen?: number | {
                    path?: string | undefined;
                    port?: number | undefined;
                    host?: string | undefined;
                    backlog?: number | undefined;
                    exclusive?: boolean | undefined;
                    readableAll?: boolean | undefined;
                    writableAll?: boolean | undefined;
                    ipv6Only?: boolean | undefined;
                } | undefined;
                protocol?: "http" | "https" | undefined;
            } | undefined;
            imports?: boolean | undefined;
        } | undefined;
        asyncWebAssembly?: boolean | undefined;
        outputModule?: boolean | undefined;
        topLevelAwait?: boolean | undefined;
        layers?: boolean | undefined;
        incremental?: boolean | {
            make?: boolean | undefined;
            providedExports?: boolean | undefined;
            emitAssets?: boolean | undefined;
            inferAsyncModules?: boolean | undefined;
            moduleHashes?: boolean | undefined;
            moduleCodegen?: boolean | undefined;
            moduleRuntimeRequirements?: boolean | undefined;
        } | undefined;
        futureDefaults?: boolean | undefined;
        rspackFuture?: {
            bundlerInfo?: {
                force?: boolean | ("version" | "uniqueId")[] | undefined;
                version?: string | undefined;
                bundler?: string | undefined;
            } | undefined;
        } | undefined;
    }>>;
    externals: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodBoolean]>, z.ZodArray<z.ZodString, "many">]>, z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>]>>]>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
        context: z.ZodOptional<z.ZodString>;
        dependencyType: z.ZodOptional<z.ZodString>;
        request: z.ZodOptional<z.ZodString>;
        contextInfo: z.ZodOptional<z.ZodObject<{
            issuer: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            issuer: string;
        }, {
            issuer: string;
        }>>;
    }, "strict", z.ZodTypeAny, {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }, {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }>, z.ZodFunction<z.ZodTuple<[z.ZodOptional<z.ZodType<Error, z.ZodTypeDef, Error>>, z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodBoolean]>, z.ZodArray<z.ZodString, "many">]>, z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>]>>, z.ZodOptional<z.ZodEnum<["var", "module", "assign", "this", "window", "self", "global", "commonjs", "commonjs2", "commonjs-module", "commonjs-static", "amd", "amd-require", "umd", "umd2", "jsonp", "system", "promise", "import", "module-import", "script", "node-commonjs"]>>], z.ZodUnknown>, z.ZodVoid>], z.ZodUnknown>, z.ZodUnknown>]>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
        context: z.ZodOptional<z.ZodString>;
        dependencyType: z.ZodOptional<z.ZodString>;
        request: z.ZodOptional<z.ZodString>;
        contextInfo: z.ZodOptional<z.ZodObject<{
            issuer: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            issuer: string;
        }, {
            issuer: string;
        }>>;
    }, "strict", z.ZodTypeAny, {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }, {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }>], z.ZodUnknown>, z.ZodPromise<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodBoolean]>, z.ZodArray<z.ZodString, "many">]>, z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>]>>>]>, "many">, z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodBoolean]>, z.ZodArray<z.ZodString, "many">]>, z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>]>>]>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
        context: z.ZodOptional<z.ZodString>;
        dependencyType: z.ZodOptional<z.ZodString>;
        request: z.ZodOptional<z.ZodString>;
        contextInfo: z.ZodOptional<z.ZodObject<{
            issuer: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            issuer: string;
        }, {
            issuer: string;
        }>>;
    }, "strict", z.ZodTypeAny, {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }, {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }>, z.ZodFunction<z.ZodTuple<[z.ZodOptional<z.ZodType<Error, z.ZodTypeDef, Error>>, z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodBoolean]>, z.ZodArray<z.ZodString, "many">]>, z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>]>>, z.ZodOptional<z.ZodEnum<["var", "module", "assign", "this", "window", "self", "global", "commonjs", "commonjs2", "commonjs-module", "commonjs-static", "amd", "amd-require", "umd", "umd2", "jsonp", "system", "promise", "import", "module-import", "script", "node-commonjs"]>>], z.ZodUnknown>, z.ZodVoid>], z.ZodUnknown>, z.ZodUnknown>]>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
        context: z.ZodOptional<z.ZodString>;
        dependencyType: z.ZodOptional<z.ZodString>;
        request: z.ZodOptional<z.ZodString>;
        contextInfo: z.ZodOptional<z.ZodObject<{
            issuer: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            issuer: string;
        }, {
            issuer: string;
        }>>;
    }, "strict", z.ZodTypeAny, {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }, {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }>], z.ZodUnknown>, z.ZodPromise<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodBoolean]>, z.ZodArray<z.ZodString, "many">]>, z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>]>>>]>]>>;
    externalsType: z.ZodOptional<z.ZodEnum<["var", "module", "assign", "this", "window", "self", "global", "commonjs", "commonjs2", "commonjs-module", "commonjs-static", "amd", "amd-require", "umd", "umd2", "jsonp", "system", "promise", "import", "module-import", "script", "node-commonjs"]>>;
    externalsPresets: z.ZodOptional<z.ZodObject<{
        node: z.ZodOptional<z.ZodBoolean>;
        web: z.ZodOptional<z.ZodBoolean>;
        webAsync: z.ZodOptional<z.ZodBoolean>;
        electron: z.ZodOptional<z.ZodBoolean>;
        electronMain: z.ZodOptional<z.ZodBoolean>;
        electronPreload: z.ZodOptional<z.ZodBoolean>;
        electronRenderer: z.ZodOptional<z.ZodBoolean>;
        nwjs: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        node?: boolean | undefined;
        web?: boolean | undefined;
        nwjs?: boolean | undefined;
        webAsync?: boolean | undefined;
        electron?: boolean | undefined;
        electronMain?: boolean | undefined;
        electronPreload?: boolean | undefined;
        electronRenderer?: boolean | undefined;
    }, {
        node?: boolean | undefined;
        web?: boolean | undefined;
        nwjs?: boolean | undefined;
        webAsync?: boolean | undefined;
        electron?: boolean | undefined;
        electronMain?: boolean | undefined;
        electronPreload?: boolean | undefined;
        electronRenderer?: boolean | undefined;
    }>>;
    infrastructureLogging: z.ZodOptional<z.ZodObject<{
        appendOnly: z.ZodOptional<z.ZodBoolean>;
        colors: z.ZodOptional<z.ZodBoolean>;
        console: z.ZodOptional<z.ZodType<Console, z.ZodTypeDef, Console>>;
        debug: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodUnion<[z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodString]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>, "many">, z.ZodUnion<[z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodString]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>]>]>>;
        level: z.ZodOptional<z.ZodEnum<["none", "error", "warn", "info", "log", "verbose"]>>;
        stream: z.ZodOptional<z.ZodType<NodeJS.WritableStream, z.ZodTypeDef, NodeJS.WritableStream>>;
    }, "strict", z.ZodTypeAny, {
        debug?: string | boolean | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
        colors?: boolean | undefined;
        appendOnly?: boolean | undefined;
        console?: Console | undefined;
        level?: "log" | "info" | "verbose" | "none" | "error" | "warn" | undefined;
        stream?: NodeJS.WritableStream | undefined;
    }, {
        debug?: string | boolean | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
        colors?: boolean | undefined;
        appendOnly?: boolean | undefined;
        console?: Console | undefined;
        level?: "log" | "info" | "verbose" | "none" | "error" | "warn" | undefined;
        stream?: NodeJS.WritableStream | undefined;
    }>>;
    cache: z.ZodOptional<z.ZodBoolean>;
    context: z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>;
    devtool: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodEnum<["eval", "cheap-source-map", "cheap-module-source-map", "source-map", "inline-cheap-source-map", "inline-cheap-module-source-map", "inline-source-map", "inline-nosources-cheap-source-map", "inline-nosources-cheap-module-source-map", "inline-nosources-source-map", "nosources-cheap-source-map", "nosources-cheap-module-source-map", "nosources-source-map", "hidden-nosources-cheap-source-map", "hidden-nosources-cheap-module-source-map", "hidden-nosources-source-map", "hidden-cheap-source-map", "hidden-cheap-module-source-map", "hidden-source-map", "eval-cheap-source-map", "eval-cheap-module-source-map", "eval-source-map", "eval-nosources-cheap-source-map", "eval-nosources-cheap-module-source-map", "eval-nosources-source-map"]>]>>;
    node: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodObject<{
        __dirname: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodEnum<["warn-mock", "mock", "eval-only", "node-module"]>]>>;
        __filename: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodEnum<["warn-mock", "mock", "eval-only", "node-module"]>]>>;
        global: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodLiteral<"warn">]>>;
    }, "strict", z.ZodTypeAny, {
        global?: boolean | "warn" | undefined;
        __dirname?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
        __filename?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
    }, {
        global?: boolean | "warn" | undefined;
        __dirname?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
        __filename?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
    }>]>>;
    loader: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    ignoreWarnings: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodFunction<z.ZodTuple<[z.ZodType<Error, z.ZodTypeDef, Error>, z.ZodType<Compilation, z.ZodTypeDef, Compilation>], z.ZodUnknown>, z.ZodBoolean>]>, "many">>;
    watchOptions: z.ZodOptional<z.ZodObject<{
        aggregateTimeout: z.ZodOptional<z.ZodNumber>;
        followSymlinks: z.ZodOptional<z.ZodBoolean>;
        ignored: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodString]>>;
        poll: z.ZodOptional<z.ZodUnion<[z.ZodNumber, z.ZodBoolean]>>;
        stdin: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        aggregateTimeout?: number | undefined;
        followSymlinks?: boolean | undefined;
        ignored?: string | RegExp | string[] | undefined;
        poll?: number | boolean | undefined;
        stdin?: boolean | undefined;
    }, {
        aggregateTimeout?: number | undefined;
        followSymlinks?: boolean | undefined;
        ignored?: string | RegExp | string[] | undefined;
        poll?: number | boolean | undefined;
        stdin?: boolean | undefined;
    }>>;
    watch: z.ZodOptional<z.ZodBoolean>;
    stats: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodBoolean, z.ZodEnum<["normal", "none", "verbose", "errors-only", "errors-warnings", "minimal", "detailed", "summary"]>]>, z.ZodObject<{
        all: z.ZodOptional<z.ZodBoolean>;
        preset: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodEnum<["normal", "none", "verbose", "errors-only", "errors-warnings", "minimal", "detailed", "summary"]>]>>;
        assets: z.ZodOptional<z.ZodBoolean>;
        chunks: z.ZodOptional<z.ZodBoolean>;
        modules: z.ZodOptional<z.ZodBoolean>;
        entrypoints: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodLiteral<"auto">]>>;
        chunkGroups: z.ZodOptional<z.ZodBoolean>;
        warnings: z.ZodOptional<z.ZodBoolean>;
        warningsCount: z.ZodOptional<z.ZodBoolean>;
        errors: z.ZodOptional<z.ZodBoolean>;
        errorsCount: z.ZodOptional<z.ZodBoolean>;
        colors: z.ZodOptional<z.ZodBoolean>;
        hash: z.ZodOptional<z.ZodBoolean>;
        version: z.ZodOptional<z.ZodBoolean>;
        reasons: z.ZodOptional<z.ZodBoolean>;
        publicPath: z.ZodOptional<z.ZodBoolean>;
        outputPath: z.ZodOptional<z.ZodBoolean>;
        chunkModules: z.ZodOptional<z.ZodBoolean>;
        chunkRelations: z.ZodOptional<z.ZodBoolean>;
        ids: z.ZodOptional<z.ZodBoolean>;
        timings: z.ZodOptional<z.ZodBoolean>;
        builtAt: z.ZodOptional<z.ZodBoolean>;
        moduleAssets: z.ZodOptional<z.ZodBoolean>;
        nestedModules: z.ZodOptional<z.ZodBoolean>;
        source: z.ZodOptional<z.ZodBoolean>;
        logging: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["none", "error", "warn", "info", "log", "verbose"]>, z.ZodBoolean]>>;
        loggingDebug: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodUnion<[z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodString]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>, "many">, z.ZodUnion<[z.ZodUnion<[z.ZodType<RegExp, z.ZodTypeDef, RegExp>, z.ZodString]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>]>]>>;
        loggingTrace: z.ZodOptional<z.ZodBoolean>;
        runtimeModules: z.ZodOptional<z.ZodBoolean>;
        children: z.ZodOptional<z.ZodBoolean>;
        usedExports: z.ZodOptional<z.ZodBoolean>;
        providedExports: z.ZodOptional<z.ZodBoolean>;
        optimizationBailout: z.ZodOptional<z.ZodBoolean>;
        groupModulesByType: z.ZodOptional<z.ZodBoolean>;
        groupModulesByCacheStatus: z.ZodOptional<z.ZodBoolean>;
        groupModulesByLayer: z.ZodOptional<z.ZodBoolean>;
        groupModulesByAttributes: z.ZodOptional<z.ZodBoolean>;
        groupModulesByPath: z.ZodOptional<z.ZodBoolean>;
        groupModulesByExtension: z.ZodOptional<z.ZodBoolean>;
        modulesSpace: z.ZodOptional<z.ZodNumber>;
        chunkModulesSpace: z.ZodOptional<z.ZodNumber>;
        nestedModulesSpace: z.ZodOptional<z.ZodNumber>;
        relatedAssets: z.ZodOptional<z.ZodBoolean>;
        groupAssetsByEmitStatus: z.ZodOptional<z.ZodBoolean>;
        groupAssetsByInfo: z.ZodOptional<z.ZodBoolean>;
        groupAssetsByPath: z.ZodOptional<z.ZodBoolean>;
        groupAssetsByExtension: z.ZodOptional<z.ZodBoolean>;
        groupAssetsByChunk: z.ZodOptional<z.ZodBoolean>;
        assetsSpace: z.ZodOptional<z.ZodNumber>;
        orphanModules: z.ZodOptional<z.ZodBoolean>;
        excludeModules: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString, z.ZodAny, z.ZodAny], null>, z.ZodBoolean>]>, "many">, z.ZodString]>, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString, z.ZodAny, z.ZodAny], null>, z.ZodBoolean>]>, z.ZodBoolean]>>;
        excludeAssets: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString, z.ZodAny], null>, z.ZodBoolean>]>, "many">, z.ZodString]>, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString, z.ZodAny], null>, z.ZodBoolean>]>>;
        modulesSort: z.ZodOptional<z.ZodString>;
        chunkModulesSort: z.ZodOptional<z.ZodString>;
        nestedModulesSort: z.ZodOptional<z.ZodString>;
        chunksSort: z.ZodOptional<z.ZodString>;
        assetsSort: z.ZodOptional<z.ZodString>;
        performance: z.ZodOptional<z.ZodBoolean>;
        env: z.ZodOptional<z.ZodBoolean>;
        chunkGroupAuxiliary: z.ZodOptional<z.ZodBoolean>;
        chunkGroupChildren: z.ZodOptional<z.ZodBoolean>;
        chunkGroupMaxAssets: z.ZodOptional<z.ZodNumber>;
        dependentModules: z.ZodOptional<z.ZodBoolean>;
        chunkOrigins: z.ZodOptional<z.ZodBoolean>;
        runtime: z.ZodOptional<z.ZodBoolean>;
        depth: z.ZodOptional<z.ZodBoolean>;
        reasonsSpace: z.ZodOptional<z.ZodNumber>;
        groupReasonsByOrigin: z.ZodOptional<z.ZodBoolean>;
        errorDetails: z.ZodOptional<z.ZodBoolean>;
        errorStack: z.ZodOptional<z.ZodBoolean>;
        moduleTrace: z.ZodOptional<z.ZodBoolean>;
        cachedModules: z.ZodOptional<z.ZodBoolean>;
        cachedAssets: z.ZodOptional<z.ZodBoolean>;
        cached: z.ZodOptional<z.ZodBoolean>;
        errorsSpace: z.ZodOptional<z.ZodNumber>;
        warningsSpace: z.ZodOptional<z.ZodNumber>;
    }, "strict", z.ZodTypeAny, {
        source?: boolean | undefined;
        publicPath?: boolean | undefined;
        all?: boolean | undefined;
        preset?: boolean | "verbose" | "normal" | "none" | "errors-only" | "errors-warnings" | "minimal" | "detailed" | "summary" | undefined;
        assets?: boolean | undefined;
        chunks?: boolean | undefined;
        modules?: boolean | undefined;
        entrypoints?: boolean | "auto" | undefined;
        chunkGroups?: boolean | undefined;
        warnings?: boolean | undefined;
        warningsCount?: boolean | undefined;
        errors?: boolean | undefined;
        errorsCount?: boolean | undefined;
        colors?: boolean | undefined;
        hash?: boolean | undefined;
        version?: boolean | undefined;
        reasons?: boolean | undefined;
        outputPath?: boolean | undefined;
        chunkModules?: boolean | undefined;
        chunkRelations?: boolean | undefined;
        ids?: boolean | undefined;
        timings?: boolean | undefined;
        builtAt?: boolean | undefined;
        moduleAssets?: boolean | undefined;
        nestedModules?: boolean | undefined;
        logging?: boolean | "log" | "info" | "verbose" | "none" | "error" | "warn" | undefined;
        loggingDebug?: string | boolean | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
        loggingTrace?: boolean | undefined;
        runtimeModules?: boolean | undefined;
        children?: boolean | undefined;
        usedExports?: boolean | undefined;
        providedExports?: boolean | undefined;
        optimizationBailout?: boolean | undefined;
        groupModulesByType?: boolean | undefined;
        groupModulesByCacheStatus?: boolean | undefined;
        groupModulesByLayer?: boolean | undefined;
        groupModulesByAttributes?: boolean | undefined;
        groupModulesByPath?: boolean | undefined;
        groupModulesByExtension?: boolean | undefined;
        modulesSpace?: number | undefined;
        chunkModulesSpace?: number | undefined;
        nestedModulesSpace?: number | undefined;
        relatedAssets?: boolean | undefined;
        groupAssetsByEmitStatus?: boolean | undefined;
        groupAssetsByInfo?: boolean | undefined;
        groupAssetsByPath?: boolean | undefined;
        groupAssetsByExtension?: boolean | undefined;
        groupAssetsByChunk?: boolean | undefined;
        assetsSpace?: number | undefined;
        orphanModules?: boolean | undefined;
        excludeModules?: string | boolean | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean))[] | undefined;
        excludeAssets?: string | RegExp | ((args_0: string, args_1: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any) => boolean))[] | undefined;
        modulesSort?: string | undefined;
        chunkModulesSort?: string | undefined;
        nestedModulesSort?: string | undefined;
        chunksSort?: string | undefined;
        assetsSort?: string | undefined;
        performance?: boolean | undefined;
        env?: boolean | undefined;
        chunkGroupAuxiliary?: boolean | undefined;
        chunkGroupChildren?: boolean | undefined;
        chunkGroupMaxAssets?: number | undefined;
        dependentModules?: boolean | undefined;
        chunkOrigins?: boolean | undefined;
        runtime?: boolean | undefined;
        depth?: boolean | undefined;
        reasonsSpace?: number | undefined;
        groupReasonsByOrigin?: boolean | undefined;
        errorDetails?: boolean | undefined;
        errorStack?: boolean | undefined;
        moduleTrace?: boolean | undefined;
        cachedModules?: boolean | undefined;
        cachedAssets?: boolean | undefined;
        cached?: boolean | undefined;
        errorsSpace?: number | undefined;
        warningsSpace?: number | undefined;
    }, {
        source?: boolean | undefined;
        publicPath?: boolean | undefined;
        all?: boolean | undefined;
        preset?: boolean | "verbose" | "normal" | "none" | "errors-only" | "errors-warnings" | "minimal" | "detailed" | "summary" | undefined;
        assets?: boolean | undefined;
        chunks?: boolean | undefined;
        modules?: boolean | undefined;
        entrypoints?: boolean | "auto" | undefined;
        chunkGroups?: boolean | undefined;
        warnings?: boolean | undefined;
        warningsCount?: boolean | undefined;
        errors?: boolean | undefined;
        errorsCount?: boolean | undefined;
        colors?: boolean | undefined;
        hash?: boolean | undefined;
        version?: boolean | undefined;
        reasons?: boolean | undefined;
        outputPath?: boolean | undefined;
        chunkModules?: boolean | undefined;
        chunkRelations?: boolean | undefined;
        ids?: boolean | undefined;
        timings?: boolean | undefined;
        builtAt?: boolean | undefined;
        moduleAssets?: boolean | undefined;
        nestedModules?: boolean | undefined;
        logging?: boolean | "log" | "info" | "verbose" | "none" | "error" | "warn" | undefined;
        loggingDebug?: string | boolean | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
        loggingTrace?: boolean | undefined;
        runtimeModules?: boolean | undefined;
        children?: boolean | undefined;
        usedExports?: boolean | undefined;
        providedExports?: boolean | undefined;
        optimizationBailout?: boolean | undefined;
        groupModulesByType?: boolean | undefined;
        groupModulesByCacheStatus?: boolean | undefined;
        groupModulesByLayer?: boolean | undefined;
        groupModulesByAttributes?: boolean | undefined;
        groupModulesByPath?: boolean | undefined;
        groupModulesByExtension?: boolean | undefined;
        modulesSpace?: number | undefined;
        chunkModulesSpace?: number | undefined;
        nestedModulesSpace?: number | undefined;
        relatedAssets?: boolean | undefined;
        groupAssetsByEmitStatus?: boolean | undefined;
        groupAssetsByInfo?: boolean | undefined;
        groupAssetsByPath?: boolean | undefined;
        groupAssetsByExtension?: boolean | undefined;
        groupAssetsByChunk?: boolean | undefined;
        assetsSpace?: number | undefined;
        orphanModules?: boolean | undefined;
        excludeModules?: string | boolean | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean))[] | undefined;
        excludeAssets?: string | RegExp | ((args_0: string, args_1: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any) => boolean))[] | undefined;
        modulesSort?: string | undefined;
        chunkModulesSort?: string | undefined;
        nestedModulesSort?: string | undefined;
        chunksSort?: string | undefined;
        assetsSort?: string | undefined;
        performance?: boolean | undefined;
        env?: boolean | undefined;
        chunkGroupAuxiliary?: boolean | undefined;
        chunkGroupChildren?: boolean | undefined;
        chunkGroupMaxAssets?: number | undefined;
        dependentModules?: boolean | undefined;
        chunkOrigins?: boolean | undefined;
        runtime?: boolean | undefined;
        depth?: boolean | undefined;
        reasonsSpace?: number | undefined;
        groupReasonsByOrigin?: boolean | undefined;
        errorDetails?: boolean | undefined;
        errorStack?: boolean | undefined;
        moduleTrace?: boolean | undefined;
        cachedModules?: boolean | undefined;
        cachedAssets?: boolean | undefined;
        cached?: boolean | undefined;
        errorsSpace?: number | undefined;
        warningsSpace?: number | undefined;
    }>]>>;
    snapshot: z.ZodOptional<z.ZodObject<{}, "strict", z.ZodTypeAny, {}, {}>>;
    optimization: z.ZodOptional<z.ZodObject<{
        moduleIds: z.ZodOptional<z.ZodEnum<["named", "natural", "deterministic"]>>;
        chunkIds: z.ZodOptional<z.ZodEnum<["natural", "named", "deterministic"]>>;
        minimize: z.ZodOptional<z.ZodBoolean>;
        minimizer: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodLiteral<"...">, z.ZodUnion<[z.ZodType<t.RspackPluginInstance | t.WebpackPluginInstance | t.RspackPluginFunction | t.WebpackPluginFunction, z.ZodTypeDef, t.RspackPluginInstance | t.WebpackPluginInstance | t.RspackPluginFunction | t.WebpackPluginFunction>, z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<0>, z.ZodLiteral<"">, z.ZodNull, z.ZodUndefined]>]>]>, "many">>;
        mergeDuplicateChunks: z.ZodOptional<z.ZodBoolean>;
        splitChunks: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodObject<{
            chunks: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodEnum<["initial", "async", "all"]>, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodType<Chunk, z.ZodTypeDef, Chunk>], z.ZodUnknown>, z.ZodBoolean>]>>;
            defaultSizeTypes: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            minChunks: z.ZodOptional<z.ZodNumber>;
            usedExports: z.ZodOptional<z.ZodBoolean>;
            name: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodLiteral<false>]>, z.ZodFunction<z.ZodTuple<[z.ZodOptional<z.ZodType<Module, z.ZodTypeDef, Module>>], z.ZodUnknown>, z.ZodUnknown>]>>;
            minSize: z.ZodOptional<z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>>;
            maxSize: z.ZodOptional<z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>>;
            maxAsyncSize: z.ZodOptional<z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>>;
            maxInitialSize: z.ZodOptional<z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>>;
            maxAsyncRequests: z.ZodOptional<z.ZodNumber>;
            maxInitialRequests: z.ZodOptional<z.ZodNumber>;
            automaticNameDelimiter: z.ZodOptional<z.ZodString>;
            cacheGroups: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodLiteral<false>, z.ZodObject<{
                chunks: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodEnum<["initial", "async", "all"]>, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodType<Chunk, z.ZodTypeDef, Chunk>], z.ZodUnknown>, z.ZodBoolean>]>>;
                defaultSizeTypes: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                minChunks: z.ZodOptional<z.ZodNumber>;
                usedExports: z.ZodOptional<z.ZodBoolean>;
                name: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodLiteral<false>]>, z.ZodFunction<z.ZodTuple<[z.ZodOptional<z.ZodType<Module, z.ZodTypeDef, Module>>], z.ZodUnknown>, z.ZodUnknown>]>>;
                minSize: z.ZodOptional<z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>>;
                maxSize: z.ZodOptional<z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>>;
                maxAsyncSize: z.ZodOptional<z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>>;
                maxInitialSize: z.ZodOptional<z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>>;
                maxAsyncRequests: z.ZodOptional<z.ZodNumber>;
                maxInitialRequests: z.ZodOptional<z.ZodNumber>;
                automaticNameDelimiter: z.ZodOptional<z.ZodString>;
                test: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodType<Module, z.ZodTypeDef, Module>], z.ZodUnknown>, z.ZodUnknown>]>>;
                priority: z.ZodOptional<z.ZodNumber>;
                enforce: z.ZodOptional<z.ZodBoolean>;
                filename: z.ZodOptional<z.ZodString>;
                reuseExistingChunk: z.ZodOptional<z.ZodBoolean>;
                type: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>>;
                idHint: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                type?: string | RegExp | undefined;
                filename?: string | undefined;
                name?: string | false | ((args_0: Module | undefined, ...args_1: unknown[]) => unknown) | undefined;
                priority?: number | undefined;
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                usedExports?: boolean | undefined;
                test?: string | RegExp | ((args_0: Module, ...args_1: unknown[]) => unknown) | undefined;
                enforce?: boolean | undefined;
                maxSize?: number | Record<string, number> | undefined;
                reuseExistingChunk?: boolean | undefined;
                idHint?: string | undefined;
                defaultSizeTypes?: string[] | undefined;
                minChunks?: number | undefined;
                minSize?: number | Record<string, number> | undefined;
                maxAsyncSize?: number | Record<string, number> | undefined;
                maxInitialSize?: number | Record<string, number> | undefined;
                maxAsyncRequests?: number | undefined;
                maxInitialRequests?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            }, {
                type?: string | RegExp | undefined;
                filename?: string | undefined;
                name?: string | false | ((args_0: Module | undefined, ...args_1: unknown[]) => unknown) | undefined;
                priority?: number | undefined;
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                usedExports?: boolean | undefined;
                test?: string | RegExp | ((args_0: Module, ...args_1: unknown[]) => unknown) | undefined;
                enforce?: boolean | undefined;
                maxSize?: number | Record<string, number> | undefined;
                reuseExistingChunk?: boolean | undefined;
                idHint?: string | undefined;
                defaultSizeTypes?: string[] | undefined;
                minChunks?: number | undefined;
                minSize?: number | Record<string, number> | undefined;
                maxAsyncSize?: number | Record<string, number> | undefined;
                maxInitialSize?: number | Record<string, number> | undefined;
                maxAsyncRequests?: number | undefined;
                maxInitialRequests?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            }>]>>>;
            fallbackCacheGroup: z.ZodOptional<z.ZodObject<{
                chunks: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodEnum<["initial", "async", "all"]>, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodType<Chunk, z.ZodTypeDef, Chunk>], z.ZodUnknown>, z.ZodBoolean>]>>;
                minSize: z.ZodOptional<z.ZodNumber>;
                maxSize: z.ZodOptional<z.ZodNumber>;
                maxAsyncSize: z.ZodOptional<z.ZodNumber>;
                maxInitialSize: z.ZodOptional<z.ZodNumber>;
                automaticNameDelimiter: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                maxSize?: number | undefined;
                minSize?: number | undefined;
                maxAsyncSize?: number | undefined;
                maxInitialSize?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            }, {
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                maxSize?: number | undefined;
                minSize?: number | undefined;
                maxAsyncSize?: number | undefined;
                maxInitialSize?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            }>>;
            hidePathInfo: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            name?: string | false | ((args_0: Module | undefined, ...args_1: unknown[]) => unknown) | undefined;
            chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
            usedExports?: boolean | undefined;
            maxSize?: number | Record<string, number> | undefined;
            defaultSizeTypes?: string[] | undefined;
            minChunks?: number | undefined;
            minSize?: number | Record<string, number> | undefined;
            maxAsyncSize?: number | Record<string, number> | undefined;
            maxInitialSize?: number | Record<string, number> | undefined;
            maxAsyncRequests?: number | undefined;
            maxInitialRequests?: number | undefined;
            automaticNameDelimiter?: string | undefined;
            cacheGroups?: Record<string, false | {
                type?: string | RegExp | undefined;
                filename?: string | undefined;
                name?: string | false | ((args_0: Module | undefined, ...args_1: unknown[]) => unknown) | undefined;
                priority?: number | undefined;
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                usedExports?: boolean | undefined;
                test?: string | RegExp | ((args_0: Module, ...args_1: unknown[]) => unknown) | undefined;
                enforce?: boolean | undefined;
                maxSize?: number | Record<string, number> | undefined;
                reuseExistingChunk?: boolean | undefined;
                idHint?: string | undefined;
                defaultSizeTypes?: string[] | undefined;
                minChunks?: number | undefined;
                minSize?: number | Record<string, number> | undefined;
                maxAsyncSize?: number | Record<string, number> | undefined;
                maxInitialSize?: number | Record<string, number> | undefined;
                maxAsyncRequests?: number | undefined;
                maxInitialRequests?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            }> | undefined;
            fallbackCacheGroup?: {
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                maxSize?: number | undefined;
                minSize?: number | undefined;
                maxAsyncSize?: number | undefined;
                maxInitialSize?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            } | undefined;
            hidePathInfo?: boolean | undefined;
        }, {
            name?: string | false | ((args_0: Module | undefined, ...args_1: unknown[]) => unknown) | undefined;
            chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
            usedExports?: boolean | undefined;
            maxSize?: number | Record<string, number> | undefined;
            defaultSizeTypes?: string[] | undefined;
            minChunks?: number | undefined;
            minSize?: number | Record<string, number> | undefined;
            maxAsyncSize?: number | Record<string, number> | undefined;
            maxInitialSize?: number | Record<string, number> | undefined;
            maxAsyncRequests?: number | undefined;
            maxInitialRequests?: number | undefined;
            automaticNameDelimiter?: string | undefined;
            cacheGroups?: Record<string, false | {
                type?: string | RegExp | undefined;
                filename?: string | undefined;
                name?: string | false | ((args_0: Module | undefined, ...args_1: unknown[]) => unknown) | undefined;
                priority?: number | undefined;
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                usedExports?: boolean | undefined;
                test?: string | RegExp | ((args_0: Module, ...args_1: unknown[]) => unknown) | undefined;
                enforce?: boolean | undefined;
                maxSize?: number | Record<string, number> | undefined;
                reuseExistingChunk?: boolean | undefined;
                idHint?: string | undefined;
                defaultSizeTypes?: string[] | undefined;
                minChunks?: number | undefined;
                minSize?: number | Record<string, number> | undefined;
                maxAsyncSize?: number | Record<string, number> | undefined;
                maxInitialSize?: number | Record<string, number> | undefined;
                maxAsyncRequests?: number | undefined;
                maxInitialRequests?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            }> | undefined;
            fallbackCacheGroup?: {
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                maxSize?: number | undefined;
                minSize?: number | undefined;
                maxAsyncSize?: number | undefined;
                maxInitialSize?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            } | undefined;
            hidePathInfo?: boolean | undefined;
        }>]>>;
        runtimeChunk: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodEnum<["single", "multiple"]>, z.ZodBoolean]>, z.ZodObject<{
            name: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
                name: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                name: string;
            }, {
                name: string;
            }>], z.ZodUnknown>, z.ZodString>]>>;
        }, "strict", z.ZodTypeAny, {
            name?: string | ((args_0: {
                name: string;
            }, ...args_1: unknown[]) => string) | undefined;
        }, {
            name?: string | ((args_0: {
                name: string;
            }, ...args_1: unknown[]) => string) | undefined;
        }>]>>;
        removeAvailableModules: z.ZodOptional<z.ZodBoolean>;
        removeEmptyChunks: z.ZodOptional<z.ZodBoolean>;
        realContentHash: z.ZodOptional<z.ZodBoolean>;
        sideEffects: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["flag"]>, z.ZodBoolean]>>;
        providedExports: z.ZodOptional<z.ZodBoolean>;
        concatenateModules: z.ZodOptional<z.ZodBoolean>;
        innerGraph: z.ZodOptional<z.ZodBoolean>;
        usedExports: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["global"]>, z.ZodBoolean]>>;
        mangleExports: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["size", "deterministic"]>, z.ZodBoolean]>>;
        nodeEnv: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodLiteral<false>]>>;
        emitOnErrors: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        splitChunks?: false | {
            name?: string | false | ((args_0: Module | undefined, ...args_1: unknown[]) => unknown) | undefined;
            chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
            usedExports?: boolean | undefined;
            maxSize?: number | Record<string, number> | undefined;
            defaultSizeTypes?: string[] | undefined;
            minChunks?: number | undefined;
            minSize?: number | Record<string, number> | undefined;
            maxAsyncSize?: number | Record<string, number> | undefined;
            maxInitialSize?: number | Record<string, number> | undefined;
            maxAsyncRequests?: number | undefined;
            maxInitialRequests?: number | undefined;
            automaticNameDelimiter?: string | undefined;
            cacheGroups?: Record<string, false | {
                type?: string | RegExp | undefined;
                filename?: string | undefined;
                name?: string | false | ((args_0: Module | undefined, ...args_1: unknown[]) => unknown) | undefined;
                priority?: number | undefined;
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                usedExports?: boolean | undefined;
                test?: string | RegExp | ((args_0: Module, ...args_1: unknown[]) => unknown) | undefined;
                enforce?: boolean | undefined;
                maxSize?: number | Record<string, number> | undefined;
                reuseExistingChunk?: boolean | undefined;
                idHint?: string | undefined;
                defaultSizeTypes?: string[] | undefined;
                minChunks?: number | undefined;
                minSize?: number | Record<string, number> | undefined;
                maxAsyncSize?: number | Record<string, number> | undefined;
                maxInitialSize?: number | Record<string, number> | undefined;
                maxAsyncRequests?: number | undefined;
                maxInitialRequests?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            }> | undefined;
            fallbackCacheGroup?: {
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                maxSize?: number | undefined;
                minSize?: number | undefined;
                maxAsyncSize?: number | undefined;
                maxInitialSize?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            } | undefined;
            hidePathInfo?: boolean | undefined;
        } | undefined;
        usedExports?: boolean | "global" | undefined;
        providedExports?: boolean | undefined;
        sideEffects?: boolean | "flag" | undefined;
        moduleIds?: "named" | "natural" | "deterministic" | undefined;
        chunkIds?: "named" | "natural" | "deterministic" | undefined;
        minimize?: boolean | undefined;
        minimizer?: (false | "" | 0 | t.RspackPluginInstance | "..." | t.WebpackPluginInstance | t.RspackPluginFunction | t.WebpackPluginFunction | null | undefined)[] | undefined;
        mergeDuplicateChunks?: boolean | undefined;
        runtimeChunk?: boolean | "single" | "multiple" | {
            name?: string | ((args_0: {
                name: string;
            }, ...args_1: unknown[]) => string) | undefined;
        } | undefined;
        removeAvailableModules?: boolean | undefined;
        removeEmptyChunks?: boolean | undefined;
        realContentHash?: boolean | undefined;
        concatenateModules?: boolean | undefined;
        innerGraph?: boolean | undefined;
        mangleExports?: boolean | "size" | "deterministic" | undefined;
        nodeEnv?: string | false | undefined;
        emitOnErrors?: boolean | undefined;
    }, {
        splitChunks?: false | {
            name?: string | false | ((args_0: Module | undefined, ...args_1: unknown[]) => unknown) | undefined;
            chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
            usedExports?: boolean | undefined;
            maxSize?: number | Record<string, number> | undefined;
            defaultSizeTypes?: string[] | undefined;
            minChunks?: number | undefined;
            minSize?: number | Record<string, number> | undefined;
            maxAsyncSize?: number | Record<string, number> | undefined;
            maxInitialSize?: number | Record<string, number> | undefined;
            maxAsyncRequests?: number | undefined;
            maxInitialRequests?: number | undefined;
            automaticNameDelimiter?: string | undefined;
            cacheGroups?: Record<string, false | {
                type?: string | RegExp | undefined;
                filename?: string | undefined;
                name?: string | false | ((args_0: Module | undefined, ...args_1: unknown[]) => unknown) | undefined;
                priority?: number | undefined;
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                usedExports?: boolean | undefined;
                test?: string | RegExp | ((args_0: Module, ...args_1: unknown[]) => unknown) | undefined;
                enforce?: boolean | undefined;
                maxSize?: number | Record<string, number> | undefined;
                reuseExistingChunk?: boolean | undefined;
                idHint?: string | undefined;
                defaultSizeTypes?: string[] | undefined;
                minChunks?: number | undefined;
                minSize?: number | Record<string, number> | undefined;
                maxAsyncSize?: number | Record<string, number> | undefined;
                maxInitialSize?: number | Record<string, number> | undefined;
                maxAsyncRequests?: number | undefined;
                maxInitialRequests?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            }> | undefined;
            fallbackCacheGroup?: {
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                maxSize?: number | undefined;
                minSize?: number | undefined;
                maxAsyncSize?: number | undefined;
                maxInitialSize?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            } | undefined;
            hidePathInfo?: boolean | undefined;
        } | undefined;
        usedExports?: boolean | "global" | undefined;
        providedExports?: boolean | undefined;
        sideEffects?: boolean | "flag" | undefined;
        moduleIds?: "named" | "natural" | "deterministic" | undefined;
        chunkIds?: "named" | "natural" | "deterministic" | undefined;
        minimize?: boolean | undefined;
        minimizer?: (false | "" | 0 | t.RspackPluginInstance | "..." | t.WebpackPluginInstance | t.RspackPluginFunction | t.WebpackPluginFunction | null | undefined)[] | undefined;
        mergeDuplicateChunks?: boolean | undefined;
        runtimeChunk?: boolean | "single" | "multiple" | {
            name?: string | ((args_0: {
                name: string;
            }, ...args_1: unknown[]) => string) | undefined;
        } | undefined;
        removeAvailableModules?: boolean | undefined;
        removeEmptyChunks?: boolean | undefined;
        realContentHash?: boolean | undefined;
        concatenateModules?: boolean | undefined;
        innerGraph?: boolean | undefined;
        mangleExports?: boolean | "size" | "deterministic" | undefined;
        nodeEnv?: string | false | undefined;
        emitOnErrors?: boolean | undefined;
    }>>;
    resolve: z.ZodOptional<z.ZodType<t.ResolveOptions, z.ZodTypeDef, t.ResolveOptions>>;
    resolveLoader: z.ZodOptional<z.ZodType<t.ResolveOptions, z.ZodTypeDef, t.ResolveOptions>>;
    plugins: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodType<t.RspackPluginInstance | t.WebpackPluginInstance | t.RspackPluginFunction | t.WebpackPluginFunction, z.ZodTypeDef, t.RspackPluginInstance | t.WebpackPluginInstance | t.RspackPluginFunction | t.WebpackPluginFunction>, z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<0>, z.ZodLiteral<"">, z.ZodNull, z.ZodUndefined]>]>, "many">>;
    devServer: z.ZodOptional<z.ZodType<DevServer, z.ZodTypeDef, DevServer>>;
    module: z.ZodOptional<z.ZodObject<{
        defaultRules: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<"...">, z.ZodType<RuleSetRule, z.ZodTypeDef, RuleSetRule>]>, z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<0>, z.ZodLiteral<"">, z.ZodNull, z.ZodUndefined]>]>, "many">>;
        rules: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<"...">, z.ZodType<RuleSetRule, z.ZodTypeDef, RuleSetRule>]>, z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<0>, z.ZodLiteral<"">, z.ZodNull, z.ZodUndefined]>]>, "many">>;
        parser: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            asset: z.ZodOptional<z.ZodObject<{
                dataUrlCondition: z.ZodOptional<z.ZodObject<{
                    maxSize: z.ZodOptional<z.ZodNumber>;
                }, "strict", z.ZodTypeAny, {
                    maxSize?: number | undefined;
                }, {
                    maxSize?: number | undefined;
                }>>;
            }, "strict", z.ZodTypeAny, {
                dataUrlCondition?: {
                    maxSize?: number | undefined;
                } | undefined;
            }, {
                dataUrlCondition?: {
                    maxSize?: number | undefined;
                } | undefined;
            }>>;
            css: z.ZodOptional<z.ZodObject<{
                namedExports: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                namedExports?: boolean | undefined;
            }, {
                namedExports?: boolean | undefined;
            }>>;
            "css/auto": z.ZodOptional<z.ZodObject<{
                namedExports: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                namedExports?: boolean | undefined;
            }, {
                namedExports?: boolean | undefined;
            }>>;
            "css/module": z.ZodOptional<z.ZodObject<{
                namedExports: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                namedExports?: boolean | undefined;
            }, {
                namedExports?: boolean | undefined;
            }>>;
            javascript: z.ZodOptional<z.ZodObject<{
                dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
                dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
                dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
                dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
                importMeta: z.ZodOptional<z.ZodBoolean>;
                url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
                exprContextCritical: z.ZodOptional<z.ZodBoolean>;
                wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
                exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
                importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
                reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
                strictExportPresence: z.ZodOptional<z.ZodBoolean>;
                worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
                overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
                requireAsExpression: z.ZodOptional<z.ZodBoolean>;
                requireDynamic: z.ZodOptional<z.ZodBoolean>;
                requireResolve: z.ZodOptional<z.ZodBoolean>;
                importDynamic: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            }, {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            }>>;
            "javascript/auto": z.ZodOptional<z.ZodObject<{
                dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
                dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
                dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
                dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
                importMeta: z.ZodOptional<z.ZodBoolean>;
                url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
                exprContextCritical: z.ZodOptional<z.ZodBoolean>;
                wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
                exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
                importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
                reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
                strictExportPresence: z.ZodOptional<z.ZodBoolean>;
                worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
                overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
                requireAsExpression: z.ZodOptional<z.ZodBoolean>;
                requireDynamic: z.ZodOptional<z.ZodBoolean>;
                requireResolve: z.ZodOptional<z.ZodBoolean>;
                importDynamic: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            }, {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            }>>;
            "javascript/dynamic": z.ZodOptional<z.ZodObject<{
                dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
                dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
                dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
                dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
                importMeta: z.ZodOptional<z.ZodBoolean>;
                url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
                exprContextCritical: z.ZodOptional<z.ZodBoolean>;
                wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
                exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
                importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
                reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
                strictExportPresence: z.ZodOptional<z.ZodBoolean>;
                worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
                overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
                requireAsExpression: z.ZodOptional<z.ZodBoolean>;
                requireDynamic: z.ZodOptional<z.ZodBoolean>;
                requireResolve: z.ZodOptional<z.ZodBoolean>;
                importDynamic: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            }, {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            }>>;
            "javascript/esm": z.ZodOptional<z.ZodObject<{
                dynamicImportMode: z.ZodOptional<z.ZodEnum<["eager", "lazy", "weak", "lazy-once"]>>;
                dynamicImportPreload: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
                dynamicImportPrefetch: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodNumber]>>;
                dynamicImportFetchPriority: z.ZodOptional<z.ZodEnum<["low", "high", "auto"]>>;
                importMeta: z.ZodOptional<z.ZodBoolean>;
                url: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"relative">, z.ZodBoolean]>>;
                exprContextCritical: z.ZodOptional<z.ZodBoolean>;
                wrappedContextCritical: z.ZodOptional<z.ZodBoolean>;
                exportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
                importExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
                reexportExportsPresence: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warn", "auto"]>, z.ZodLiteral<false>]>>;
                strictExportPresence: z.ZodOptional<z.ZodBoolean>;
                worker: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodBoolean]>>;
                overrideStrict: z.ZodOptional<z.ZodEnum<["strict", "non-strict"]>>;
                requireAsExpression: z.ZodOptional<z.ZodBoolean>;
                requireDynamic: z.ZodOptional<z.ZodBoolean>;
                requireResolve: z.ZodOptional<z.ZodBoolean>;
                importDynamic: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            }, {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            javascript?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            css?: {
                namedExports?: boolean | undefined;
            } | undefined;
            "css/auto"?: {
                namedExports?: boolean | undefined;
            } | undefined;
            "css/module"?: {
                namedExports?: boolean | undefined;
            } | undefined;
            asset?: {
                dataUrlCondition?: {
                    maxSize?: number | undefined;
                } | undefined;
            } | undefined;
            "javascript/auto"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            "javascript/dynamic"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            "javascript/esm"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
        }, {
            javascript?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            css?: {
                namedExports?: boolean | undefined;
            } | undefined;
            "css/auto"?: {
                namedExports?: boolean | undefined;
            } | undefined;
            "css/module"?: {
                namedExports?: boolean | undefined;
            } | undefined;
            asset?: {
                dataUrlCondition?: {
                    maxSize?: number | undefined;
                } | undefined;
            } | undefined;
            "javascript/auto"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            "javascript/dynamic"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            "javascript/esm"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
        }>, z.ZodRecord<z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>>]>>;
        generator: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            asset: z.ZodOptional<z.ZodObject<z.objectUtil.extendShape<{
                dataUrl: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    encoding: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<"base64">]>>;
                    mimetype: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                }, {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                }>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
                    content: z.ZodString;
                    filename: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    filename: string;
                    content: string;
                }, {
                    filename: string;
                    content: string;
                }>], z.ZodUnknown>, z.ZodString>]>>;
            }, {
                emit: z.ZodOptional<z.ZodBoolean>;
                filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
                publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
            }>, "strict", z.ZodTypeAny, {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            }, {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            }>>;
            "asset/inline": z.ZodOptional<z.ZodObject<{
                dataUrl: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
                    encoding: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<false>, z.ZodLiteral<"base64">]>>;
                    mimetype: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                }, {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                }>, z.ZodFunction<z.ZodTuple<[z.ZodObject<{
                    content: z.ZodString;
                    filename: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    filename: string;
                    content: string;
                }, {
                    filename: string;
                    content: string;
                }>], z.ZodUnknown>, z.ZodString>]>>;
            }, "strict", z.ZodTypeAny, {
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            }, {
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            }>>;
            "asset/resource": z.ZodOptional<z.ZodObject<{
                emit: z.ZodOptional<z.ZodBoolean>;
                filename: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>>;
                publicPath: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"auto">, z.ZodUnion<[z.ZodString, z.ZodFunction<z.ZodTuple<[z.ZodType<PathData, z.ZodTypeDef, PathData>, z.ZodOptional<z.ZodType<JsAssetInfo, z.ZodTypeDef, JsAssetInfo>>], z.ZodUnknown>, z.ZodString>]>]>>;
            }, "strict", z.ZodTypeAny, {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
            }, {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
            }>>;
            css: z.ZodOptional<z.ZodObject<{
                exportsOnly: z.ZodOptional<z.ZodBoolean>;
                esModule: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
            }, {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
            }>>;
            "css/auto": z.ZodOptional<z.ZodObject<{
                exportsConvention: z.ZodOptional<z.ZodEnum<["as-is", "camel-case", "camel-case-only", "dashes", "dashes-only"]>>;
                exportsOnly: z.ZodOptional<z.ZodBoolean>;
                localIdentName: z.ZodOptional<z.ZodString>;
                esModule: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            }, {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            }>>;
            "css/module": z.ZodOptional<z.ZodObject<{
                exportsConvention: z.ZodOptional<z.ZodEnum<["as-is", "camel-case", "camel-case-only", "dashes", "dashes-only"]>>;
                exportsOnly: z.ZodOptional<z.ZodBoolean>;
                localIdentName: z.ZodOptional<z.ZodString>;
                esModule: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            }, {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            css?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
            } | undefined;
            "css/auto"?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            } | undefined;
            "css/module"?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            } | undefined;
            asset?: {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            } | undefined;
            "asset/inline"?: {
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            } | undefined;
            "asset/resource"?: {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
            } | undefined;
        }, {
            css?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
            } | undefined;
            "css/auto"?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            } | undefined;
            "css/module"?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            } | undefined;
            asset?: {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            } | undefined;
            "asset/inline"?: {
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            } | undefined;
            "asset/resource"?: {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
            } | undefined;
        }>, z.ZodRecord<z.ZodString, z.ZodRecord<z.ZodString, z.ZodAny>>]>>;
        noParse: z.ZodOptional<z.ZodUnion<[z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>, z.ZodArray<z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodType<RegExp, z.ZodTypeDef, RegExp>]>, z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>]>, "many">]>>;
    }, "strict", z.ZodTypeAny, {
        parser?: {
            javascript?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            css?: {
                namedExports?: boolean | undefined;
            } | undefined;
            "css/auto"?: {
                namedExports?: boolean | undefined;
            } | undefined;
            "css/module"?: {
                namedExports?: boolean | undefined;
            } | undefined;
            asset?: {
                dataUrlCondition?: {
                    maxSize?: number | undefined;
                } | undefined;
            } | undefined;
            "javascript/auto"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            "javascript/dynamic"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            "javascript/esm"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
        } | Record<string, Record<string, any>> | undefined;
        generator?: Record<string, Record<string, any>> | {
            css?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
            } | undefined;
            "css/auto"?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            } | undefined;
            "css/module"?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            } | undefined;
            asset?: {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            } | undefined;
            "asset/inline"?: {
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            } | undefined;
            "asset/resource"?: {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
            } | undefined;
        } | undefined;
        rules?: (false | "" | 0 | "..." | RuleSetRule | null | undefined)[] | undefined;
        defaultRules?: (false | "" | 0 | "..." | RuleSetRule | null | undefined)[] | undefined;
        noParse?: string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
    }, {
        parser?: {
            javascript?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            css?: {
                namedExports?: boolean | undefined;
            } | undefined;
            "css/auto"?: {
                namedExports?: boolean | undefined;
            } | undefined;
            "css/module"?: {
                namedExports?: boolean | undefined;
            } | undefined;
            asset?: {
                dataUrlCondition?: {
                    maxSize?: number | undefined;
                } | undefined;
            } | undefined;
            "javascript/auto"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            "javascript/dynamic"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            "javascript/esm"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
        } | Record<string, Record<string, any>> | undefined;
        generator?: Record<string, Record<string, any>> | {
            css?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
            } | undefined;
            "css/auto"?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            } | undefined;
            "css/module"?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            } | undefined;
            asset?: {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            } | undefined;
            "asset/inline"?: {
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            } | undefined;
            "asset/resource"?: {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
            } | undefined;
        } | undefined;
        rules?: (false | "" | 0 | "..." | RuleSetRule | null | undefined)[] | undefined;
        defaultRules?: (false | "" | 0 | "..." | RuleSetRule | null | undefined)[] | undefined;
        noParse?: string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
    }>>;
    profile: z.ZodOptional<z.ZodBoolean>;
    bail: z.ZodOptional<z.ZodBoolean>;
    performance: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
        assetFilter: z.ZodOptional<z.ZodFunction<z.ZodTuple<[z.ZodString], z.ZodUnknown>, z.ZodBoolean>>;
        hints: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["error", "warning"]>, z.ZodLiteral<false>]>>;
        maxAssetSize: z.ZodOptional<z.ZodNumber>;
        maxEntrypointSize: z.ZodOptional<z.ZodNumber>;
    }, "strict", z.ZodTypeAny, {
        assetFilter?: ((args_0: string, ...args_1: unknown[]) => boolean) | undefined;
        hints?: false | "error" | "warning" | undefined;
        maxAssetSize?: number | undefined;
        maxEntrypointSize?: number | undefined;
    }, {
        assetFilter?: ((args_0: string, ...args_1: unknown[]) => boolean) | undefined;
        hints?: false | "error" | "warning" | undefined;
        maxAssetSize?: number | undefined;
        maxEntrypointSize?: number | undefined;
    }>, z.ZodLiteral<false>]>>;
}, "strict", z.ZodTypeAny, {
    context?: string | undefined;
    dependencies?: string[] | undefined;
    module?: {
        parser?: {
            javascript?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            css?: {
                namedExports?: boolean | undefined;
            } | undefined;
            "css/auto"?: {
                namedExports?: boolean | undefined;
            } | undefined;
            "css/module"?: {
                namedExports?: boolean | undefined;
            } | undefined;
            asset?: {
                dataUrlCondition?: {
                    maxSize?: number | undefined;
                } | undefined;
            } | undefined;
            "javascript/auto"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            "javascript/dynamic"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            "javascript/esm"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
        } | Record<string, Record<string, any>> | undefined;
        generator?: Record<string, Record<string, any>> | {
            css?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
            } | undefined;
            "css/auto"?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            } | undefined;
            "css/module"?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            } | undefined;
            asset?: {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            } | undefined;
            "asset/inline"?: {
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            } | undefined;
            "asset/resource"?: {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
            } | undefined;
        } | undefined;
        rules?: (false | "" | 0 | "..." | RuleSetRule | null | undefined)[] | undefined;
        defaultRules?: (false | "" | 0 | "..." | RuleSetRule | null | undefined)[] | undefined;
        noParse?: string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
    } | undefined;
    name?: string | undefined;
    performance?: false | {
        assetFilter?: ((args_0: string, ...args_1: unknown[]) => boolean) | undefined;
        hints?: false | "error" | "warning" | undefined;
        maxAssetSize?: number | undefined;
        maxEntrypointSize?: number | undefined;
    } | undefined;
    entry?: string | string[] | Record<string, string | string[] | {
        import: string | string[];
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        layer?: string | null | undefined;
        runtime?: string | false | undefined;
        baseUri?: string | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        dependOn?: string | string[] | undefined;
    }> | ((...args: unknown[]) => string | string[] | Record<string, string | string[] | {
        import: string | string[];
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        layer?: string | null | undefined;
        runtime?: string | false | undefined;
        baseUri?: string | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        dependOn?: string | string[] | undefined;
    }> | Promise<string | string[] | Record<string, string | string[] | {
        import: string | string[];
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        layer?: string | null | undefined;
        runtime?: string | false | undefined;
        baseUri?: string | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        dependOn?: string | string[] | undefined;
    }>>) | undefined;
    node?: false | {
        global?: boolean | "warn" | undefined;
        __dirname?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
        __filename?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
    } | undefined;
    profile?: boolean | undefined;
    cache?: boolean | undefined;
    loader?: Record<string, any> | undefined;
    resolve?: t.ResolveOptions | undefined;
    output?: {
        module?: boolean | undefined;
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        environment?: {
            module?: boolean | undefined;
            arrowFunction?: boolean | undefined;
            asyncFunction?: boolean | undefined;
            bigIntLiteral?: boolean | undefined;
            const?: boolean | undefined;
            destructuring?: boolean | undefined;
            document?: boolean | undefined;
            dynamicImport?: boolean | undefined;
            dynamicImportInWorker?: boolean | undefined;
            forOf?: boolean | undefined;
            globalThis?: boolean | undefined;
            nodePrefixForCoreModules?: boolean | undefined;
            optionalChaining?: boolean | undefined;
            templateLiteral?: boolean | undefined;
        } | undefined;
        chunkFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        path?: string | undefined;
        auxiliaryComment?: string | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            commonjs2?: string | undefined;
            root?: string | undefined;
        } | undefined;
        umdNamedDefine?: boolean | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: string | string[] | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            root?: string | string[] | undefined;
        } | {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        pathinfo?: boolean | "verbose" | undefined;
        clean?: boolean | undefined;
        crossOriginLoading?: false | "anonymous" | "use-credentials" | undefined;
        cssFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        cssHeadDataCompression?: boolean | undefined;
        cssChunkFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        hotUpdateMainFilename?: string | undefined;
        hotUpdateChunkFilename?: string | undefined;
        hotUpdateGlobal?: string | undefined;
        assetModuleFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        uniqueName?: string | undefined;
        chunkLoadingGlobal?: string | undefined;
        enabledLibraryTypes?: string[] | undefined;
        libraryExport?: string | string[] | undefined;
        libraryTarget?: string | undefined;
        strictModuleExceptionHandling?: boolean | undefined;
        strictModuleErrorHandling?: boolean | undefined;
        globalObject?: string | undefined;
        importFunctionName?: string | undefined;
        importMetaName?: string | undefined;
        iife?: boolean | undefined;
        enabledWasmLoadingTypes?: string[] | undefined;
        webassemblyModuleFilename?: string | undefined;
        chunkFormat?: string | false | undefined;
        enabledChunkLoadingTypes?: string[] | undefined;
        trustedTypes?: string | true | {
            policyName?: string | undefined;
        } | undefined;
        sourceMapFilename?: string | undefined;
        hashDigest?: string | undefined;
        hashDigestLength?: number | undefined;
        hashFunction?: "xxhash64" | "md4" | undefined;
        hashSalt?: string | undefined;
        workerChunkLoading?: string | false | undefined;
        workerWasmLoading?: string | false | undefined;
        workerPublicPath?: string | undefined;
        scriptType?: false | "module" | "text/javascript" | undefined;
        devtoolNamespace?: string | undefined;
        devtoolModuleFilenameTemplate?: string | ((args_0: any) => any) | undefined;
        devtoolFallbackModuleFilenameTemplate?: string | ((args_0: any) => any) | undefined;
        chunkLoadTimeout?: number | undefined;
        charset?: boolean | undefined;
    } | undefined;
    target?: false | "es3" | "es5" | "es2015" | "es2016" | "es2017" | "es2018" | "es2019" | "es2020" | "es2021" | "es2022" | "node" | "async-node" | "web" | "webworker" | `node${number}` | `async-node${number}` | `node${number}.${number}` | `async-node${number}.${number}` | "electron-main" | `electron${number}-main` | `electron${number}.${number}-main` | "electron-renderer" | `electron${number}-renderer` | `electron${number}.${number}-renderer` | "electron-preload" | `electron${number}-preload` | `electron${number}.${number}-preload` | "nwjs" | `nwjs${number}` | `nwjs${number}.${number}` | "node-webkit" | `node-webkit${number}` | `node-webkit${number}.${number}` | "browserslist" | `browserslist:${string}` | ("es3" | "es5" | "es2015" | "es2016" | "es2017" | "es2018" | "es2019" | "es2020" | "es2021" | "es2022" | "node" | "async-node" | "web" | "webworker" | `node${number}` | `async-node${number}` | `node${number}.${number}` | `async-node${number}.${number}` | "electron-main" | `electron${number}-main` | `electron${number}.${number}-main` | "electron-renderer" | `electron${number}-renderer` | `electron${number}.${number}-renderer` | "electron-preload" | `electron${number}-preload` | `electron${number}.${number}-preload` | "nwjs" | `nwjs${number}` | `nwjs${number}.${number}` | "node-webkit" | `node-webkit${number}` | `node-webkit${number}.${number}` | "browserslist" | `browserslist:${string}`)[] | undefined;
    mode?: "none" | "development" | "production" | undefined;
    experiments?: {
        css?: boolean | undefined;
        lazyCompilation?: boolean | {
            entries?: boolean | undefined;
            test?: RegExp | ((args_0: Module, ...args_1: unknown[]) => boolean) | undefined;
            backend?: {
                client?: string | undefined;
                listen?: number | {
                    path?: string | undefined;
                    port?: number | undefined;
                    host?: string | undefined;
                    backlog?: number | undefined;
                    exclusive?: boolean | undefined;
                    readableAll?: boolean | undefined;
                    writableAll?: boolean | undefined;
                    ipv6Only?: boolean | undefined;
                } | undefined;
                protocol?: "http" | "https" | undefined;
            } | undefined;
            imports?: boolean | undefined;
        } | undefined;
        asyncWebAssembly?: boolean | undefined;
        outputModule?: boolean | undefined;
        topLevelAwait?: boolean | undefined;
        layers?: boolean | undefined;
        incremental?: boolean | {
            make?: boolean | undefined;
            providedExports?: boolean | undefined;
            emitAssets?: boolean | undefined;
            inferAsyncModules?: boolean | undefined;
            moduleHashes?: boolean | undefined;
            moduleCodegen?: boolean | undefined;
            moduleRuntimeRequirements?: boolean | undefined;
        } | undefined;
        futureDefaults?: boolean | undefined;
        rspackFuture?: {
            bundlerInfo?: {
                force?: boolean | ("version" | "uniqueId")[] | undefined;
                version?: string | undefined;
                bundler?: string | undefined;
            } | undefined;
        } | undefined;
    } | undefined;
    externals?: string | RegExp | Record<string, string | boolean | string[] | Record<string, string | string[]>> | ((args_0: {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }, args_1: (args_0: Error | undefined, args_1: string | boolean | string[] | Record<string, string | string[]> | undefined, args_2: "module" | "global" | "system" | "promise" | "commonjs" | "umd" | "amd" | "jsonp" | "import" | "var" | "assign" | "this" | "window" | "self" | "commonjs2" | "commonjs-module" | "commonjs-static" | "amd-require" | "umd2" | "module-import" | "script" | "node-commonjs" | undefined, ...args_3: unknown[]) => void, ...args_2: unknown[]) => unknown) | ((args_0: {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }, ...args_1: unknown[]) => Promise<string | boolean | string[] | Record<string, string | string[]>>) | (string | RegExp | Record<string, string | boolean | string[] | Record<string, string | string[]>> | ((args_0: {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }, args_1: (args_0: Error | undefined, args_1: string | boolean | string[] | Record<string, string | string[]> | undefined, args_2: "module" | "global" | "system" | "promise" | "commonjs" | "umd" | "amd" | "jsonp" | "import" | "var" | "assign" | "this" | "window" | "self" | "commonjs2" | "commonjs-module" | "commonjs-static" | "amd-require" | "umd2" | "module-import" | "script" | "node-commonjs" | undefined, ...args_3: unknown[]) => void, ...args_2: unknown[]) => unknown) | ((args_0: {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }, ...args_1: unknown[]) => Promise<string | boolean | string[] | Record<string, string | string[]>>))[] | undefined;
    externalsType?: "module" | "global" | "system" | "promise" | "commonjs" | "umd" | "amd" | "jsonp" | "import" | "var" | "assign" | "this" | "window" | "self" | "commonjs2" | "commonjs-module" | "commonjs-static" | "amd-require" | "umd2" | "module-import" | "script" | "node-commonjs" | undefined;
    externalsPresets?: {
        node?: boolean | undefined;
        web?: boolean | undefined;
        nwjs?: boolean | undefined;
        webAsync?: boolean | undefined;
        electron?: boolean | undefined;
        electronMain?: boolean | undefined;
        electronPreload?: boolean | undefined;
        electronRenderer?: boolean | undefined;
    } | undefined;
    infrastructureLogging?: {
        debug?: string | boolean | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
        colors?: boolean | undefined;
        appendOnly?: boolean | undefined;
        console?: Console | undefined;
        level?: "log" | "info" | "verbose" | "none" | "error" | "warn" | undefined;
        stream?: NodeJS.WritableStream | undefined;
    } | undefined;
    devtool?: false | "eval" | "cheap-source-map" | "cheap-module-source-map" | "source-map" | "inline-cheap-source-map" | "inline-cheap-module-source-map" | "inline-source-map" | "inline-nosources-cheap-source-map" | "inline-nosources-cheap-module-source-map" | "inline-nosources-source-map" | "nosources-cheap-source-map" | "nosources-cheap-module-source-map" | "nosources-source-map" | "hidden-nosources-cheap-source-map" | "hidden-nosources-cheap-module-source-map" | "hidden-nosources-source-map" | "hidden-cheap-source-map" | "hidden-cheap-module-source-map" | "hidden-source-map" | "eval-cheap-source-map" | "eval-cheap-module-source-map" | "eval-source-map" | "eval-nosources-cheap-source-map" | "eval-nosources-cheap-module-source-map" | "eval-nosources-source-map" | undefined;
    ignoreWarnings?: (RegExp | ((args_0: Error, args_1: Compilation, ...args_2: unknown[]) => boolean))[] | undefined;
    watchOptions?: {
        aggregateTimeout?: number | undefined;
        followSymlinks?: boolean | undefined;
        ignored?: string | RegExp | string[] | undefined;
        poll?: number | boolean | undefined;
        stdin?: boolean | undefined;
    } | undefined;
    watch?: boolean | undefined;
    stats?: boolean | "verbose" | "normal" | "none" | "errors-only" | "errors-warnings" | "minimal" | "detailed" | "summary" | {
        source?: boolean | undefined;
        publicPath?: boolean | undefined;
        all?: boolean | undefined;
        preset?: boolean | "verbose" | "normal" | "none" | "errors-only" | "errors-warnings" | "minimal" | "detailed" | "summary" | undefined;
        assets?: boolean | undefined;
        chunks?: boolean | undefined;
        modules?: boolean | undefined;
        entrypoints?: boolean | "auto" | undefined;
        chunkGroups?: boolean | undefined;
        warnings?: boolean | undefined;
        warningsCount?: boolean | undefined;
        errors?: boolean | undefined;
        errorsCount?: boolean | undefined;
        colors?: boolean | undefined;
        hash?: boolean | undefined;
        version?: boolean | undefined;
        reasons?: boolean | undefined;
        outputPath?: boolean | undefined;
        chunkModules?: boolean | undefined;
        chunkRelations?: boolean | undefined;
        ids?: boolean | undefined;
        timings?: boolean | undefined;
        builtAt?: boolean | undefined;
        moduleAssets?: boolean | undefined;
        nestedModules?: boolean | undefined;
        logging?: boolean | "log" | "info" | "verbose" | "none" | "error" | "warn" | undefined;
        loggingDebug?: string | boolean | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
        loggingTrace?: boolean | undefined;
        runtimeModules?: boolean | undefined;
        children?: boolean | undefined;
        usedExports?: boolean | undefined;
        providedExports?: boolean | undefined;
        optimizationBailout?: boolean | undefined;
        groupModulesByType?: boolean | undefined;
        groupModulesByCacheStatus?: boolean | undefined;
        groupModulesByLayer?: boolean | undefined;
        groupModulesByAttributes?: boolean | undefined;
        groupModulesByPath?: boolean | undefined;
        groupModulesByExtension?: boolean | undefined;
        modulesSpace?: number | undefined;
        chunkModulesSpace?: number | undefined;
        nestedModulesSpace?: number | undefined;
        relatedAssets?: boolean | undefined;
        groupAssetsByEmitStatus?: boolean | undefined;
        groupAssetsByInfo?: boolean | undefined;
        groupAssetsByPath?: boolean | undefined;
        groupAssetsByExtension?: boolean | undefined;
        groupAssetsByChunk?: boolean | undefined;
        assetsSpace?: number | undefined;
        orphanModules?: boolean | undefined;
        excludeModules?: string | boolean | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean))[] | undefined;
        excludeAssets?: string | RegExp | ((args_0: string, args_1: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any) => boolean))[] | undefined;
        modulesSort?: string | undefined;
        chunkModulesSort?: string | undefined;
        nestedModulesSort?: string | undefined;
        chunksSort?: string | undefined;
        assetsSort?: string | undefined;
        performance?: boolean | undefined;
        env?: boolean | undefined;
        chunkGroupAuxiliary?: boolean | undefined;
        chunkGroupChildren?: boolean | undefined;
        chunkGroupMaxAssets?: number | undefined;
        dependentModules?: boolean | undefined;
        chunkOrigins?: boolean | undefined;
        runtime?: boolean | undefined;
        depth?: boolean | undefined;
        reasonsSpace?: number | undefined;
        groupReasonsByOrigin?: boolean | undefined;
        errorDetails?: boolean | undefined;
        errorStack?: boolean | undefined;
        moduleTrace?: boolean | undefined;
        cachedModules?: boolean | undefined;
        cachedAssets?: boolean | undefined;
        cached?: boolean | undefined;
        errorsSpace?: number | undefined;
        warningsSpace?: number | undefined;
    } | undefined;
    snapshot?: {} | undefined;
    optimization?: {
        splitChunks?: false | {
            name?: string | false | ((args_0: Module | undefined, ...args_1: unknown[]) => unknown) | undefined;
            chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
            usedExports?: boolean | undefined;
            maxSize?: number | Record<string, number> | undefined;
            defaultSizeTypes?: string[] | undefined;
            minChunks?: number | undefined;
            minSize?: number | Record<string, number> | undefined;
            maxAsyncSize?: number | Record<string, number> | undefined;
            maxInitialSize?: number | Record<string, number> | undefined;
            maxAsyncRequests?: number | undefined;
            maxInitialRequests?: number | undefined;
            automaticNameDelimiter?: string | undefined;
            cacheGroups?: Record<string, false | {
                type?: string | RegExp | undefined;
                filename?: string | undefined;
                name?: string | false | ((args_0: Module | undefined, ...args_1: unknown[]) => unknown) | undefined;
                priority?: number | undefined;
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                usedExports?: boolean | undefined;
                test?: string | RegExp | ((args_0: Module, ...args_1: unknown[]) => unknown) | undefined;
                enforce?: boolean | undefined;
                maxSize?: number | Record<string, number> | undefined;
                reuseExistingChunk?: boolean | undefined;
                idHint?: string | undefined;
                defaultSizeTypes?: string[] | undefined;
                minChunks?: number | undefined;
                minSize?: number | Record<string, number> | undefined;
                maxAsyncSize?: number | Record<string, number> | undefined;
                maxInitialSize?: number | Record<string, number> | undefined;
                maxAsyncRequests?: number | undefined;
                maxInitialRequests?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            }> | undefined;
            fallbackCacheGroup?: {
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                maxSize?: number | undefined;
                minSize?: number | undefined;
                maxAsyncSize?: number | undefined;
                maxInitialSize?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            } | undefined;
            hidePathInfo?: boolean | undefined;
        } | undefined;
        usedExports?: boolean | "global" | undefined;
        providedExports?: boolean | undefined;
        sideEffects?: boolean | "flag" | undefined;
        moduleIds?: "named" | "natural" | "deterministic" | undefined;
        chunkIds?: "named" | "natural" | "deterministic" | undefined;
        minimize?: boolean | undefined;
        minimizer?: (false | "" | 0 | t.RspackPluginInstance | "..." | t.WebpackPluginInstance | t.RspackPluginFunction | t.WebpackPluginFunction | null | undefined)[] | undefined;
        mergeDuplicateChunks?: boolean | undefined;
        runtimeChunk?: boolean | "single" | "multiple" | {
            name?: string | ((args_0: {
                name: string;
            }, ...args_1: unknown[]) => string) | undefined;
        } | undefined;
        removeAvailableModules?: boolean | undefined;
        removeEmptyChunks?: boolean | undefined;
        realContentHash?: boolean | undefined;
        concatenateModules?: boolean | undefined;
        innerGraph?: boolean | undefined;
        mangleExports?: boolean | "size" | "deterministic" | undefined;
        nodeEnv?: string | false | undefined;
        emitOnErrors?: boolean | undefined;
    } | undefined;
    resolveLoader?: t.ResolveOptions | undefined;
    plugins?: (false | "" | 0 | t.RspackPluginInstance | t.WebpackPluginInstance | t.RspackPluginFunction | t.WebpackPluginFunction | null | undefined)[] | undefined;
    devServer?: DevServer | undefined;
    bail?: boolean | undefined;
}, {
    context?: string | undefined;
    dependencies?: string[] | undefined;
    module?: {
        parser?: {
            javascript?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            css?: {
                namedExports?: boolean | undefined;
            } | undefined;
            "css/auto"?: {
                namedExports?: boolean | undefined;
            } | undefined;
            "css/module"?: {
                namedExports?: boolean | undefined;
            } | undefined;
            asset?: {
                dataUrlCondition?: {
                    maxSize?: number | undefined;
                } | undefined;
            } | undefined;
            "javascript/auto"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            "javascript/dynamic"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
            "javascript/esm"?: {
                url?: boolean | "relative" | undefined;
                dynamicImportMode?: "eager" | "lazy" | "weak" | "lazy-once" | undefined;
                dynamicImportPreload?: number | boolean | undefined;
                dynamicImportPrefetch?: number | boolean | undefined;
                dynamicImportFetchPriority?: "auto" | "low" | "high" | undefined;
                importMeta?: boolean | undefined;
                exprContextCritical?: boolean | undefined;
                wrappedContextCritical?: boolean | undefined;
                exportsPresence?: false | "auto" | "error" | "warn" | undefined;
                importExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                reexportExportsPresence?: false | "auto" | "error" | "warn" | undefined;
                strictExportPresence?: boolean | undefined;
                worker?: boolean | string[] | undefined;
                overrideStrict?: "strict" | "non-strict" | undefined;
                requireAsExpression?: boolean | undefined;
                requireDynamic?: boolean | undefined;
                requireResolve?: boolean | undefined;
                importDynamic?: boolean | undefined;
            } | undefined;
        } | Record<string, Record<string, any>> | undefined;
        generator?: Record<string, Record<string, any>> | {
            css?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
            } | undefined;
            "css/auto"?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            } | undefined;
            "css/module"?: {
                exportsOnly?: boolean | undefined;
                esModule?: boolean | undefined;
                exportsConvention?: "as-is" | "camel-case" | "camel-case-only" | "dashes" | "dashes-only" | undefined;
                localIdentName?: string | undefined;
            } | undefined;
            asset?: {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            } | undefined;
            "asset/inline"?: {
                dataUrl?: {
                    mimetype?: string | undefined;
                    encoding?: false | "base64" | undefined;
                } | ((args_0: {
                    filename: string;
                    content: string;
                }, ...args_1: unknown[]) => string) | undefined;
            } | undefined;
            "asset/resource"?: {
                filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
                emit?: boolean | undefined;
            } | undefined;
        } | undefined;
        rules?: (false | "" | 0 | "..." | RuleSetRule | null | undefined)[] | undefined;
        defaultRules?: (false | "" | 0 | "..." | RuleSetRule | null | undefined)[] | undefined;
        noParse?: string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
    } | undefined;
    name?: string | undefined;
    performance?: false | {
        assetFilter?: ((args_0: string, ...args_1: unknown[]) => boolean) | undefined;
        hints?: false | "error" | "warning" | undefined;
        maxAssetSize?: number | undefined;
        maxEntrypointSize?: number | undefined;
    } | undefined;
    entry?: string | string[] | Record<string, string | string[] | {
        import: string | string[];
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        layer?: string | null | undefined;
        runtime?: string | false | undefined;
        baseUri?: string | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        dependOn?: string | string[] | undefined;
    }> | ((...args: unknown[]) => string | string[] | Record<string, string | string[] | {
        import: string | string[];
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        layer?: string | null | undefined;
        runtime?: string | false | undefined;
        baseUri?: string | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        dependOn?: string | string[] | undefined;
    }> | Promise<string | string[] | Record<string, string | string[] | {
        import: string | string[];
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        layer?: string | null | undefined;
        runtime?: string | false | undefined;
        baseUri?: string | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        dependOn?: string | string[] | undefined;
    }>>) | undefined;
    node?: false | {
        global?: boolean | "warn" | undefined;
        __dirname?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
        __filename?: boolean | "warn-mock" | "mock" | "eval-only" | "node-module" | undefined;
    } | undefined;
    profile?: boolean | undefined;
    cache?: boolean | undefined;
    loader?: Record<string, any> | undefined;
    resolve?: t.ResolveOptions | undefined;
    output?: {
        module?: boolean | undefined;
        filename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        publicPath?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        environment?: {
            module?: boolean | undefined;
            arrowFunction?: boolean | undefined;
            asyncFunction?: boolean | undefined;
            bigIntLiteral?: boolean | undefined;
            const?: boolean | undefined;
            destructuring?: boolean | undefined;
            document?: boolean | undefined;
            dynamicImport?: boolean | undefined;
            dynamicImportInWorker?: boolean | undefined;
            forOf?: boolean | undefined;
            globalThis?: boolean | undefined;
            nodePrefixForCoreModules?: boolean | undefined;
            optionalChaining?: boolean | undefined;
            templateLiteral?: boolean | undefined;
        } | undefined;
        chunkFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        path?: string | undefined;
        auxiliaryComment?: string | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            commonjs2?: string | undefined;
            root?: string | undefined;
        } | undefined;
        umdNamedDefine?: boolean | undefined;
        chunkLoading?: string | false | undefined;
        asyncChunks?: boolean | undefined;
        wasmLoading?: string | false | undefined;
        library?: string | string[] | {
            commonjs?: string | undefined;
            amd?: string | undefined;
            root?: string | string[] | undefined;
        } | {
            type: string;
            name?: string | string[] | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                root?: string | string[] | undefined;
            } | undefined;
            amdContainer?: string | undefined;
            auxiliaryComment?: string | {
                commonjs?: string | undefined;
                amd?: string | undefined;
                commonjs2?: string | undefined;
                root?: string | undefined;
            } | undefined;
            export?: string | string[] | undefined;
            umdNamedDefine?: boolean | undefined;
        } | undefined;
        pathinfo?: boolean | "verbose" | undefined;
        clean?: boolean | undefined;
        crossOriginLoading?: false | "anonymous" | "use-credentials" | undefined;
        cssFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        cssHeadDataCompression?: boolean | undefined;
        cssChunkFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        hotUpdateMainFilename?: string | undefined;
        hotUpdateChunkFilename?: string | undefined;
        hotUpdateGlobal?: string | undefined;
        assetModuleFilename?: string | ((args_0: PathData, args_1: JsAssetInfo | undefined, ...args_2: unknown[]) => string) | undefined;
        uniqueName?: string | undefined;
        chunkLoadingGlobal?: string | undefined;
        enabledLibraryTypes?: string[] | undefined;
        libraryExport?: string | string[] | undefined;
        libraryTarget?: string | undefined;
        strictModuleExceptionHandling?: boolean | undefined;
        strictModuleErrorHandling?: boolean | undefined;
        globalObject?: string | undefined;
        importFunctionName?: string | undefined;
        importMetaName?: string | undefined;
        iife?: boolean | undefined;
        enabledWasmLoadingTypes?: string[] | undefined;
        webassemblyModuleFilename?: string | undefined;
        chunkFormat?: string | false | undefined;
        enabledChunkLoadingTypes?: string[] | undefined;
        trustedTypes?: string | true | {
            policyName?: string | undefined;
        } | undefined;
        sourceMapFilename?: string | undefined;
        hashDigest?: string | undefined;
        hashDigestLength?: number | undefined;
        hashFunction?: "xxhash64" | "md4" | undefined;
        hashSalt?: string | undefined;
        workerChunkLoading?: string | false | undefined;
        workerWasmLoading?: string | false | undefined;
        workerPublicPath?: string | undefined;
        scriptType?: false | "module" | "text/javascript" | undefined;
        devtoolNamespace?: string | undefined;
        devtoolModuleFilenameTemplate?: string | ((args_0: any) => any) | undefined;
        devtoolFallbackModuleFilenameTemplate?: string | ((args_0: any) => any) | undefined;
        chunkLoadTimeout?: number | undefined;
        charset?: boolean | undefined;
    } | undefined;
    target?: false | "es3" | "es5" | "es2015" | "es2016" | "es2017" | "es2018" | "es2019" | "es2020" | "es2021" | "es2022" | "node" | "async-node" | "web" | "webworker" | `node${number}` | `async-node${number}` | `node${number}.${number}` | `async-node${number}.${number}` | "electron-main" | `electron${number}-main` | `electron${number}.${number}-main` | "electron-renderer" | `electron${number}-renderer` | `electron${number}.${number}-renderer` | "electron-preload" | `electron${number}-preload` | `electron${number}.${number}-preload` | "nwjs" | `nwjs${number}` | `nwjs${number}.${number}` | "node-webkit" | `node-webkit${number}` | `node-webkit${number}.${number}` | "browserslist" | `browserslist:${string}` | ("es3" | "es5" | "es2015" | "es2016" | "es2017" | "es2018" | "es2019" | "es2020" | "es2021" | "es2022" | "node" | "async-node" | "web" | "webworker" | `node${number}` | `async-node${number}` | `node${number}.${number}` | `async-node${number}.${number}` | "electron-main" | `electron${number}-main` | `electron${number}.${number}-main` | "electron-renderer" | `electron${number}-renderer` | `electron${number}.${number}-renderer` | "electron-preload" | `electron${number}-preload` | `electron${number}.${number}-preload` | "nwjs" | `nwjs${number}` | `nwjs${number}.${number}` | "node-webkit" | `node-webkit${number}` | `node-webkit${number}.${number}` | "browserslist" | `browserslist:${string}`)[] | undefined;
    mode?: "none" | "development" | "production" | undefined;
    experiments?: {
        css?: boolean | undefined;
        lazyCompilation?: boolean | {
            entries?: boolean | undefined;
            test?: RegExp | ((args_0: Module, ...args_1: unknown[]) => boolean) | undefined;
            backend?: {
                client?: string | undefined;
                listen?: number | {
                    path?: string | undefined;
                    port?: number | undefined;
                    host?: string | undefined;
                    backlog?: number | undefined;
                    exclusive?: boolean | undefined;
                    readableAll?: boolean | undefined;
                    writableAll?: boolean | undefined;
                    ipv6Only?: boolean | undefined;
                } | undefined;
                protocol?: "http" | "https" | undefined;
            } | undefined;
            imports?: boolean | undefined;
        } | undefined;
        asyncWebAssembly?: boolean | undefined;
        outputModule?: boolean | undefined;
        topLevelAwait?: boolean | undefined;
        layers?: boolean | undefined;
        incremental?: boolean | {
            make?: boolean | undefined;
            providedExports?: boolean | undefined;
            emitAssets?: boolean | undefined;
            inferAsyncModules?: boolean | undefined;
            moduleHashes?: boolean | undefined;
            moduleCodegen?: boolean | undefined;
            moduleRuntimeRequirements?: boolean | undefined;
        } | undefined;
        futureDefaults?: boolean | undefined;
        rspackFuture?: {
            bundlerInfo?: {
                force?: boolean | ("version" | "uniqueId")[] | undefined;
                version?: string | undefined;
                bundler?: string | undefined;
            } | undefined;
        } | undefined;
    } | undefined;
    externals?: string | RegExp | Record<string, string | boolean | string[] | Record<string, string | string[]>> | ((args_0: {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }, args_1: (args_0: Error | undefined, args_1: string | boolean | string[] | Record<string, string | string[]> | undefined, args_2: "module" | "global" | "system" | "promise" | "commonjs" | "umd" | "amd" | "jsonp" | "import" | "var" | "assign" | "this" | "window" | "self" | "commonjs2" | "commonjs-module" | "commonjs-static" | "amd-require" | "umd2" | "module-import" | "script" | "node-commonjs" | undefined, ...args_3: unknown[]) => void, ...args_2: unknown[]) => unknown) | ((args_0: {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }, ...args_1: unknown[]) => Promise<string | boolean | string[] | Record<string, string | string[]>>) | (string | RegExp | Record<string, string | boolean | string[] | Record<string, string | string[]>> | ((args_0: {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }, args_1: (args_0: Error | undefined, args_1: string | boolean | string[] | Record<string, string | string[]> | undefined, args_2: "module" | "global" | "system" | "promise" | "commonjs" | "umd" | "amd" | "jsonp" | "import" | "var" | "assign" | "this" | "window" | "self" | "commonjs2" | "commonjs-module" | "commonjs-static" | "amd-require" | "umd2" | "module-import" | "script" | "node-commonjs" | undefined, ...args_3: unknown[]) => void, ...args_2: unknown[]) => unknown) | ((args_0: {
        request?: string | undefined;
        context?: string | undefined;
        dependencyType?: string | undefined;
        contextInfo?: {
            issuer: string;
        } | undefined;
    }, ...args_1: unknown[]) => Promise<string | boolean | string[] | Record<string, string | string[]>>))[] | undefined;
    externalsType?: "module" | "global" | "system" | "promise" | "commonjs" | "umd" | "amd" | "jsonp" | "import" | "var" | "assign" | "this" | "window" | "self" | "commonjs2" | "commonjs-module" | "commonjs-static" | "amd-require" | "umd2" | "module-import" | "script" | "node-commonjs" | undefined;
    externalsPresets?: {
        node?: boolean | undefined;
        web?: boolean | undefined;
        nwjs?: boolean | undefined;
        webAsync?: boolean | undefined;
        electron?: boolean | undefined;
        electronMain?: boolean | undefined;
        electronPreload?: boolean | undefined;
        electronRenderer?: boolean | undefined;
    } | undefined;
    infrastructureLogging?: {
        debug?: string | boolean | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
        colors?: boolean | undefined;
        appendOnly?: boolean | undefined;
        console?: Console | undefined;
        level?: "log" | "info" | "verbose" | "none" | "error" | "warn" | undefined;
        stream?: NodeJS.WritableStream | undefined;
    } | undefined;
    devtool?: false | "eval" | "cheap-source-map" | "cheap-module-source-map" | "source-map" | "inline-cheap-source-map" | "inline-cheap-module-source-map" | "inline-source-map" | "inline-nosources-cheap-source-map" | "inline-nosources-cheap-module-source-map" | "inline-nosources-source-map" | "nosources-cheap-source-map" | "nosources-cheap-module-source-map" | "nosources-source-map" | "hidden-nosources-cheap-source-map" | "hidden-nosources-cheap-module-source-map" | "hidden-nosources-source-map" | "hidden-cheap-source-map" | "hidden-cheap-module-source-map" | "hidden-source-map" | "eval-cheap-source-map" | "eval-cheap-module-source-map" | "eval-source-map" | "eval-nosources-cheap-source-map" | "eval-nosources-cheap-module-source-map" | "eval-nosources-source-map" | undefined;
    ignoreWarnings?: (RegExp | ((args_0: Error, args_1: Compilation, ...args_2: unknown[]) => boolean))[] | undefined;
    watchOptions?: {
        aggregateTimeout?: number | undefined;
        followSymlinks?: boolean | undefined;
        ignored?: string | RegExp | string[] | undefined;
        poll?: number | boolean | undefined;
        stdin?: boolean | undefined;
    } | undefined;
    watch?: boolean | undefined;
    stats?: boolean | "verbose" | "normal" | "none" | "errors-only" | "errors-warnings" | "minimal" | "detailed" | "summary" | {
        source?: boolean | undefined;
        publicPath?: boolean | undefined;
        all?: boolean | undefined;
        preset?: boolean | "verbose" | "normal" | "none" | "errors-only" | "errors-warnings" | "minimal" | "detailed" | "summary" | undefined;
        assets?: boolean | undefined;
        chunks?: boolean | undefined;
        modules?: boolean | undefined;
        entrypoints?: boolean | "auto" | undefined;
        chunkGroups?: boolean | undefined;
        warnings?: boolean | undefined;
        warningsCount?: boolean | undefined;
        errors?: boolean | undefined;
        errorsCount?: boolean | undefined;
        colors?: boolean | undefined;
        hash?: boolean | undefined;
        version?: boolean | undefined;
        reasons?: boolean | undefined;
        outputPath?: boolean | undefined;
        chunkModules?: boolean | undefined;
        chunkRelations?: boolean | undefined;
        ids?: boolean | undefined;
        timings?: boolean | undefined;
        builtAt?: boolean | undefined;
        moduleAssets?: boolean | undefined;
        nestedModules?: boolean | undefined;
        logging?: boolean | "log" | "info" | "verbose" | "none" | "error" | "warn" | undefined;
        loggingDebug?: string | boolean | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean) | (string | RegExp | ((args_0: string, ...args_1: unknown[]) => boolean))[] | undefined;
        loggingTrace?: boolean | undefined;
        runtimeModules?: boolean | undefined;
        children?: boolean | undefined;
        usedExports?: boolean | undefined;
        providedExports?: boolean | undefined;
        optimizationBailout?: boolean | undefined;
        groupModulesByType?: boolean | undefined;
        groupModulesByCacheStatus?: boolean | undefined;
        groupModulesByLayer?: boolean | undefined;
        groupModulesByAttributes?: boolean | undefined;
        groupModulesByPath?: boolean | undefined;
        groupModulesByExtension?: boolean | undefined;
        modulesSpace?: number | undefined;
        chunkModulesSpace?: number | undefined;
        nestedModulesSpace?: number | undefined;
        relatedAssets?: boolean | undefined;
        groupAssetsByEmitStatus?: boolean | undefined;
        groupAssetsByInfo?: boolean | undefined;
        groupAssetsByPath?: boolean | undefined;
        groupAssetsByExtension?: boolean | undefined;
        groupAssetsByChunk?: boolean | undefined;
        assetsSpace?: number | undefined;
        orphanModules?: boolean | undefined;
        excludeModules?: string | boolean | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any, args_2: any) => boolean))[] | undefined;
        excludeAssets?: string | RegExp | ((args_0: string, args_1: any) => boolean) | (string | RegExp | ((args_0: string, args_1: any) => boolean))[] | undefined;
        modulesSort?: string | undefined;
        chunkModulesSort?: string | undefined;
        nestedModulesSort?: string | undefined;
        chunksSort?: string | undefined;
        assetsSort?: string | undefined;
        performance?: boolean | undefined;
        env?: boolean | undefined;
        chunkGroupAuxiliary?: boolean | undefined;
        chunkGroupChildren?: boolean | undefined;
        chunkGroupMaxAssets?: number | undefined;
        dependentModules?: boolean | undefined;
        chunkOrigins?: boolean | undefined;
        runtime?: boolean | undefined;
        depth?: boolean | undefined;
        reasonsSpace?: number | undefined;
        groupReasonsByOrigin?: boolean | undefined;
        errorDetails?: boolean | undefined;
        errorStack?: boolean | undefined;
        moduleTrace?: boolean | undefined;
        cachedModules?: boolean | undefined;
        cachedAssets?: boolean | undefined;
        cached?: boolean | undefined;
        errorsSpace?: number | undefined;
        warningsSpace?: number | undefined;
    } | undefined;
    snapshot?: {} | undefined;
    optimization?: {
        splitChunks?: false | {
            name?: string | false | ((args_0: Module | undefined, ...args_1: unknown[]) => unknown) | undefined;
            chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
            usedExports?: boolean | undefined;
            maxSize?: number | Record<string, number> | undefined;
            defaultSizeTypes?: string[] | undefined;
            minChunks?: number | undefined;
            minSize?: number | Record<string, number> | undefined;
            maxAsyncSize?: number | Record<string, number> | undefined;
            maxInitialSize?: number | Record<string, number> | undefined;
            maxAsyncRequests?: number | undefined;
            maxInitialRequests?: number | undefined;
            automaticNameDelimiter?: string | undefined;
            cacheGroups?: Record<string, false | {
                type?: string | RegExp | undefined;
                filename?: string | undefined;
                name?: string | false | ((args_0: Module | undefined, ...args_1: unknown[]) => unknown) | undefined;
                priority?: number | undefined;
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                usedExports?: boolean | undefined;
                test?: string | RegExp | ((args_0: Module, ...args_1: unknown[]) => unknown) | undefined;
                enforce?: boolean | undefined;
                maxSize?: number | Record<string, number> | undefined;
                reuseExistingChunk?: boolean | undefined;
                idHint?: string | undefined;
                defaultSizeTypes?: string[] | undefined;
                minChunks?: number | undefined;
                minSize?: number | Record<string, number> | undefined;
                maxAsyncSize?: number | Record<string, number> | undefined;
                maxInitialSize?: number | Record<string, number> | undefined;
                maxAsyncRequests?: number | undefined;
                maxInitialRequests?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            }> | undefined;
            fallbackCacheGroup?: {
                chunks?: RegExp | "async" | "all" | "initial" | ((args_0: Chunk, ...args_1: unknown[]) => boolean) | undefined;
                maxSize?: number | undefined;
                minSize?: number | undefined;
                maxAsyncSize?: number | undefined;
                maxInitialSize?: number | undefined;
                automaticNameDelimiter?: string | undefined;
            } | undefined;
            hidePathInfo?: boolean | undefined;
        } | undefined;
        usedExports?: boolean | "global" | undefined;
        providedExports?: boolean | undefined;
        sideEffects?: boolean | "flag" | undefined;
        moduleIds?: "named" | "natural" | "deterministic" | undefined;
        chunkIds?: "named" | "natural" | "deterministic" | undefined;
        minimize?: boolean | undefined;
        minimizer?: (false | "" | 0 | t.RspackPluginInstance | "..." | t.WebpackPluginInstance | t.RspackPluginFunction | t.WebpackPluginFunction | null | undefined)[] | undefined;
        mergeDuplicateChunks?: boolean | undefined;
        runtimeChunk?: boolean | "single" | "multiple" | {
            name?: string | ((args_0: {
                name: string;
            }, ...args_1: unknown[]) => string) | undefined;
        } | undefined;
        removeAvailableModules?: boolean | undefined;
        removeEmptyChunks?: boolean | undefined;
        realContentHash?: boolean | undefined;
        concatenateModules?: boolean | undefined;
        innerGraph?: boolean | undefined;
        mangleExports?: boolean | "size" | "deterministic" | undefined;
        nodeEnv?: string | false | undefined;
        emitOnErrors?: boolean | undefined;
    } | undefined;
    resolveLoader?: t.ResolveOptions | undefined;
    plugins?: (false | "" | 0 | t.RspackPluginInstance | t.WebpackPluginInstance | t.RspackPluginFunction | t.WebpackPluginFunction | null | undefined)[] | undefined;
    devServer?: DevServer | undefined;
    bail?: boolean | undefined;
}>;
export type RspackOptions = z.infer<typeof rspackOptions>;
export type Configuration = RspackOptions;
