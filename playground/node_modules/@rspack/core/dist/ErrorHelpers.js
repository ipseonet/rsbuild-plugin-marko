"use strict";
/**
 * The following code is modified based on
 * https://github.com/webpack/webpack/blob/4b4ca3b/lib/ErrorHelpers.js
 *
 * MIT Licensed
 * Author Tobias Koppers @sokra
 * Copyright (c) JS Foundation and other contributors
 * https://github.com/webpack/webpack/blob/main/LICENSE
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.cleanUpWebpackOptions = exports.cleanUp = exports.cutOffMessage = exports.cutOffMultilineMessage = exports.cutOffWebpackOptions = exports.cutOffLoaderExecution = exports.cutOffByFlag = void 0;
const loaderFlag = "LOADER_EXECUTION";
const webpackOptionsFlag = "WEBPACK_OPTIONS";
const cutOffByFlag = (stack, flag) => {
    const stacks = stack.split("\n");
    for (let i = 0; i < stacks.length; i++) {
        if (stacks[i].includes(flag)) {
            stacks.length = i;
        }
    }
    return stacks.join("\n");
};
exports.cutOffByFlag = cutOffByFlag;
const cutOffLoaderExecution = (stack) => (0, exports.cutOffByFlag)(stack, loaderFlag);
exports.cutOffLoaderExecution = cutOffLoaderExecution;
const cutOffWebpackOptions = (stack) => (0, exports.cutOffByFlag)(stack, webpackOptionsFlag);
exports.cutOffWebpackOptions = cutOffWebpackOptions;
const cutOffMultilineMessage = (stack, message) => {
    const stacks = stack.split("\n");
    const messages = message.split("\n");
    const result = [];
    stacks.forEach((line, idx) => {
        if (!line.includes(messages[idx]))
            result.push(line);
    });
    return result.join("\n");
};
exports.cutOffMultilineMessage = cutOffMultilineMessage;
const cutOffMessage = (stack, message) => {
    const nextLine = stack.indexOf("\n");
    if (nextLine === -1) {
        return stack === message ? "" : stack;
    }
    const firstLine = stack.slice(0, nextLine);
    return firstLine === message ? stack.slice(nextLine + 1) : stack;
};
exports.cutOffMessage = cutOffMessage;
const cleanUp = (stack, message) => {
    let str = stack;
    str = (0, exports.cutOffLoaderExecution)(str);
    str = (0, exports.cutOffMessage)(str, message);
    return str;
};
exports.cleanUp = cleanUp;
const cleanUpWebpackOptions = (stack, message) => {
    let str = stack;
    str = (0, exports.cutOffWebpackOptions)(str);
    str = (0, exports.cutOffMultilineMessage)(str, message);
    return str;
};
exports.cleanUpWebpackOptions = cleanUpWebpackOptions;
