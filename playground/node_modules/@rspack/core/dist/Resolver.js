"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Resolver = void 0;
const config_1 = require("./config");
function isString(value) {
    return typeof value === "string";
}
class Resolver {
    constructor(binding) {
        this.binding = binding;
    }
    resolveSync(context, path, request) {
        return this.binding.resolveSync(path, request);
    }
    resolve(context, path, request, resolveContext, callback) {
        try {
            const res = this.binding.resolveSync(path, request);
            callback(null, res);
        }
        catch (err) {
            callback(err);
        }
    }
    withOptions({ dependencyCategory, resolveToContext, ...resolve }) {
        const rawResolve = (0, config_1.getRawResolve)(resolve);
        // TODO: rspack_resolver is unimplemented regex
        if (Array.isArray(rawResolve.restrictions)) {
            rawResolve.restrictions =
                rawResolve.restrictions.filter(isString);
        }
        const binding = this.binding.withOptions({
            dependencyCategory,
            resolveToContext,
            ...rawResolve
        });
        return new Resolver(binding);
    }
}
exports.Resolver = Resolver;
