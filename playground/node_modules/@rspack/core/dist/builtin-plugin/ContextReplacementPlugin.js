"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContextReplacementPlugin = void 0;
const binding_1 = require("@rspack/binding");
const base_1 = require("./base");
exports.ContextReplacementPlugin = (0, base_1.create)(binding_1.BuiltinPluginName.ContextReplacementPlugin, (resourceRegExp, newContentResource, newContentRecursive, newContentRegExp) => {
    const rawOptions = {
        resourceRegExp
    };
    if (typeof newContentResource === "function") {
        // rawOptions.newContentCallback = newContentResource;
    }
    else if (typeof newContentResource === "string" &&
        typeof newContentRecursive === "object") {
        rawOptions.newContentResource = newContentResource;
        rawOptions.newContentCreateContextMap = newContentRecursive;
    }
    else if (typeof newContentResource === "string" &&
        typeof newContentRecursive === "function") {
        rawOptions.newContentResource = newContentResource;
        // rawOptions.newContentCreateContextMap = newContentRecursive;
    }
    else {
        if (typeof newContentResource !== "string") {
            // biome-ignore lint/style/noParameterAssign: based on webpack's logic
            newContentRegExp = newContentRecursive;
            // biome-ignore lint/style/noParameterAssign: based on webpack's logic
            newContentRecursive = newContentResource;
            // biome-ignore lint/style/noParameterAssign: based on webpack's logic
            newContentResource = undefined;
        }
        if (typeof newContentRecursive !== "boolean") {
            // biome-ignore lint/style/noParameterAssign: based on webpack's logic
            newContentRegExp = newContentRecursive;
            // biome-ignore lint/style/noParameterAssign: based on webpack's logic
            newContentRecursive = undefined;
        }
        rawOptions.newContentResource = newContentResource;
        rawOptions.newContentRecursive = newContentRecursive;
        rawOptions.newContentRegExp = newContentRegExp;
    }
    return rawOptions;
});
