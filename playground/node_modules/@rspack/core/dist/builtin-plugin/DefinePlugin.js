"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefinePlugin = void 0;
const binding_1 = require("@rspack/binding");
const base_1 = require("./base");
exports.DefinePlugin = (0, base_1.create)(binding_1.BuiltinPluginName.DefinePlugin, function (define) {
    const supportsBigIntLiteral = this.options.output.environment?.bigIntLiteral ?? false;
    return normalizeValue(define, supportsBigIntLiteral);
}, "compilation");
const normalizeValue = (define, supportsBigIntLiteral) => {
    const normalizePrimitive = (p) => {
        if (p === undefined) {
            return "undefined";
        }
        if (Object.is(p, -0)) {
            return "-0";
        }
        if (p instanceof RegExp) {
            return p.toString();
        }
        if (typeof p === "function") {
            return `(${p.toString()})`;
        }
        if (typeof p === "bigint") {
            return supportsBigIntLiteral ? `${p}n` : `BigInt("${p}")`;
        }
        // assume `p` is a valid JSON value
        return p;
    };
    const normalizeObject = (define) => {
        if (Array.isArray(define)) {
            return define.map(normalizeObject);
        }
        if (define instanceof RegExp) {
            return normalizePrimitive(define);
        }
        if (define && typeof define === "object") {
            const keys = Object.keys(define);
            return Object.fromEntries(keys.map(k => [k, normalizeObject(define[k])]));
        }
        return normalizePrimitive(define);
    };
    return normalizeObject(define);
};
