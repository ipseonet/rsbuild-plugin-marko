"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DynamicEntryPlugin = void 0;
const binding_1 = require("@rspack/binding");
const EntryOptionPlugin_1 = __importDefault(require("../lib/EntryOptionPlugin"));
const EntryPlugin_1 = require("./EntryPlugin");
const base_1 = require("./base");
class DynamicEntryPlugin extends base_1.RspackBuiltinPlugin {
    constructor(context, entry) {
        super();
        this.context = context;
        this.entry = entry;
        this.name = binding_1.BuiltinPluginName.DynamicEntryPlugin;
        this.affectedHooks = "make";
    }
    raw(compiler) {
        const raw = {
            context: this.context,
            entry: async () => {
                const result = await this.entry();
                return Object.entries(result).map(([name, desc]) => {
                    const options = EntryOptionPlugin_1.default.entryDescriptionToOptions(compiler, name, desc);
                    return {
                        import: desc.import,
                        options: (0, EntryPlugin_1.getRawEntryOptions)(options)
                    };
                });
            }
        };
        return (0, base_1.createBuiltinPlugin)(this.name, raw);
    }
}
exports.DynamicEntryPlugin = DynamicEntryPlugin;
