"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _ResolverFactory_binding;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResolverFactory = void 0;
const binding = __importStar(require("@rspack/binding"));
const Resolver_1 = require("./Resolver");
const config_1 = require("./config");
class ResolverFactory {
    static __to_binding(resolver_factory) {
        return __classPrivateFieldGet(resolver_factory, _ResolverFactory_binding, "f");
    }
    constructor() {
        _ResolverFactory_binding.set(this, void 0);
        __classPrivateFieldSet(this, _ResolverFactory_binding, new binding.JsResolverFactory(), "f");
    }
    get(type, resolveOptions) {
        const { dependencyCategory, resolveToContext, ...resolve } = resolveOptions || {};
        const binding = __classPrivateFieldGet(this, _ResolverFactory_binding, "f").get(type, {
            ...(0, config_1.getRawResolve)(resolve),
            dependencyCategory,
            resolveToContext
        });
        return new Resolver_1.Resolver(binding);
    }
}
exports.ResolverFactory = ResolverFactory;
_ResolverFactory_binding = new WeakMap();
